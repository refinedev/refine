"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[88228],{58860:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>R});var r=n(37953);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=o,R=c["".concat(u,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(R,i(i({ref:t},p),{},{components:n})):r.createElement(R,i({ref:t},p))}));function R(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},47874:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>y,frontMatter:()=>s,metadata:()=>l,toc:()=>c});n(37953);var r=n(58860);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const s={title:"Create",swizzle:!0},u=void 0,l={unversionedId:"ui-integrations/material-ui/components/basic-views/create/index",id:"version-4.xx.xx/ui-integrations/material-ui/components/basic-views/create/index",title:"Create",description:"`` provides us a layout to display the page. It does not contain any logic and just adds extra functionalities like action buttons and giving titles to the page.",source:"@site/versioned_docs/version-4.xx.xx/ui-integrations/material-ui/components/basic-views/create/index.md",sourceDirName:"ui-integrations/material-ui/components/basic-views/create",slug:"/ui-integrations/material-ui/components/basic-views/create/",permalink:"/docs/4.xx.xx/ui-integrations/material-ui/components/basic-views/create/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-4.xx.xx/ui-integrations/material-ui/components/basic-views/create/index.md",tags:[],version:"4.xx.xx",lastUpdatedBy:"Alican Erdurmaz",lastUpdatedAt:1755000415,formattedLastUpdatedAt:"Aug 12, 2025",frontMatter:{title:"Create",swizzle:!0},sidebar:"mainSidebar",previous:{title:"Inferencer",permalink:"/docs/4.xx.xx/ui-integrations/material-ui/components/inferencer/"},next:{title:"Edit",permalink:"/docs/4.xx.xx/ui-integrations/material-ui/components/basic-views/edit/"}},p={},c=[{value:"Properties",id:"properties",level:2},{value:"title",id:"title",level:3},{value:"resource",id:"resource",level:3},{value:"saveButtonProps",id:"savebuttonprops",level:3},{value:"goBack",id:"goback",level:3},{value:"isLoading",id:"isloading",level:3},{value:"breadcrumb",id:"breadcrumb",level:3},{value:"wrapperProps",id:"wrapperprops",level:3},{value:"headerProps",id:"headerprops",level:3},{value:"contentProps",id:"contentprops",level:3},{value:"headerButtons",id:"headerbuttons",level:3},{value:"headerButtonProps",id:"headerbuttonprops",level:3},{value:"footerButtons",id:"footerbuttons",level:3},{value:"footerButtonProps",id:"footerbuttonprops",level:3},{value:"footerProps",id:"footerprops",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties-1",level:3}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",t)},m=d("DocThumbsUpDownFeedbackWidget"),R=d("PropsTable"),g={toc:c},h="wrapper";function y(e){var{components:t}=e,n=i(e,["components"]);return(0,r.yg)(h,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},g,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"<Create>")," provides us a layout to display the page. It does not contain any logic and just adds extra functionalities like action buttons and giving titles to the page."),(0,r.yg)("p",null,"We will show what ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create>")," does using properties with examples."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode url=http://localhost:3000/posts/create",live:!0,hideCode:!0,url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport React from "react";\nimport { Create, useAutocomplete } from "@refinedev/mui";\nimport { Autocomplete, Box, TextField } from "@mui/material";\nimport { useForm } from "@refinedev/react-hook-form";\nimport { Controller } from "react-hook-form";\nimport { Breadcrumb } from "@refinedev/mui";\nimport { useState } from "react";\n\nconst SampleCreate = () => {\n  const {\n    saveButtonProps,\n    refineCore: { formLoading },\n    register,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n    resource: "categories",\n  });\n\n  return (\n    <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("title", {\n            required: "This field is required",\n          })}\n          error={!!(errors as any)?.title}\n          helperText={(errors as any)?.title?.message}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            InputLabelProps: { shrink: true },\n          }}\n          type="text"\n          label="Title"\n          name="title"\n        />\n        <TextField\n          {...register("content", {\n            required: "This field is required",\n          })}\n          error={!!(errors as any)?.content}\n          helperText={(errors as any)?.content?.message}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            InputLabelProps: { shrink: true },\n          }}\n          multiline\n          label="Content"\n          name="content"\n        />\n        <Controller\n          control={control}\n          name="category"\n          rules={{ required: "This field is required" }}\n          // eslint-disable-next-line\n          defaultValue={null as any}\n          render={({ field }) => (\n            <Autocomplete\n              {...categoryAutocompleteProps}\n              {...field}\n              onChange={(_, value) => {\n                field.onChange(value);\n              }}\n              getOptionLabel={(item) => {\n                return (\n                  categoryAutocompleteProps?.options?.find(\n                    (p) => p?.id?.toString() === item?.id?.toString(),\n                  )?.title ?? ""\n                );\n              }}\n              isOptionEqualToValue={(option, value) =>\n                value === undefined ||\n                option?.id?.toString() === (value?.id ?? value)?.toString()\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label="Category"\n                  margin="normal"\n                  variant="outlined"\n                  error={!!(errors as any)?.category?.id}\n                  helperText={(errors as any)?.category?.id?.message}\n                  required\n                />\n              )}\n            />\n          )}\n        />\n      </Box>\n      <Breadcrumb />\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n        {\n          name: "categories",\n          list: "/categories",\n          create: "/categories/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<SampleCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,r.yg)("admonition",{title:"Good to know",type:"simple"},(0,r.yg)("p",{parentName:"admonition"},"You can swizzle this component with the ",(0,r.yg)("a",{parentName:"p",href:"/docs/packages/list-of-packages"},(0,r.yg)("strong",{parentName:"a"},"Refine CLI"))," to customize it.")),(0,r.yg)("h2",{id:"properties"},"Properties"),(0,r.yg)("h3",{id:"title"},"title"),(0,r.yg)(m,{id:"title",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the title of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"title")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-next-line\n      title="Custom Title"\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h3",{id:"resource"},"resource"),(0,r.yg)(m,{id:"resource",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"resource")," property determines which resource to use for the form. By default, it uses the resource from the route. If you want to use a different resource, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"resource")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-next-line\n      resource="categories"\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n        {\n          name: "categories",\n          list: "/categories",\n          create: "/categories/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h3",{id:"savebuttonprops"},"saveButtonProps"),(0,r.yg)(m,{id:"savebuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the save button by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"saveButtonProps")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      saveButtonProps={{\n        size: "large",\n        variant: "contained",\n        color: "secondary",\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,r.yg)("a",{parentName:"p",href:"/docs/ui-integrations/material-ui/components/buttons/save-button"},(0,r.yg)("inlineCode",{parentName:"a"},"<SaveButton>")," documentation ","\u2192")))),(0,r.yg)("h3",{id:"goback"},"goBack"),(0,r.yg)(m,{id:"goback",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"goBack")," property determines whether to display a back button in the header. If you want to hide the back button, you can set ",(0,r.yg)("inlineCode",{parentName:"p"},"goBack")," to ",(0,r.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-next-line\n      goBack={false}\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h3",{id:"isloading"},"isLoading"),(0,r.yg)(m,{id:"isloading",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"To show a loading state, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"isLoading")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\nimport { useState } from "react";\n\nconst PostCreate: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n\n  return (\n    <Create\n      // highlight-next-line\n      isLoading={loading}\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h3",{id:"breadcrumb"},"breadcrumb"),(0,r.yg)(m,{id:"breadcrumb",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"To customize or disable the breadcrumb, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"breadcrumb")," property. By default, it uses the ",(0,r.yg)("inlineCode",{parentName:"p"},"Breadcrumb")," component from ",(0,r.yg)("inlineCode",{parentName:"p"},"@refinedev/mui")," package."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\nimport { Breadcrumb } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      breadcrumb={\n        <div\n          style={{\n            padding: "3px 6px",\n            border: "2px dashed #888",\n          }}\n        >\n          <Breadcrumb />\n        </div>\n      }\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,r.yg)("a",{parentName:"p",href:"/docs/ui-integrations/material-ui/components/breadcrumb"},(0,r.yg)("inlineCode",{parentName:"a"},"Breadcrumb")," documentation ","\u2192")))),(0,r.yg)("h3",{id:"wrapperprops"},"wrapperProps"),(0,r.yg)(m,{id:"wrapperprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"If you want to customize the wrapper of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"wrapperProps")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      wrapperProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,r.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card/"},(0,r.yg)("inlineCode",{parentName:"a"},"Card")," documentation from Material UI ","\u2192")))),(0,r.yg)("h3",{id:"headerprops"},"headerProps"),(0,r.yg)(m,{id:"headerprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"If you want to customize the header of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"headerProps")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,r.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-header/"},(0,r.yg)("inlineCode",{parentName:"a"},"CardHeader")," documentation from Material UI ","\u2192")))),(0,r.yg)("h3",{id:"contentprops"},"contentProps"),(0,r.yg)(m,{id:"contentprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"If you want to customize the content of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"contentProps")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      contentProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,r.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-content/"},(0,r.yg)("inlineCode",{parentName:"a"},"CardContent")," documentation from Material UI ","\u2192")))),(0,r.yg)("h3",{id:"headerbuttons"},"headerButtons"),(0,r.yg)(m,{id:"headerbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the buttons at the header by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"headerButtons")," property. It accepts ",(0,r.yg)("inlineCode",{parentName:"p"},"false")," or a function that returns ",(0,r.yg)("inlineCode",{parentName:"p"},"ReactNode"),"."),(0,r.yg)("p",null,"By default, the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component has a ",(0,r.yg)("inlineCode",{parentName:"p"},"list")," button in the header."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\nimport { Button } from "@mui/material";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button\n            variant="contained"\n            onClick={() => {\n              console.log("Custom button clicked");\n            }}\n          >\n            Custom Button\n          </Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h3",{id:"headerbuttonprops"},"headerButtonProps"),(0,r.yg)(m,{id:"headerbuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the list button at the header by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"headerButtonProps")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerButtonProps={{\n        listButtonProps: {\n          size: "large",\n          variant: "contained",\n          color: "secondary",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h3",{id:"footerbuttons"},"footerButtons"),(0,r.yg)(m,{id:"footerbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the buttons at the footer by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"footerButtons")," property. It accepts ",(0,r.yg)("inlineCode",{parentName:"p"},"false")," or a function that returns ",(0,r.yg)("inlineCode",{parentName:"p"},"ReactNode"),"."),(0,r.yg)("p",null,"By default, the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component has a ",(0,r.yg)("inlineCode",{parentName:"p"},"save")," button at the footer."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\nimport { Button } from "@mui/material";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      footerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button\n            variant="contained"\n            onClick={() => {\n              console.log("Custom button clicked");\n            }}\n          >\n            Custom Button\n          </Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h3",{id:"footerbuttonprops"},"footerButtonProps"),(0,r.yg)(m,{id:"footerbuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the save button at the footer by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"footerButtonProps")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      footerButtonProps={{\n        saveButtonProps: {\n          size: "large",\n          variant: "contained",\n          color: "secondary",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h3",{id:"footerprops"},"footerProps"),(0,r.yg)(m,{id:"footerprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"If you want to customize the footer of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"footerProps")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mui";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      footerProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMui.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,r.yg)("h2",{id:"api-reference"},"API Reference"),(0,r.yg)("h3",{id:"properties-1"},"Properties"),(0,r.yg)(m,{id:"properties-1",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)(R,{module:"@refinedev/mui/Create","goBack-default":"`<ArrowLeft />`",mdxType:"PropsTable"}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live shared",live:!0,shared:!0},'const SampleList = () => {\n  const { dataGridProps } = RefineMui.useDataGrid();\n\n  const { data: categoryData, isLoading: categoryIsLoading } =\n    RefineCore.useMany({\n      resource: "categories",\n      ids: dataGridProps?.rows?.map((item: any) => item?.category?.id) ?? [],\n      queryOptions: {\n        enabled: !!dataGridProps?.rows,\n      },\n    });\n\n  const columns = React.useMemo<GridColDef<any>[]>(\n    () => [\n      {\n        field: "id",\n        headerName: "Id",\n        type: "number",\n        minWidth: 50,\n      },\n      {\n        field: "title",\n        headerName: "Title",\n        minWidth: 200,\n      },\n      {\n        field: "category",\n        headerName: "Category",\n        valueGetter: ({ row }) => {\n          const value = row?.category?.id;\n\n          return value;\n        },\n        minWidth: 300,\n        display: "flex",\n        renderCell: function render({ value }) {\n          return categoryIsLoading ? (\n            <>Loading...</>\n          ) : (\n            categoryData?.data?.find((item) => item.id === value)?.title\n          );\n        },\n      },\n      {\n        field: "createdAt",\n        headerName: "Created At",\n        minWidth: 250,\n        display: "flex",\n        renderCell: function render({ value }) {\n          return <RefineMui.DateField value={value} />;\n        },\n      },\n    ],\n    [categoryData?.data],\n  );\n\n  return (\n    <RefineMui.List>\n      <MuiXDataGrid.DataGrid {...dataGridProps} columns={columns} />\n    </RefineMui.List>\n  );\n};\n'))))}y.isMDXComponent=!0}}]);