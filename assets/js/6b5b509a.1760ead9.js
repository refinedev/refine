"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[69251],{58860:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var r=n(37953);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=s(n),u=a,m=g["".concat(d,".").concat(u)]||g[u]||p[u]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[g]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},25971:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>g});n(37953);var r=n(58860);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const l={title:"Create",source:"https://github.com/refinedev/refine/tree/main/packages/refine-ui/registry/new-york/refine-ui/views/create-view.tsx"},d=void 0,s={unversionedId:"ui-integrations/shadcn/components/basic-views/create/index",id:"ui-integrations/shadcn/components/basic-views/create/index",title:"Create",description:"`` provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.",source:"@site/docs/ui-integrations/shadcn/components/basic-views/create/index.md",sourceDirName:"ui-integrations/shadcn/components/basic-views/create",slug:"/ui-integrations/shadcn/components/basic-views/create/",permalink:"/docs/ui-integrations/shadcn/components/basic-views/create/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/docs/ui-integrations/shadcn/components/basic-views/create/index.md",tags:[],version:"current",lastUpdatedBy:"\xd6zg\xfcr Ak\xe7a",lastUpdatedAt:1758111044,formattedLastUpdatedAt:"Sep 17, 2025",frontMatter:{title:"Create",source:"https://github.com/refinedev/refine/tree/main/packages/refine-ui/registry/new-york/refine-ui/views/create-view.tsx"},sidebar:"mainSidebar",previous:{title:"Refine + shadcn/ui",permalink:"/docs/ui-integrations/shadcn/introduction/"},next:{title:"Edit",permalink:"/docs/ui-integrations/shadcn/components/basic-views/edit/"}},c={},g=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"CreateView Properties",id:"createview-properties",level:3},{value:"CreateViewHeader Properties",id:"createviewheader-properties",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Title",id:"custom-title",level:3},{value:"Hide Breadcrumb",id:"hide-breadcrumb",level:3},{value:"Custom CSS Classes",id:"custom-css-classes",level:3},{value:"With Form Loading State",id:"with-form-loading-state",level:3}],p=(u="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",e)});var u;const m={toc:g},y="wrapper";function f(e){var{components:t}=e,n=o(e,["components"]);return(0,r.yg)(y,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},m,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"<CreateView />")," provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page."),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"CreateView")," component is designed for building record creation pages with automatic navigation, resource integration, and breadcrumb navigation."),(0,r.yg)("h2",{id:"installation"},"Installation"),(0,r.yg)(p,{id:"installation",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npx shadcn@latest add https://ui.refine.dev/r/views.json\n")),(0,r.yg)("p",null,"This will install all view components including ",(0,r.yg)("inlineCode",{parentName:"p"},"CreateView"),".")),(0,r.yg)("h2",{id:"usage"},"Usage"),(0,r.yg)(p,{id:"usage",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'import {\n  CreateView,\n  CreateViewHeader,\n} from "@/components/refine-ui/views/create-view";\nimport { LoadingOverlay } from "@/components/refine-ui/layout/loading-overlay";\n\nexport default function PostCreatePage() {\n  const formLoading = false; // or true, based on your form submission state\n\n  return (\n    <CreateView>\n      <CreateViewHeader />\n      <LoadingOverlay loading={formLoading}>\n        {/* Record content (e.g., Create Form) */}\n      </LoadingOverlay>\n    </CreateView>\n  );\n}\n'))),(0,r.yg)("h2",{id:"features"},"Features"),(0,r.yg)(p,{id:"features",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Automatic Navigation"),": Back button functionality via ",(0,r.yg)("inlineCode",{parentName:"li"},"useBack()")," hook"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Resource Integration"),": Automatic resource detection and title generation"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Breadcrumb Navigation"),": Built-in breadcrumb component"))),(0,r.yg)("h2",{id:"api-reference"},"API Reference"),(0,r.yg)("h3",{id:"createview-properties"},"CreateView Properties"),(0,r.yg)(p,{id:"createview-properties",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Prop"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"children")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"ReactNode")),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"Content to render inside the view")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"className")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"Additional CSS classes for the container"))))),(0,r.yg)("h3",{id:"createviewheader-properties"},"CreateViewHeader Properties"),(0,r.yg)(p,{id:"createviewheader-properties",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Prop"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"resource")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Current resource"),(0,r.yg)("td",{parentName:"tr",align:null},"Override the resource name for title and actions")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"title")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Auto-generated"),(0,r.yg)("td",{parentName:"tr",align:null},"Custom title for the header")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"hideBreadcrumb")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},"Set to ",(0,r.yg)("inlineCode",{parentName:"td"},"true")," to hide the breadcrumb")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"wrapperClassName")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"CSS classes for the header's main wrapper div")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"headerClassName")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"CSS classes for the div containing title and actions"))))),(0,r.yg)("h2",{id:"advanced-usage"},"Advanced Usage"),(0,r.yg)("h3",{id:"custom-title"},"Custom Title"),(0,r.yg)(p,{id:"custom-title",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'import {\n  CreateView,\n  CreateViewHeader,\n} from "@/components/refine-ui/views/create-view";\n\nexport default function PostCreatePage() {\n  return (\n    <CreateView>\n      <CreateViewHeader title="Add New Post" />\n      {/* Your create form */}\n    </CreateView>\n  );\n}\n'))),(0,r.yg)("h3",{id:"hide-breadcrumb"},"Hide Breadcrumb"),(0,r.yg)(p,{id:"hide-breadcrumb",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"<CreateViewHeader hideBreadcrumb={true} />\n"))),(0,r.yg)("h3",{id:"custom-css-classes"},"Custom CSS Classes"),(0,r.yg)(p,{id:"custom-css-classes",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'<CreateView className="my-custom-create">\n  <CreateViewHeader\n    wrapperClassName="custom-header-wrapper"\n    headerClassName="custom-header-content"\n  />\n</CreateView>\n'))),(0,r.yg)("h3",{id:"with-form-loading-state"},"With Form Loading State"),(0,r.yg)(p,{id:"with-form-loading-state",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'import { useForm } from "@refinedev/react-hook-form";\n\nexport default function PostCreatePage() {\n  const {\n    refineCore: { formLoading },\n  } = useForm();\n\n  return (\n    <CreateView>\n      <CreateViewHeader />\n      <LoadingOverlay loading={formLoading}>\n        {/* Your form content */}\n      </LoadingOverlay>\n    </CreateView>\n  );\n}\n'))))}f.isMDXComponent=!0}}]);