"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[17780],{58860:(e,n,a)=>{a.d(n,{xA:()=>d,yg:()=>p});var t=a(37953);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=t.createContext({}),c=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=o,p=u["".concat(s,".").concat(m)]||u[m]||g[m]||r;return a?t.createElement(p,i(i({ref:n},d),{},{components:a})):t.createElement(p,i({ref:n},d))}));function p(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},54506:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>u});a(37953);var t=a(58860);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))})),e}function i(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}const l={title:"Docker Cheat Sheet - Most Commonly Used Commands",description:"A reference guide highlighting essential Docker commands to streamline container management tasks efficiently.",slug:"docker-cheat-sheet",authors:"muhammad_khabbab",tags:["kubernetes","docker"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-02-12-docker-cheat-sheet/social.png",hide_table_of_contents:!1},s=void 0,c={permalink:"/blog/docker-cheat-sheet",source:"@site/blog/2024-02-12-docker-cheat-sheet.md",title:"Docker Cheat Sheet - Most Commonly Used Commands",description:"A reference guide highlighting essential Docker commands to streamline container management tasks efficiently.",date:"2024-02-12T00:00:00.000Z",formattedDate:"February 12, 2024",tags:[{label:"kubernetes",permalink:"/blog/tags/kubernetes"},{label:"docker",permalink:"/blog/tags/docker"}],readingTime:7.675,hasTruncateMarker:!1,authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],frontMatter:{title:"Docker Cheat Sheet - Most Commonly Used Commands",description:"A reference guide highlighting essential Docker commands to streamline container management tasks efficiently.",slug:"docker-cheat-sheet",authors:"muhammad_khabbab",tags:["kubernetes","docker"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-02-12-docker-cheat-sheet/social.png",hide_table_of_contents:!1},prevItem:{title:"10 Methods for Vertical Alignment Using CSS",permalink:"/blog/css-vertical-align"},nextItem:{title:"Docker Alternatives",permalink:"/blog/docker-alternatives"},relatedPosts:[{title:"Docker Swarm Mode Guide",description:"We'll cover the basics of Docker Swarm mode, including how to set up your first Swarm, join nodes to the Swarm, deploy services, scale services, and monitor services.",permalink:"/blog/docker-swarm",formattedDate:"October 5, 2023",authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],readingTime:9.53,date:"2023-10-05T00:00:00.000Z"},{title:"Check Kubernetes Version - Advanced Use Cases with kubectl version",description:"Kubectl version is a very basic command, however, you might still face some errors like connection issues, version mismatches, or configuration problems. Here are some steps to debug these common errors.",permalink:"/blog/kubectl-version",formattedDate:"January 5, 2024",authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],readingTime:6.98,date:"2024-01-05T00:00:00.000Z"},{title:"A complete guide to Kubectl exec",description:"We'll go over the basics of kubectl exec, including its syntax, parameters, and how to use it to interact with containers in a Kubernetes pod.",permalink:"/blog/kubectl-exec-command",formattedDate:"October 19, 2023",authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],readingTime:9.53,date:"2023-10-19T00:00:00.000Z"}],authorPosts:[{title:"Why you should prefer using pnpm over npm and yarn?",description:"The advantages of pnpm and comparison guide.",permalink:"/blog/pnpm-vs-npm-and-yarn",formattedDate:"July 2, 2024",authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],readingTime:11.295,date:"2024-07-02T00:00:00.000Z"},{title:"Introduction to Nest JS",description:"In this article, we will discuss how to create a simple web application using NestJS and its major components.",permalink:"/blog/nest-js",formattedDate:"April 29, 2024",authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],readingTime:9.14,date:"2024-04-29T00:00:00.000Z"},{title:"Kubernetes vs Docker - A Detailed Comparison",description:"Explore an in-depth comparison between Docker and Kubernetes, focusing on their unique features, advantages, and ideal use scenarios.",permalink:"/blog/kubernetes-vs-docker",formattedDate:"January 26, 2024",authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],readingTime:14.36,date:"2024-01-26T00:00:00.000Z"}]},d={authorsImageUrls:[void 0]},u=[{value:"Introduction",id:"introduction",level:2},{value:"Setting Up and Configuring Docker",id:"setting-up-and-configuring-docker",level:2},{value:"Installation",id:"installation",level:3},{value:"Version Check",id:"version-check",level:3},{value:"Working with Docker Images",id:"working-with-docker-images",level:2},{value:"Searching for Images",id:"searching-for-images",level:3},{value:"Pulling an Image",id:"pulling-an-image",level:3},{value:"Listing Images",id:"listing-images",level:3},{value:"Removing an Image",id:"removing-an-image",level:3},{value:"Managing Containers",id:"managing-containers",level:2},{value:"Running a Container",id:"running-a-container",level:3},{value:"Listing Running Containers",id:"listing-running-containers",level:3},{value:"Listing All Containers",id:"listing-all-containers",level:3},{value:"Stopping a Container",id:"stopping-a-container",level:3},{value:"Removing a Container",id:"removing-a-container",level:3},{value:"Docker Networking",id:"docker-networking",level:2},{value:"Listing Networks",id:"listing-networks",level:3},{value:"Inspecting a Network",id:"inspecting-a-network",level:3},{value:"Creating a Network",id:"creating-a-network",level:3},{value:"Volumes and Data Management",id:"volumes-and-data-management",level:2},{value:"Creating a Volume",id:"creating-a-volume",level:3},{value:"Listing Volumes",id:"listing-volumes",level:3},{value:"Inspecting a Volume",id:"inspecting-a-volume",level:3},{value:"Docker Compose and Dockerfile",id:"docker-compose-and-dockerfile",level:2},{value:"Running Docker Compose",id:"running-docker-compose",level:3},{value:"Stopping Docker Compose Services",id:"stopping-docker-compose-services",level:3},{value:"Dockerfile",id:"dockerfile",level:3},{value:"Building an Image from a Dockerfile",id:"building-an-image-from-a-dockerfile",level:4},{value:"Cleaning Up",id:"cleaning-up",level:3},{value:"Removing Unused Docker Objects",id:"removing-unused-docker-objects",level:3},{value:"Conclusion",id:"conclusion",level:2}],g={toc:u},m="wrapper";function p(e){var{components:n}=e,a=i(e,["components"]);return(0,t.yg)(m,r(function(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{},t=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),t.forEach((function(n){o(e,n,a[n])}))}return e}({},g,a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h2",{id:"introduction"},"Introduction"),(0,t.yg)("p",null,"This article will serve us a quick cheat sheet for developers using dockers in their applications. All the major commands related to networking, containers, volumes, images will be discussed along with the sample output for each command. You should bookmark this article as quick guide for Docker common commands which are part of every developer's routine. Let's get started."),(0,t.yg)("h2",{id:"setting-up-and-configuring-docker"},"Setting Up and Configuring Docker"),(0,t.yg)("h3",{id:"installation"},"Installation"),(0,t.yg)("p",null,"The command to install Docker varies depending on your operating system. For instance, on Ubuntu, you'd use ",(0,t.yg)("inlineCode",{parentName:"p"},"sudo apt-get install docker-ce"),". On CentOS, it would be ",(0,t.yg)("inlineCode",{parentName:"p"},"sudo yum install docker"),". For windows, you can use Docker desktop."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Expert Tip:")," You will need to have user permissions to execute Docker commands or the use of sudo in environments where the user is not part of the docker group."),(0,t.yg)("h3",{id:"version-check"},"Version Check"),(0,t.yg)("p",null,"To verify your Docker installation and check its version, run ",(0,t.yg)("inlineCode",{parentName:"p"},"docker --version"),". You should see something like this: ",(0,t.yg)("inlineCode",{parentName:"p"},"Docker version 20.10.5, build 55c4c88"),"."),(0,t.yg)("h2",{id:"working-with-docker-images"},"Working with Docker Images"),(0,t.yg)("h3",{id:"searching-for-images"},"Searching for Images"),(0,t.yg)("p",null,"To search Docker Hub for images, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker search <image-name>"),". For example, ",(0,t.yg)("inlineCode",{parentName:"p"},"docker search ubuntu")," will return a list of available Ubuntu images."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'$ docker search ubuntu\nNAME                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED\nubuntu                            Ubuntu is a Debian-based Linux operating sys\u2026   11486     [OK]\ndorowu/ubuntu-desktop-lxde-vnc    Docker image to provide HTML5 VNC interface \u2026   438                  [OK]\nrastasheep/ubuntu-sshd            Dockerized SSH service, built on top of offi\u2026   246                  [OK]\nconsol/ubuntu-xfce-vnc            Ubuntu container with "headless" VNC session\u2026   240                  [OK]\n')),(0,t.yg)("h3",{id:"pulling-an-image"},"Pulling an Image"),(0,t.yg)("p",null,"To download an image from Docker Hub, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker pull <image-name>"),". For instance, ",(0,t.yg)("inlineCode",{parentName:"p"},"docker pull ubuntu")," will download the latest Ubuntu image. You\u2019ll see the download progress and a message when it\u2019s complete."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ docker pull ubuntu\nUsing default tag: latest\nlatest: Pulling from library/ubuntu\nDigest: sha256:adf73ca014822ad8237623d388cedf4d5346aa72c270c5acc01431cc93e18e2ba\nStatus: Downloaded newer image for ubuntu:latest\ndocker.io/library/ubuntu:latest\n\n")),(0,t.yg)("h3",{id:"listing-images"},"Listing Images"),(0,t.yg)("p",null,"To display all images downloaded on your system, run ",(0,t.yg)("inlineCode",{parentName:"p"},"docker images"),". This will display a list of all images, along with their repository, tag, ID, creation date, and size. For example, after pulling the Ubuntu image, running ",(0,t.yg)("inlineCode",{parentName:"p"},"docker images")," might show something like this:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nubuntu              latest              4e5021d210f6        2 weeks ago         64.2MB\n\n")),(0,t.yg)("h3",{id:"removing-an-image"},"Removing an Image"),(0,t.yg)("p",null,"To delete an image from your local storage, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker rmi <image-name>"),". For example, ",(0,t.yg)("inlineCode",{parentName:"p"},"docker rmi ubuntu")," will remove the Ubuntu image. You\u2019ll get a confirmation message once it\u2019s removed."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ docker rmi ubuntu\nUntagged: ubuntu:latest\nUntagged: ubuntu@sha256:adf73ca014822ad8237623d388cedf4d5346aa72c270c5acc01431cc93e18e2ba\nDeleted: sha256:4e5021d210f6a5119055cfb8e6c5e34be10e23a3db291c6a695f2c9cc40a8a66\nDeleted: sha256:0b1edfbffd27c935a66664f7a4e3b25c2fc8a5739fa5e640b1768b129a2f60a9\nDeleted: sha256:ba3557a56b150f9b813f9d02274d62914fd8fce120dd374d9ee17b87cf1a783d\nDeleted: sha256:5bd56d818842930a650377334a15b6e2050f593e15a478c5b44976c2e59e293b\nDeleted: sha256:22e2898808471c9a3a8ba9f9f8d7e0228303cf3a7c3a0a0898d55c6a50cbb8e6\n")),(0,t.yg)("h2",{id:"managing-containers"},"Managing Containers"),(0,t.yg)("h3",{id:"running-a-container"},"Running a Container"),(0,t.yg)("p",null,"To start a new container from an image, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker run <options> <image-name>"),". For example, ",(0,t.yg)("inlineCode",{parentName:"p"},"docker run -d -p 80:80 nginx")," will start a new container from the nginx image in detached mode and map port 80 of the container to port 80 of the host."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ docker run -d -p 80:80 nginx\nUnable to find image 'nginx:latest' locally\nlatest: Pulling from library/nginx\nDigest: sha256:23b4dcdf0d34d4a129755fc6f52e1c6e23bb34ea011b315d87e193033bcd1b68\nStatus: Downloaded newer image for nginx:latest\nd9a23308c7d2e5c0aadd7813de3c5b7a3c3a7a2b2b1bbe1a3ab3e6f6e0a2e020\n\n")),(0,t.yg)("h3",{id:"listing-running-containers"},"Listing Running Containers"),(0,t.yg)("p",null,"To view all active containers, run ",(0,t.yg)("inlineCode",{parentName:"p"},"docker ps"),". This will display a list of running containers along with their ID, image, command, creation time, status, ports, and names."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'$ docker ps\nCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                               NAMES\nd9a23308c7d2   nginx     "/docker-entrypoint.\u2026"   36 seconds ago   Up 35 seconds   0.0.0.0:80->80/tcp, :::80->80/tcp   serene_leavitt\n')),(0,t.yg)("h3",{id:"listing-all-containers"},"Listing All Containers"),(0,t.yg)("p",null,"To include inactive containers in the list, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker ps -a"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'$ docker ps -a\nCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                      PORTS     NAMES\nd9a23308c7d2   nginx     "/docker-entrypoint.\u2026"   36 seconds ago   Up 35 seconds               80/tcp    serene_leavitt\n45a1529327b2   ubuntu    "/bin/bash"              2 days ago        Exited (0) 2 days ago                 nostalgic_morse\n')),(0,t.yg)("h3",{id:"stopping-a-container"},"Stopping a Container"),(0,t.yg)("p",null,"To halt a running container, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker stop <container-id>"),". For example, ",(0,t.yg)("inlineCode",{parentName:"p"},"docker stop d9a23308c7d2")," will stop the container with the ID ",(0,t.yg)("inlineCode",{parentName:"p"},"d9a23308c7d2"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ docker stop d9a23308c7d2\nd9a23308c7d2\n")),(0,t.yg)("h3",{id:"removing-a-container"},"Removing a Container"),(0,t.yg)("p",null,"To delete a container from the system, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker rm <container-id>"),". For example, ",(0,t.yg)("inlineCode",{parentName:"p"},"docker rm d9a23308c7d2")," will remove the container with the ID ",(0,t.yg)("inlineCode",{parentName:"p"},"d9a23308c7d2"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ docker rm d9a23308c7d2\nd9a23308c7d2\n")),(0,t.yg)("h2",{id:"docker-networking"},"Docker Networking"),(0,t.yg)("h3",{id:"listing-networks"},"Listing Networks"),(0,t.yg)("p",null,"To display all Docker networks, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker network ls"),". This will show a list of networks along with their ID, name, and driver."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ docker network ls\nNETWORK ID     NAME      DRIVER    SCOPE\n7fca4eb8c647   bridge    bridge    local\n9f904ee27bf5   host      host      local\ncf03ee007fb4   none      null      local\n")),(0,t.yg)("h3",{id:"inspecting-a-network"},"Inspecting a Network"),(0,t.yg)("p",null,"To view detailed information about a network, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker network inspect <network-name>"),". This will return a JSON formatted details of the network."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'$ docker network inspect bridge\n[\n    {\n        "Name": "bridge",\n        "Id": "7fca4eb8c647e57e9d46c32714271e0c3fa6ed54945f675632e65b2ff97d4e6a",\n        "Created": "2021-02-18T20:46:38.3253083Z",\n        "Scope": "local",\n        "Driver": "bridge",\n        "EnableIPv6": false,\n        "IPAM": {\n            "Driver": "default",\n            "Options": null,\n            "Config": [\n                {\n                    "Subnet": "172.17.0.0/16",\n                    "Gateway": "172.17.0.1"\n                }\n            ]\n        },\n        "Internal": false,\n        "Attachable": false,\n        "Ingress": false,\n        "ConfigFrom": {\n            "Network": ""\n        },\n        "ConfigOnly": false,\n        "Containers": {},\n        "Options": {\n            "com.docker.network.bridge.default_bridge": "true",\n            "com.docker.network.bridge.enable_icc": "true",\n            "com.docker.network.bridge.enable_ip_masquerade": "true",\n            "com.docker.network.bridge.host_binding_ipv4": "0.0.0.0",\n            "com.docker.network.bridge.name": "docker0",\n            "com.docker.network.driver.mtu": "1500"\n        },\n        "Labels": {}\n    }\n]\n')),(0,t.yg)("h3",{id:"creating-a-network"},"Creating a Network"),(0,t.yg)("p",null,"To set up a new network, use ",(0,t.yg)("inlineCode",{parentName:"p"},"docker network create <network-name>"),". This will return the ID of the newly created network."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ docker network create my_network\n82b1d35f5d92f3a63f9062c2bea2afea2200b627b1c72c8ed835e4c8d80f0a6e\n")),(0,t.yg)("h2",{id:"volumes-and-data-management"},"Volumes and Data Management"),(0,t.yg)("h3",{id:"creating-a-volume"},"Creating a Volume"),(0,t.yg)("p",null,"The command to create a volume is quite straightforward. You just need to specify the name of the volume you want to create."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"docker volume create my-volume\n")),(0,t.yg)("p",null,"When you run this command, Docker creates a new volume with the name ",(0,t.yg)("inlineCode",{parentName:"p"},"my-volume"),". The output of the command will be the name of the volume, which confirms that the volume has been created."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"my-volume\n")),(0,t.yg)("h3",{id:"listing-volumes"},"Listing Volumes"),(0,t.yg)("p",null,"To display all the volumes that are currently in the system, you can use the ",(0,t.yg)("inlineCode",{parentName:"p"},"docker volume ls")," command. This command lists all the volumes that Docker has currently registered."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"docker volume ls\n")),(0,t.yg)("p",null,"The output of this command will be a list of all the volumes. Each line will represent a volume and will display the driver used for the volume and the name of the volume."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"DRIVER    VOLUME NAME\nlocal     my-volume\n")),(0,t.yg)("h3",{id:"inspecting-a-volume"},"Inspecting a Volume"),(0,t.yg)("p",null,"If you need detailed information about a volume, you can use the ",(0,t.yg)("inlineCode",{parentName:"p"},"docker volume inspect")," command. This command takes the name of the volume as an argument."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"docker volume inspect my-volume\n")),(0,t.yg)("p",null,"The output of this command is a JSON object that describes the given volume. This includes details such as the location of the volume on the host machine, the labels associated with the volume, and the options that have been set on the volume."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "CreatedAt": "2024-02-08T09:29:00Z",\n    "Driver": "local",\n    "Labels": {},\n    "Mountpoint": "/var/lib/docker/volumes/my-volume/_data",\n    "Name": "my-volume",\n    "Options": {},\n    "Scope": "local"\n  }\n]\n')),(0,t.yg)("h2",{id:"docker-compose-and-dockerfile"},"Docker Compose and Dockerfile"),(0,t.yg)("h3",{id:"running-docker-compose"},"Running Docker Compose"),(0,t.yg)("p",null,"To start all services defined in a ",(0,t.yg)("inlineCode",{parentName:"p"},"docker-compose.yml")," file, you can use the ",(0,t.yg)("inlineCode",{parentName:"p"},"docker-compose up")," command. This command starts all the services as per the configuration in the ",(0,t.yg)("inlineCode",{parentName:"p"},"docker-compose.yml")," file."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"docker-compose up\n")),(0,t.yg)("p",null,"The output of this command will be the startup logs of all containers defined in the compose file. It will show the status of each service as it starts up."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"Starting db ... done\nStarting web ... done\n")),(0,t.yg)("p",null,"Note that starting with Docker Compose version 1.28.0, the use of ",(0,t.yg)("inlineCode",{parentName:"p"},"docker-compose")," commands has been deprecated in favor of the ",(0,t.yg)("inlineCode",{parentName:"p"},"docker compose")," command (without the hyphen) as part of Docker's consolidation of functionality."),(0,t.yg)("h3",{id:"stopping-docker-compose-services"},"Stopping Docker Compose Services"),(0,t.yg)("p",null,"To halt services started with ",(0,t.yg)("inlineCode",{parentName:"p"},"docker-compose up"),", you can use the ",(0,t.yg)("inlineCode",{parentName:"p"},"docker-compose down")," command. This command stops all the running services."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"docker-compose down\n")),(0,t.yg)("p",null,"The output of this command will be the status of each service as it shuts down."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"Stopping web ... done\nStopping db ... done\nRemoving web ... done\nRemoving db ... done\n")),(0,t.yg)("h3",{id:"dockerfile"},"Dockerfile"),(0,t.yg)("h4",{id:"building-an-image-from-a-dockerfile"},"Building an Image from a Dockerfile"),(0,t.yg)("p",null,"To create an image based on the Dockerfile in the current directory, you can use the ",(0,t.yg)("inlineCode",{parentName:"p"},"docker build")," command. You need to specify a tag for the image."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"docker build -t my-image .\n")),(0,t.yg)("p",null,"The output of this command will be the status of each step of the build process."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"Sending build context to Docker daemon  2.048kB\nStep 1/3 : FROM alpine:latest\n ---\x3e e7d92cdc71fe\nStep 2/3 : RUN apk add --no-cache python3 py3-pip\n ---\x3e Using cache\n ---\x3e 3cf235f6a938\nSuccessfully built 3cf235f6a938\nSuccessfully tagged my-image:latest\n")),(0,t.yg)("h3",{id:"cleaning-up"},"Cleaning Up"),(0,t.yg)("p",null,"Docker provides a command to clean up unused containers, networks, images, and volumes. This is useful to free up system resources."),(0,t.yg)("h3",{id:"removing-unused-docker-objects"},"Removing Unused Docker Objects"),(0,t.yg)("p",null,"To clean up unused Docker objects, you can use the ",(0,t.yg)("inlineCode",{parentName:"p"},"docker system prune")," command."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"docker system prune\n")),(0,t.yg)("p",null,"The output of this command will be the status of the cleanup process."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"Total reclaimed space: 1.24GB\n")),(0,t.yg)("h2",{id:"conclusion"},"Conclusion"),(0,t.yg)("p",null,"If you have gone through this article, you will not have any issue in most of the Docker commands that are used frequently in daily operations. Whether it is management of images, networking, containers, volumes, etc., this article provides details on each of the important commands along with the example output for your complete understanding. Keep using this guide to increase your productivity and make your containerized application a success."))}p.isMDXComponent=!0}}]);