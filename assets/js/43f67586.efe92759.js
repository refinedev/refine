"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[99626,18665,39728,5223,2642],{58860:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var r=n(37953);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),g=o,y=d["".concat(s,".").concat(g)]||d[g]||u[g]||a;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},65997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>l,metadata:()=>p,toc:()=>d});n(37953);var r=n(58860);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={},s=void 0,p={unversionedId:"api-reference/core/hooks/useSelect/basic-usage-live-preview",id:"version-3.xx.xx/api-reference/core/hooks/useSelect/basic-usage-live-preview",title:"basic-usage-live-preview",description:"",source:"@site/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/basic-usage-live-preview.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/basic-usage-live-preview",permalink:"/docs/3.xx.xx/api-reference/core/hooks/useSelect/basic-usage-live-preview",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/basic-usage-live-preview.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1710225736,formattedLastUpdatedAt:"Mar 12, 2024",frontMatter:{}},c={},d=[],u={toc:d},g="wrapper";function y(e){var{components:t}=e,n=i(e,["components"]);return(0,r.yg)(g,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=200px",live:!0,url:"http://localhost:3000/products",previewHeight:"200px"},'setInitialRoutes(["/posts/create"]);\n// visible-block-start\nimport { useSelect } from "@pankod/refine-core";\n\ninterface ICategory {\n    id: number;\n    title: string;\n}\n\nconst ProductCreate: React.FC = () => {\n    const { options } = useSelect<ICategory>({\n        resource: "categories",\n    });\n\n    return (\n        <label>\n            Select a category:\n            <select>\n                {options?.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.label}\n                    </option>\n                ))}\n            </select>\n        </label>\n    );\n};\n// visible-block-end\nsetRefineProps({\n    resources: [\n        {\n            name: "posts",\n            create: ProductCreate,\n        },\n    ],\n});\nrender(<RefineHeadlessDemo />);\n')))}y.isMDXComponent=!0},41998:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>l,metadata:()=>p,toc:()=>d});n(37953);var r=n(58860);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={},s=void 0,p={unversionedId:"api-reference/core/hooks/useSelect/default-value-live-preview",id:"version-3.xx.xx/api-reference/core/hooks/useSelect/default-value-live-preview",title:"default-value-live-preview",description:"",source:"@site/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/default-value-live-preview.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/default-value-live-preview",permalink:"/docs/3.xx.xx/api-reference/core/hooks/useSelect/default-value-live-preview",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/default-value-live-preview.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1710225736,formattedLastUpdatedAt:"Mar 12, 2024",frontMatter:{}},c={},d=[],u={toc:d},g="wrapper";function y(e){var{components:t}=e,n=i(e,["components"]);return(0,r.yg)(g,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=200px hideCode",live:!0,url:"http://localhost:3000/products",previewHeight:"200px",hideCode:!0},'setInitialRoutes(["/posts/create"]);\n// visible-block-start\nimport { useSelect } from "@pankod/refine-core";\n\ninterface ICategory {\n    id: number;\n    title: string;\n}\n\nconst ProductCreate: React.FC = () => {\n    const { options } = useSelect<ICategory>({\n        resource: "categories",\n        // highlight-next-line\n        defaultValue: 20,\n    });\n\n    return (\n        <label>\n            Select a category:\n            <select>\n                {options?.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.value}-{option.label}\n                    </option>\n                ))}\n            </select>\n        </label>\n    );\n};\n// visible-block-end\nsetRefineProps({\n    resources: [\n        {\n            name: "posts",\n            create: ProductCreate,\n        },\n    ],\n});\nrender(<RefineHeadlessDemo />);\n')))}y.isMDXComponent=!0},14305:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>u,default:()=>O,frontMatter:()=>d,metadata:()=>g,toc:()=>m});n(37953);var r=n(58860),o=n(65997),a=n(27825),i=n(8045),l=n(41998);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const d={title:"useSelect",siderbar_label:"useSelect",source:"packages/core/src/hooks/useSelect/index.ts"},u=void 0,g={unversionedId:"api-reference/core/hooks/useSelect/index",id:"version-3.xx.xx/api-reference/core/hooks/useSelect/index",title:"useSelect",description:"useSelect hook allows you to manage any select (like a Html `` tag, React Select, etc...) component. Since it is designed as headless, It expects you to handle the UI.",source:"@site/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/index.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/",permalink:"/docs/3.xx.xx/api-reference/core/hooks/useSelect/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/index.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1710225736,formattedLastUpdatedAt:"Mar 12, 2024",frontMatter:{title:"useSelect",siderbar_label:"useSelect",source:"packages/core/src/hooks/useSelect/index.ts"},sidebar:"someSidebar",previous:{title:"useUpdateMany",permalink:"/docs/3.xx.xx/api-reference/core/hooks/data/useUpdateMany/"},next:{title:"useForm",permalink:"/docs/3.xx.xx/api-reference/core/hooks/useForm"}},y={},m=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Realtime Updates",id:"realtime-updates",level:2},{value:"Properties",id:"properties",level:2},{value:"<code>resource</code> <PropTag required />",id:"resource-",level:3},{value:"<code>optionLabel</code> and <code>optionValue</code>",id:"optionlabel-and-optionvalue",level:3},{value:"<code>sort</code>",id:"sort",level:3},{value:"<code>filters</code>",id:"filters",level:3},{value:"<code>defaultValue</code>",id:"defaultvalue",level:3},{value:"<code>debounce</code>",id:"debounce",level:3},{value:"<code>queryOptions</code>",id:"queryoptions",level:3},{value:"<code>pagination</code>",id:"pagination",level:3},{value:"<code>current</code>",id:"current",level:4},{value:"<code>pageSize</code>",id:"pagesize",level:4},{value:"<code>hasPagination</code>",id:"haspagination",level:3},{value:"<code>defaultValueQueryOptions</code>",id:"defaultvaluequeryoptions",level:3},{value:"<code>onSearch</code>",id:"onsearch",level:3},{value:"<code>metaData</code>",id:"metadata",level:3},{value:"<code>dataProviderName</code>",id:"dataprovidername",level:3},{value:"<code>successNotification</code>",id:"successnotification",level:3},{value:"<code>errorNotification</code>",id:"errornotification",level:3},{value:"<code>liveMode</code>",id:"livemode",level:3},{value:"<code>onLiveEvent</code>",id:"onliveevent",level:3},{value:"<code>liveParams</code>",id:"liveparams",level:3},{value:"FAQ",id:"faq",level:2},{value:"How to get all the data without pagination?",id:"how-to-get-all-the-data-without-pagination",level:3},{value:"How to add search to options (Autocomplete)?",id:"how-to-add-search-to-options-autocomplete",level:3},{value:"How to ensure <code>defaultValue</code> is included in the options?",id:"how-to-ensure-defaultvalue-is-included-in-the-options",level:3},{value:"How to change the <code>label</code> and <code>value</code> properties in options?",id:"how-to-change-the-label-and-value-properties-in-options",level:3},{value:"Can I create the options manually?",id:"can-i-create-the-options-manually",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties-1",level:3},{value:"Return values",id:"return-values",level:3},{value:"Example",id:"example",level:2}],h=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",t)},f=h("DocThumbsUpDownFeedbackWidget"),v=h("PropTag"),b=h("PropsTable"),x=h("CodeSandboxExample"),N={toc:m},w="wrapper";function O(e){var{components:t}=e,n=c(e,["components"]);return(0,r.yg)(w,p(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){s(e,t,n[t])}))}return e}({},N,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"useSelect")," hook allows you to manage any ",(0,r.yg)("inlineCode",{parentName:"p"},"select")," (like a ",(0,r.yg)("a",{parentName:"p",href:"https://www.w3schools.com/tags/tag_select.asp"},"Html ",(0,r.yg)("inlineCode",{parentName:"a"},"<select>")," tag"),", ",(0,r.yg)("a",{parentName:"p",href:"https://react-select.com/home"},"React Select"),", etc...) component. Since it is designed as headless, It expects you to handle the UI."),(0,r.yg)("p",null,"This hook uses the ",(0,r.yg)("inlineCode",{parentName:"p"},"useList")," hook for fetching data. ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/data/useList/"},"Refer to useList hook for details. \u2192")),(0,r.yg)("admonition",{title:"DERIVATIVES",type:"info-tip"},(0,r.yg)("p",{parentName:"admonition"},"If you're looking for a complete select library, refine has out-of-the-box support for the libraries below:"),(0,r.yg)("ul",{parentName:"admonition"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://ant.design/components/select"},"Ant Design Select")," (for Ant Design users) - ",(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/antd/hooks/field/useSelect"},"Documentation")," - ",(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/examples/field/useSelect"},"Example")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://mui.com/material-ui/react-autocomplete"},"Material UI Autocomplete")," (for Material UI users) - ",(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/mui/hooks/useAutocomplete"},"Documentation")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://mantine.dev/core/select/"},"Mantine Select")," (for Mantine users) - ",(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/mantine/hooks/useSelect"},"Documentation")))),(0,r.yg)("h2",{id:"basic-usage"},"Basic Usage"),(0,r.yg)(f,{id:"basic-usage",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Here is a basic example of how to use ",(0,r.yg)("inlineCode",{parentName:"p"},"useSelect")," hook."),(0,r.yg)(o.default,{mdxType:"BasicUsageLivePreview"})),(0,r.yg)("h2",{id:"realtime-updates"},"Realtime Updates"),(0,r.yg)(f,{id:"realtime-updates",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"This feature is only available if you use a ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider"},"Live Provider"))),(0,r.yg)("p",null,"When ",(0,r.yg)("inlineCode",{parentName:"p"},"useSelect")," hook is mounted, it will call the ",(0,r.yg)("inlineCode",{parentName:"p"},"subscribe")," method from the ",(0,r.yg)("inlineCode",{parentName:"p"},"liveProvider")," with some parameters such as ",(0,r.yg)("inlineCode",{parentName:"p"},"channel"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"resource")," etc. It is useful when you want to subscribe to the live updates."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"liveProvider")," documentation for more information ","\u2192"))),(0,r.yg)("h2",{id:"properties"},"Properties"),(0,r.yg)("h3",{id:"resource-"},(0,r.yg)("inlineCode",{parentName:"h3"},"resource")," ",(0,r.yg)(v,{required:!0,mdxType:"PropTag"})),(0,r.yg)(f,{id:"resource-",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"It will be passed to the ",(0,r.yg)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.yg)("inlineCode",{parentName:"p"},"dataProvider")," as parameter via the ",(0,r.yg)("inlineCode",{parentName:"p"},"useList")," hook. The parameter is usually used as an API endpoint path. It all depends on how to handle the ",(0,r.yg)("inlineCode",{parentName:"p"},"resource")," in the ",(0,r.yg)("inlineCode",{parentName:"p"},"getList")," method. See the ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/tutorial/understanding-dataprovider/create-dataprovider/"},"creating a data provider")," section for an example of how resource are handled."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  resource: "categories",\n});\n'))),(0,r.yg)("h3",{id:"optionlabel-and-optionvalue"},(0,r.yg)("inlineCode",{parentName:"h3"},"optionLabel")," and ",(0,r.yg)("inlineCode",{parentName:"h3"},"optionValue")),(0,r.yg)(f,{id:"optionlabel-and-optionvalue",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Allows you to change the ",(0,r.yg)("inlineCode",{parentName:"p"},"value")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"label")," of your options.",(0,r.yg)("br",{parentName:"p"}),"\n","Default values are ",(0,r.yg)("inlineCode",{parentName:"p"},'optionLabel = "title"')," and ",(0,r.yg)("inlineCode",{parentName:"p"},'optionValue = "id"')),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect<ICategory>({\n    resource: "products",\n    optionLabel: "name"\n    optionValue: "productId"\n});\n')),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"Supports nested properties with option ",(0,r.yg)("a",{parentName:"p",href:"https://lodash.com/docs/4.17.15#get"},"Object path")," syntax."),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'const { options } = useSelect({\n  resource: "categories",\n  optionLabel: "nested.title",\n  optionValue: "nested.id",\n});\n')))),(0,r.yg)("h3",{id:"sort"},(0,r.yg)("inlineCode",{parentName:"h3"},"sort")),(0,r.yg)(f,{id:"sort",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"It allows to show the options in the desired order. ",(0,r.yg)("inlineCode",{parentName:"p"},"sort")," will be passed to the ",(0,r.yg)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.yg)("inlineCode",{parentName:"p"},"dataProvider")," as parameter via the ",(0,r.yg)("inlineCode",{parentName:"p"},"useList")," hook. It is used to send sort query parameters to the API."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/interfaceReferences#crudsorting"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"CrudSorting")," interface for more information ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  sort: [\n    {\n      field: "title",\n      order: "asc",\n    },\n  ],\n});\n')),(0,r.yg)(i.default,{mdxType:"SortLivePreview"})),(0,r.yg)("h3",{id:"filters"},(0,r.yg)("inlineCode",{parentName:"h3"},"filters")),(0,r.yg)(f,{id:"filters",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"It is used to show options by filtering them. ",(0,r.yg)("inlineCode",{parentName:"p"},"filters")," will be passed to the ",(0,r.yg)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.yg)("inlineCode",{parentName:"p"},"dataProvider")," as parameter via the ",(0,r.yg)("inlineCode",{parentName:"p"},"useList")," hook. It is used to send filter query parameters to the API."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/interfaceReferences#crudfilters"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"CrudFilters")," interface for more information ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  filter: [\n    {\n      field: "isActive",\n      operator: "eq",\n      value: true,\n    },\n  ],\n});\n'))),(0,r.yg)("h3",{id:"defaultvalue"},(0,r.yg)("inlineCode",{parentName:"h3"},"defaultValue")),(0,r.yg)(f,{id:"defaultvalue",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Allows to make options selected by default. Adds extra options to ",(0,r.yg)("inlineCode",{parentName:"p"},"<select>")," component. In some cases like there are many entries for the ",(0,r.yg)("inlineCode",{parentName:"p"},"<select>")," and pagination is required, ",(0,r.yg)("inlineCode",{parentName:"p"},"defaultValue")," may not be present in the current visible options and this can break the ",(0,r.yg)("inlineCode",{parentName:"p"},"<select>")," component. To avoid such cases, A seperate ",(0,r.yg)("inlineCode",{parentName:"p"},"useMany")," query is sent to the backend with the ",(0,r.yg)("inlineCode",{parentName:"p"},"defaultValue")," and appended to the options of ",(0,r.yg)("inlineCode",{parentName:"p"},"<select>"),", ensuring the default values exist in the current options array. Since it uses ",(0,r.yg)("inlineCode",{parentName:"p"},"useMany")," to query the necessary data, the ",(0,r.yg)("inlineCode",{parentName:"p"},"defaultValue")," can be a single value or an array of values like the following:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n  defaultValue: 1, // or [1, 2]\n});\n")),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/data/useMany"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"useMany")," documentation for detailed usage. ","\u2192"))),(0,r.yg)("h3",{id:"debounce"},(0,r.yg)("inlineCode",{parentName:"h3"},"debounce")),(0,r.yg)(f,{id:"debounce",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"It allows us to ",(0,r.yg)("inlineCode",{parentName:"p"},"debounce")," the ",(0,r.yg)("inlineCode",{parentName:"p"},"onSearch")," function."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  resource: "categories",\n  debounce: 500,\n});\n'))),(0,r.yg)("h3",{id:"queryoptions"},(0,r.yg)("inlineCode",{parentName:"h3"},"queryOptions")),(0,r.yg)(f,{id:"queryoptions",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"queryOptions")," is used to pass additional options to the ",(0,r.yg)("inlineCode",{parentName:"p"},"useQuery")," hook. It is useful when you want to pass additional options to the ",(0,r.yg)("inlineCode",{parentName:"p"},"useQuery")," hook."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://tanstack.com/query/v4/docs/react/reference/useQuery"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"useQuery")," documentation for more information ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n  queryOptions: {\n    retry: 3,\n  },\n});\n"))),(0,r.yg)("h3",{id:"pagination"},(0,r.yg)("inlineCode",{parentName:"h3"},"pagination")),(0,r.yg)(f,{id:"pagination",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"pagination")," will be passed to the ",(0,r.yg)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.yg)("inlineCode",{parentName:"p"},"dataProvider")," as parameter. It is used to send pagination query parameters to the API.")),(0,r.yg)("h4",{id:"current"},(0,r.yg)("inlineCode",{parentName:"h4"},"current")),(0,r.yg)(f,{id:"current",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can pass the ",(0,r.yg)("inlineCode",{parentName:"p"},"current")," page number to the ",(0,r.yg)("inlineCode",{parentName:"p"},"pagination")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n  pagination: {\n    current: 2,\n  },\n});\n"))),(0,r.yg)("h4",{id:"pagesize"},(0,r.yg)("inlineCode",{parentName:"h4"},"pageSize")),(0,r.yg)(f,{id:"pagesize",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can pass the ",(0,r.yg)("inlineCode",{parentName:"p"},"pageSize")," to the ",(0,r.yg)("inlineCode",{parentName:"p"},"pagination")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n  pagination: {\n    pageSize: 20,\n  },\n});\n"))),(0,r.yg)("h3",{id:"haspagination"},(0,r.yg)("inlineCode",{parentName:"h3"},"hasPagination")),(0,r.yg)(f,{id:"haspagination",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"hasPagination")," will be passed to the ",(0,r.yg)("inlineCode",{parentName:"p"},"getList")," method from the ",(0,r.yg)("inlineCode",{parentName:"p"},"dataProvider")," as parameter via the ",(0,r.yg)("inlineCode",{parentName:"p"},"useList")," hook. It is used to determine whether to use server-side pagination or not."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n  hasPagination: false,\n});\n"))),(0,r.yg)("h3",{id:"defaultvaluequeryoptions"},(0,r.yg)("inlineCode",{parentName:"h3"},"defaultValueQueryOptions")),(0,r.yg)(f,{id:"defaultvaluequeryoptions",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"When the ",(0,r.yg)("inlineCode",{parentName:"p"},"defaultValue")," property is given, the ",(0,r.yg)("inlineCode",{parentName:"p"},"useMany")," data hook is called for the selected records. With this property, you can change the options of this query. If not given, the values given in ",(0,r.yg)("inlineCode",{parentName:"p"},"queryOptions")," will be used."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'const { options } = useSelect({\n  resource: "categories",\n  defaultValueQueryOptions: {\n    onSuccess: (data) => {\n      console.log("triggers when on query return on success");\n    },\n  },\n});\n'))),(0,r.yg)("h3",{id:"onsearch"},(0,r.yg)("inlineCode",{parentName:"h3"},"onSearch")),(0,r.yg)(f,{id:"onsearch",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"It allows us to ",(0,r.yg)("inlineCode",{parentName:"p"},"AutoComplete")," the ",(0,r.yg)("inlineCode",{parentName:"p"},"options"),"."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/interfaceReferences#crudfilters"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"CrudFilters")," interface for more information ","\u2192")),(0,r.yg)(a.default,{mdxType:"OnSearchLivePreview"}),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"The HTML select tag does not natively support AutoComplete. If AutoComplete is desired, it can be used with ",(0,r.yg)("a",{parentName:"p",href:"https://react-select.com/async"},"React Select")," or ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/tannerlinsley/use-select"},"use-select"),".")),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"If ",(0,r.yg)("inlineCode",{parentName:"p"},"onSearch")," is used, it will override the existing ",(0,r.yg)("inlineCode",{parentName:"p"},"filters"),"."))),(0,r.yg)("h3",{id:"metadata"},(0,r.yg)("inlineCode",{parentName:"h3"},"metaData")),(0,r.yg)(f,{id:"metadata",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/general-concepts/#metadata"},(0,r.yg)("inlineCode",{parentName:"a"},"metaData"))," is used following two purposes:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"To pass additional information to data provider methods."),(0,r.yg)("li",{parentName:"ul"},"Generate GraphQL queries using plain JavaScript Objects (JSON). Please refer ",(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/advanced-tutorials/data-provider/graphql/#edit-page"},"GraphQL")," for more information.")),(0,r.yg)("p",null,"In the following example, we pass the ",(0,r.yg)("inlineCode",{parentName:"p"},"headers")," property in the ",(0,r.yg)("inlineCode",{parentName:"p"},"metaData")," object to the ",(0,r.yg)("inlineCode",{parentName:"p"},"create")," method. With similar logic, you can pass any properties to specifically handle the data provider methods."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  // highlight-start\n  metaData: {\n    headers: { "x-meta-data": "true" },\n  },\n  // highlight-end\n});\n\nconst myDataProvider = {\n  //...\n  getList: async ({\n    resource,\n    pagination,\n    hasPagination,\n    sort,\n    filters,\n    // highlight-next-line\n    metaData,\n  }) => {\n    // highlight-next-line\n    const headers = metaData?.headers ?? {};\n    const url = `${apiUrl}/${resource}`;\n    //...\n    //...\n    // highlight-next-line\n    const { data, headers } = await httpClient.get(`${url}`, { headers });\n    return {\n      data,\n    };\n  },\n  //...\n};\n'))),(0,r.yg)("h3",{id:"dataprovidername"},(0,r.yg)("inlineCode",{parentName:"h3"},"dataProviderName")),(0,r.yg)(f,{id:"dataprovidername",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"If there is more than one ",(0,r.yg)("inlineCode",{parentName:"p"},"dataProvider"),", you can specify which one to use by passing the ",(0,r.yg)("inlineCode",{parentName:"p"},"dataProviderName")," prop. It is useful when you have a different data provider for different resources."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  dataProviderName: "second-data-provider",\n});\n'))),(0,r.yg)("h3",{id:"successnotification"},(0,r.yg)("inlineCode",{parentName:"h3"},"successNotification")),(0,r.yg)(f,{id:"successnotification",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/notification-provider/"},(0,r.yg)("inlineCode",{parentName:"a"},"NotificationProvider"))," is required for this prop to work.")),(0,r.yg)("p",null,"After data is fetched successfully, ",(0,r.yg)("inlineCode",{parentName:"p"},"useSelect")," can call ",(0,r.yg)("inlineCode",{parentName:"p"},"open")," function from ",(0,r.yg)("inlineCode",{parentName:"p"},"NotificationProvider")," to show a success notification. With this prop, you can customize the success notification."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  successNotification: (data, values, resource) => {\n    return {\n      message: `${data.title} Successfully fetched.`,\n      description: "Success with no errors",\n      type: "success",\n    };\n  },\n});\n'))),(0,r.yg)("h3",{id:"errornotification"},(0,r.yg)("inlineCode",{parentName:"h3"},"errorNotification")),(0,r.yg)(f,{id:"errornotification",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/notification-provider/"},(0,r.yg)("inlineCode",{parentName:"a"},"NotificationProvider"))," is required for this prop to work.")),(0,r.yg)("p",null,"After data fetching is failed, ",(0,r.yg)("inlineCode",{parentName:"p"},"useSelect")," will call ",(0,r.yg)("inlineCode",{parentName:"p"},"open")," function from ",(0,r.yg)("inlineCode",{parentName:"p"},"NotificationProvider")," to show a error notification. With this prop, you can customize the error notification."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  errorNotification: (data, values, resource) => {\n    return {\n      message: `Something went wrong when getting ${data.id}`,\n      description: "Error",\n      type: "error",\n    };\n  },\n});\n'))),(0,r.yg)("h3",{id:"livemode"},(0,r.yg)("inlineCode",{parentName:"h3"},"liveMode")),(0,r.yg)(f,{id:"livemode",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider/"},(0,r.yg)("inlineCode",{parentName:"a"},"LiveProvider"))," is required for this prop to work.")),(0,r.yg)("p",null,'Determines whether to update data automatically ("auto") or not ("manual") if a related live event is received. It can be used to update and show data in Realtime throughout your app.\nFor more information about live mode, please check ',(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider/#livemode"},"Live / Realtime")," page."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  liveMode: "auto",\n});\n'))),(0,r.yg)("h3",{id:"onliveevent"},(0,r.yg)("inlineCode",{parentName:"h3"},"onLiveEvent")),(0,r.yg)(f,{id:"onliveevent",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider/"},(0,r.yg)("inlineCode",{parentName:"a"},"LiveProvider"))," is required for this prop to work.")),(0,r.yg)("p",null,"The callback function that is executed when new events from a subscription are arrived."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},"useSelect({\n  onLiveEvent: (event) => {\n    console.log(event);\n  },\n});\n"))),(0,r.yg)("h3",{id:"liveparams"},(0,r.yg)("inlineCode",{parentName:"h3"},"liveParams")),(0,r.yg)(f,{id:"liveparams",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider/"},(0,r.yg)("inlineCode",{parentName:"a"},"LiveProvider"))," is required for this prop to work.")),(0,r.yg)("p",null,"Params to pass to liveProvider's ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider/#subscribe"},"subscribe")," method.")),(0,r.yg)("h2",{id:"faq"},"FAQ"),(0,r.yg)("h3",{id:"how-to-get-all-the-data-without-pagination"},"How to get all the data without pagination?"),(0,r.yg)(f,{id:"how-to-get-all-the-data-without-pagination",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You may want to get all the data without pagination. In this case you should use the ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/useSelect/#haspagination"},(0,r.yg)("inlineCode",{parentName:"a"},"hasPagination"))," prop."),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Don't forget to implement it in the ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/data-provider/#getlist"},"data provider"),"."))),(0,r.yg)("h3",{id:"how-to-add-search-to-options-autocomplete"},"How to add search to options (Autocomplete)?"),(0,r.yg)(f,{id:"how-to-add-search-to-options-autocomplete",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/useSelect/#onsearch"},(0,r.yg)("inlineCode",{parentName:"a"},"onSearch"))," is a function that is used to set the search value. It is useful when you want to search for a specific value. A simple example of this is shown below."),(0,r.yg)(a.default,{mdxType:"OnSearchLivePreview"})),(0,r.yg)("h3",{id:"how-to-ensure-defaultvalue-is-included-in-the-options"},"How to ensure ",(0,r.yg)("inlineCode",{parentName:"h3"},"defaultValue")," is included in the options?"),(0,r.yg)(f,{id:"how-to-ensure-defaultvalue-is-included-in-the-options",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"In some cases we only have ",(0,r.yg)("inlineCode",{parentName:"p"},"id"),", it may be necessary to show it selected in the selection box. This hook sends the request via ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/data/useMany/"},(0,r.yg)("inlineCode",{parentName:"a"},"useMany")),", gets the data and mark as seleted."),(0,r.yg)(l.default,{mdxType:"DefaultValueLivePreview"})),(0,r.yg)("h3",{id:"how-to-change-the-label-and-value-properties-in-options"},"How to change the ",(0,r.yg)("inlineCode",{parentName:"h3"},"label")," and ",(0,r.yg)("inlineCode",{parentName:"h3"},"value")," properties in options?"),(0,r.yg)(f,{id:"how-to-change-the-label-and-value-properties-in-options",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/useSelect/#optionlabel-and-optionvalue"},(0,r.yg)("inlineCode",{parentName:"a"},"optionLabel")," and ",(0,r.yg)("inlineCode",{parentName:"a"},"optionValue"))," are used to change the value of your options.\nThe default values are ",(0,r.yg)("inlineCode",{parentName:"p"},'optionsLabel="title"')," and ",(0,r.yg)("inlineCode",{parentName:"p"},'optionsValue="id"'),"."),(0,r.yg)("p",null,"To change to ",(0,r.yg)("inlineCode",{parentName:"p"},"name")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"categoryId"),";"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'useSelect({\n  optionLabel: "name",\n  optionValue: "categoryId",\n});\n'))),(0,r.yg)("h3",{id:"can-i-create-the-options-manually"},"Can I create the options manually?"),(0,r.yg)(f,{id:"can-i-create-the-options-manually",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Sometimes it may not be enough to create ",(0,r.yg)("inlineCode",{parentName:"p"},"optionLabel")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"optionValue")," options. In this case we create options with ",(0,r.yg)("inlineCode",{parentName:"p"},"queryResult"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'const { queryResult } = useSelect({\n  resource: "categories",\n});\n\nconst options = queryResult.data?.data.map((item) => ({\n  label: item.name,\n  value: item.id,\n}));\n\nreturn (\n  <select>\n    {options?.map((option) => (\n      <option key={option.value} value={option.value}>\n        {option.label}\n      </option>\n    ))}\n  </select>\n);\n'))),(0,r.yg)("h2",{id:"api-reference"},"API Reference"),(0,r.yg)("h3",{id:"properties-1"},"Properties"),(0,r.yg)(f,{id:"properties-1",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)(b,{module:"@pankod/refine-core/useSelect",mdxType:"PropsTable"})),(0,r.yg)("h3",{id:"return-values"},"Return values"),(0,r.yg)(f,{id:"return-values",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Property"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"options"),(0,r.yg)("td",{parentName:"tr",align:null},"It returns possible options"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"{ label: string; value: string }"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"queryResult"),(0,r.yg)("td",{parentName:"tr",align:null},"Result of the query of a record"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://react-query.tanstack.com/reference/useQuery"},(0,r.yg)("inlineCode",{parentName:"a"},"QueryObserverResult<{ data: TData }>")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"defaultValueQueryResult"),(0,r.yg)("td",{parentName:"tr",align:null},"Result of the query of a ",(0,r.yg)("inlineCode",{parentName:"td"},"defaultValue")," record"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://react-query.tanstack.com/reference/useQuery"},(0,r.yg)("inlineCode",{parentName:"a"},"QueryObserverResult<{ data: TData }>")))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"onSearch"),(0,r.yg)("td",{parentName:"tr",align:null},"A function to set the search value"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"onSearch: (value: string) => void")))))),(0,r.yg)("h2",{id:"example"},"Example"),(0,r.yg)(f,{id:"example",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)(x,{path:"core-use-select",mdxType:"CodeSandboxExample"})))}O.isMDXComponent=!0},27825:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>l,metadata:()=>p,toc:()=>d});n(37953);var r=n(58860);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={},s=void 0,p={unversionedId:"api-reference/core/hooks/useSelect/on-search-live-preview",id:"version-3.xx.xx/api-reference/core/hooks/useSelect/on-search-live-preview",title:"on-search-live-preview",description:"",source:"@site/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/on-search-live-preview.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/on-search-live-preview",permalink:"/docs/3.xx.xx/api-reference/core/hooks/useSelect/on-search-live-preview",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/on-search-live-preview.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1710225736,formattedLastUpdatedAt:"Mar 12, 2024",frontMatter:{}},c={},d=[],u={toc:d},g="wrapper";function y(e){var{components:t}=e,n=i(e,["components"]);return(0,r.yg)(g,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=200px hideCode",live:!0,url:"http://localhost:3000/products",previewHeight:"200px",hideCode:!0},'setInitialRoutes(["/posts/create"]);\n// visible-block-start\nimport { useSelect } from "@pankod/refine-core";\n\ninterface ICategory {\n    id: number;\n    title: string;\n}\n\nconst ProductCreate: React.FC = () => {\n    const { options, onSearch } = useSelect<ICategory>({\n        resource: "categories",\n        // highlight-start\n        onSearch: (value) => [\n            {\n                field: "title",\n                operator: "contains",\n                value,\n            }\n        ]\n        // highlight-end\n    });\n\n    return (\n        <>\n            <p>\n                Filter:\n                <input onChange={(e) => onSearch(e.target.value)} />\n            </p>\n\n            <select>\n                {options?.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.label}\n                    </option>\n                ))}\n            </select>\n        </>\n    );\n};\n// visible-block-end\nsetRefineProps({\n    resources: [\n        {\n            name: "posts",\n            create: ProductCreate,\n        },\n    ],\n});\nrender(<RefineHeadlessDemo />);\n')))}y.isMDXComponent=!0},8045:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>l,metadata:()=>p,toc:()=>d});n(37953);var r=n(58860);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const l={},s=void 0,p={unversionedId:"api-reference/core/hooks/useSelect/sort-live-preview",id:"version-3.xx.xx/api-reference/core/hooks/useSelect/sort-live-preview",title:"sort-live-preview",description:"",source:"@site/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/sort-live-preview.md",sourceDirName:"api-reference/core/hooks/useSelect",slug:"/api-reference/core/hooks/useSelect/sort-live-preview",permalink:"/docs/3.xx.xx/api-reference/core/hooks/useSelect/sort-live-preview",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/core/hooks/useSelect/sort-live-preview.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Ali Emir \u015een",lastUpdatedAt:1710225736,formattedLastUpdatedAt:"Mar 12, 2024",frontMatter:{}},c={},d=[],u={toc:d},g="wrapper";function y(e){var{components:t}=e,n=i(e,["components"]);return(0,r.yg)(g,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},u,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/products previewHeight=200px hideCode",live:!0,url:"http://localhost:3000/products",previewHeight:"200px",hideCode:!0},'setInitialRoutes(["/posts/create"]);\n// visible-block-start\nimport { useSelect } from "@pankod/refine-core";\n\ninterface ICategory {\n    id: number;\n    title: string;\n}\n\nconst ProductCreate: React.FC = () => {\n    const [order, setOrder] = React.useState<"asc" | "desc">("asc");\n    const { options } = useSelect<ICategory>({\n        resource: "categories",\n        // highlight-start\n        sort: [\n            {\n                field: "title",\n                order,\n            }\n        ]\n        // highlight-end\n    });\n\n    return (\n        <> \n            <label>\n                Select a category:\n                <select>\n                    {options?.map((option) => (\n                        <option key={option.value} value={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n                </select>\n                <button onClick={() => setOrder(order === "asc" ? "desc" : "asc")}>Toggle</button>\n            </label>            \n        </>\n        \n    );\n};\n// visible-block-end\nsetRefineProps({\n    resources: [\n        {\n            name: "posts",\n            create: ProductCreate,\n        },\n    ],\n});\nrender(<RefineHeadlessDemo />);\n')))}y.isMDXComponent=!0}}]);