"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[72806],{58860:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>g});var o=n(37953);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),u=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return n?o.createElement(g,i(i({ref:t},l),{},{components:n})):o.createElement(g,i({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},49558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>y,frontMatter:()=>s,metadata:()=>u,toc:()=>c});n(37953);var o=n(58860);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const s={title:"Create",swizzle:!0},p=void 0,u={unversionedId:"ui-integrations/mantine/components/basic-views/create/index",id:"version-4.xx.xx/ui-integrations/mantine/components/basic-views/create/index",title:"Create",description:"`` provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.",source:"@site/versioned_docs/version-4.xx.xx/ui-integrations/mantine/components/basic-views/create/index.md",sourceDirName:"ui-integrations/mantine/components/basic-views/create",slug:"/ui-integrations/mantine/components/basic-views/create/",permalink:"/docs/4.xx.xx/ui-integrations/mantine/components/basic-views/create/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-4.xx.xx/ui-integrations/mantine/components/basic-views/create/index.md",tags:[],version:"4.xx.xx",lastUpdatedBy:"Alican Erdurmaz",lastUpdatedAt:1755000415,formattedLastUpdatedAt:"Aug 12, 2025",frontMatter:{title:"Create",swizzle:!0},sidebar:"mainSidebar",previous:{title:"Inferencer",permalink:"/docs/4.xx.xx/ui-integrations/mantine/components/inferencer/"},next:{title:"Edit",permalink:"/docs/4.xx.xx/ui-integrations/mantine/components/basic-views/edit/"}},l={},c=[{value:"Properties",id:"properties",level:2},{value:"title",id:"title",level:3},{value:"saveButtonProps",id:"savebuttonprops",level:3},{value:"resource",id:"resource",level:3},{value:"goBack",id:"goback",level:3},{value:"isLoading",id:"isloading",level:3},{value:"breadcrumb",id:"breadcrumb",level:3},{value:"wrapperProps",id:"wrapperprops",level:3},{value:"headerProps",id:"headerprops",level:3},{value:"contentProps",id:"contentprops",level:3},{value:"headerButtons",id:"headerbuttons",level:3},{value:"headerButtonProps",id:"headerbuttonprops",level:3},{value:"footerButtons",id:"footerbuttons",level:3},{value:"footerButtonProps",id:"footerbuttonprops",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Props",id:"props",level:3}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",t)},m=d("DocThumbsUpDownFeedbackWidget"),g=d("PropsTable"),R={toc:c},h="wrapper";function y(e){var{components:t}=e,n=i(e,["components"]);return(0,o.yg)(h,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),o.forEach((function(t){r(e,t,n[t])}))}return e}({},R,n),{components:t,mdxType:"MDXLayout"}),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live shared",live:!0,shared:!0},'interface ICategory {\n  id: number;\n  title: string;\n}\n\ninterface IPost {\n  id: number;\n  title: string;\n  content: string;\n  status: "published" | "draft" | "rejected";\n  category: { id: number };\n}\n\nconst Wrapper = ({ children }) => {\n  return (\n    <MantineCore.MantineProvider\n      theme={RefineMantine.LightTheme}\n      withNormalizeCSS\n      withGlobalStyles\n    >\n      <MantineCore.Global styles={{ body: { WebkitFontSmoothing: "auto" } }} />\n      <MantineNotifications.NotificationsProvider position="top-right">\n        {children}\n      </MantineNotifications.NotificationsProvider>\n    </MantineCore.MantineProvider>\n  );\n};\n')),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"<Create>")," provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page."),(0,o.yg)("p",null,"We will show what ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create>")," does using properties with examples."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=420px hideCode",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"420px",hideCode:!0},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create, useForm, useSelect } from "@refinedev/mantine";\nimport { Select, TextInput } from "@mantine/core";\n\nconst PostCreate: React.FC = () => {\n  const { saveButtonProps, getInputProps } = useForm<IPost>({\n    initialValues: {\n      title: "",\n      status: "",\n      category: {\n        id: "",\n      },\n    },\n    validate: {\n      title: (value) => (value.length < 2 ? "Too short title" : null),\n      status: (value) => (value.length <= 0 ? "Status is required" : null),\n      category: {\n        id: (value) => (value.length <= 0 ? "Category is required" : null),\n      },\n    },\n  });\n\n  const { selectProps } = useSelect<ICategory>({\n    resource: "categories",\n  });\n\n  return (\n    <Create saveButtonProps={saveButtonProps}>\n      <form>\n        <TextInput\n          mt={8}\n          label="Title"\n          placeholder="Title"\n          {...getInputProps("title")}\n        />\n        <Select\n          mt={8}\n          label="Status"\n          placeholder="Pick one"\n          {...getInputProps("status")}\n          data={[\n            { label: "Published", value: "published" },\n            { label: "Draft", value: "draft" },\n            { label: "Rejected", value: "rejected" },\n          ]}\n        />\n        <Select\n          mt={8}\n          label="Category"\n          placeholder="Pick one"\n          {...getInputProps("category.id")}\n          {...selectProps}\n        />\n      </form>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,o.yg)("admonition",{title:"Good to know",type:"simple"},(0,o.yg)("p",{parentName:"admonition"},"You can swizzle this component with the ",(0,o.yg)("a",{parentName:"p",href:"/docs/packages/list-of-packages"},(0,o.yg)("strong",{parentName:"a"},"Refine CLI"))," to customize it.")),(0,o.yg)("h2",{id:"properties"},"Properties"),(0,o.yg)("h3",{id:"title"},"title"),(0,o.yg)(m,{id:"title",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"title")," allows the addition of titles inside the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create>"),' component by passing title props. If you don\'t pass title props, however, it uses the "Create" prefix and the singular resource name by default. For example, for the ',(0,o.yg)("inlineCode",{parentName:"p"},"/posts/create"),' resource, it would be "Create post".'),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\nimport { Title } from "@mantine/core";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-next-line\n      title={<Title order={3}>Custom Title</Title>}\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,o.yg)("h3",{id:"savebuttonprops"},"saveButtonProps"),(0,o.yg)(m,{id:"savebuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"saveButtonProps")," can be used to customize the default button of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create>")," component that submits the form:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-next-line\n      saveButtonProps={{ size: "xs" }}\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,o.yg)("a",{parentName:"p",href:"/docs/ui-integrations/mantine/components/buttons/save-button"},(0,o.yg)("inlineCode",{parentName:"a"},"<SaveButton>")," documentation ","\u2192")))),(0,o.yg)("h3",{id:"resource"},"resource"),(0,o.yg)(m,{id:"resource",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create>")," component reads the ",(0,o.yg)("inlineCode",{parentName:"p"},"resource")," information from the route by default. If you want to use a custom resource for the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"resource")," prop."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/custom previewHeight=280px",live:!0,url:"http://localhost:3000/custom",previewHeight:"280px"},'setInitialRoutes(["/custom"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\n\nconst CustomPage: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      resource="categories"\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "categories",\n          list: "/categories",\n          create: "/categories/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route path="/custom" element={<CustomPage />} />\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,o.yg)("p",null,"If you have multiple resources with the same name, you can pass the ",(0,o.yg)("inlineCode",{parentName:"p"},"identifier")," instead of the ",(0,o.yg)("inlineCode",{parentName:"p"},"name")," of the resource. It will only be used as the main matching key for the resource, data provider methods will still work with the ",(0,o.yg)("inlineCode",{parentName:"p"},"name")," of the resource defined in the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Refine/>")," component."),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,o.yg)("a",{parentName:"p",href:"/docs/core/refine-component#identifier"},(0,o.yg)("inlineCode",{parentName:"a"},"identifier")," section of the ",(0,o.yg)("inlineCode",{parentName:"a"},"<Refine/>")," component documentation ","\u2192")))),(0,o.yg)("h3",{id:"goback"},"goBack"),(0,o.yg)(m,{id:"goback",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"To customize the back button or to disable it, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"goBack")," property. You can pass ",(0,o.yg)("inlineCode",{parentName:"p"},"false")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"null")," to hide the back button."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      goBack="\ud83d\ude0a"\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,o.yg)("h3",{id:"isloading"},"isLoading"),(0,o.yg)(m,{id:"isloading",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"To toggle the loading state of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"isLoading")," property."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-next-line\n      isLoading={true}\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,o.yg)("h3",{id:"breadcrumb"},"breadcrumb"),(0,o.yg)(m,{id:"breadcrumb",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create, Breadcrumb } from "@refinedev/mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      breadcrumb={\n        <div\n          style={{\n            padding: "3px 6px",\n            border: "2px dashed cornflowerblue",\n          }}\n        >\n          <Breadcrumb />\n        </div>\n      }\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,o.yg)("h3",{id:"wrapperprops"},"wrapperProps"),(0,o.yg)(m,{id:"wrapperprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"If you want to customize the wrapper of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"wrapperProps")," property. For ",(0,o.yg)("inlineCode",{parentName:"p"},"@refinedev/mantine")," wrapper element is ",(0,o.yg)("inlineCode",{parentName:"p"},"<Card>"),"s and ",(0,o.yg)("inlineCode",{parentName:"p"},"wrapperProps")," can get every attribute that ",(0,o.yg)("inlineCode",{parentName:"p"},"<Card>")," can get."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      wrapperProps={{\n        style: {\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,o.yg)("a",{parentName:"p",href:"https://mantine.dev/core/card/"},(0,o.yg)("inlineCode",{parentName:"a"},"Card")," documentation from Mantine ","\u2192")))),(0,o.yg)("h3",{id:"headerprops"},"headerProps"),(0,o.yg)(m,{id:"headerprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"If you want to customize the header of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"headerProps")," property."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerProps={{\n        style: {\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,o.yg)("a",{parentName:"p",href:"https://mantine.dev/core/group/"},(0,o.yg)("inlineCode",{parentName:"a"},"Group")," documentation from Mantine ","\u2192")))),(0,o.yg)("h3",{id:"contentprops"},"contentProps"),(0,o.yg)(m,{id:"contentprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"If you want to customize the content of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"contentProps")," property."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      contentProps={{\n        style: {\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,o.yg)("h3",{id:"headerbuttons"},"headerButtons"),(0,o.yg)(m,{id:"headerbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\nimport { Button } from "@mantine/core";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,o.yg)("a",{parentName:"p",href:"https://mantine.dev/core/box/"},(0,o.yg)("inlineCode",{parentName:"a"},"Box")," documentation from Mantine ","\u2192")))),(0,o.yg)("h3",{id:"headerbuttonprops"},"headerButtonProps"),(0,o.yg)(m,{id:"headerbuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"You can customize the wrapper element of the buttons at the header by using the ",(0,o.yg)("inlineCode",{parentName:"p"},"headerButtonProps")," property."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\nimport { Button } from "@mantine/core";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerButtonProps={{\n        style: {\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      headerButtons={<Button type="primary">Custom Button</Button>}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n'))),(0,o.yg)("h3",{id:"footerbuttons"},"footerButtons"),(0,o.yg)(m,{id:"footerbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\nimport { Button } from "@mantine/core";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      footerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button variant="gradient">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,o.yg)("a",{parentName:"p",href:"https://mantine.dev/core/group/"},(0,o.yg)("inlineCode",{parentName:"a"},"Group")," documentation from Mantine ","\u2192")))),(0,o.yg)("h3",{id:"footerbuttonprops"},"footerButtonProps"),(0,o.yg)(m,{id:"footerbuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"You can customize the wrapper element of the buttons at the footer by using the ",(0,o.yg)("inlineCode",{parentName:"p"},"footerButtonProps")," property."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\n\n// visible-block-start\nimport { Create } from "@refinedev/mantine";\nimport { Button } from "@mantine/core";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      footerButtonProps={{\n        style: {\n          // hide-start\n          float: "right",\n          marginRight: 24,\n          // hide-end\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMantineDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          create: "/posts/create",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route\n            index\n            element={\n              <div>\n                <p>This page is empty.</p>\n                <RefineMantine.CreateButton />\n              </div>\n            }\n          />\n          <ReactRouter.Route path="create" element={<PostCreate />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMantineDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"For more information, refer to the ",(0,o.yg)("a",{parentName:"p",href:"https://mantine.dev/core/group/"},(0,o.yg)("inlineCode",{parentName:"a"},"Group")," documentation from Mantine ","\u2192")))),(0,o.yg)("h2",{id:"api-reference"},"API Reference"),(0,o.yg)("h3",{id:"props"},"Props"),(0,o.yg)(m,{id:"props",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)(g,{module:"@refinedev/mantine/Create","goBack-default":"`<IconArrowLeft />`","title-default":"`<Title order={3}>Create {resource.name}</Title>`",mdxType:"PropsTable"})))}y.isMDXComponent=!0}}]);