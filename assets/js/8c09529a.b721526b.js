"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3326],{58860:(e,t,o)=>{o.d(t,{xA:()=>g,yg:()=>p});var n=o(37953);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},g=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var o=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),d=u(o),c=i,p=d["".concat(l,".").concat(c)]||d[c]||h[c]||a;return o?n.createElement(p,r(r({ref:t},g),{},{components:o})):n.createElement(p,r({ref:t},g))}));function p(e,t){var o=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=o.length,r=new Array(a);r[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,r[1]=s;for(var u=2;u<a;u++)r[u]=o[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}c.displayName="MDXCreateElement"},80695:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>g,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>u,toc:()=>d});o(37953);var n=o(58860);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))})),e}function r(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}const s={title:'What is "Vibe Coding"',description:"Ever had a half-formed idea that you just wanted to see in motion, without the usual development overhead?",slug:"vibe-coding",authors:"ozgur",tags:["ai"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2025-06-24-vibe-coding/vibe-coding-image.png",hide_table_of_contents:!1,is_featured:!0},l="What Is Vibe Coding?",u={permalink:"/blog/vibe-coding",source:"@site/blog/2025-06-24-vibe-coding.md",title:'What is "Vibe Coding"',description:"Ever had a half-formed idea that you just wanted to see in motion, without the usual development overhead?",date:"2025-06-24T00:00:00.000Z",formattedDate:"June 24, 2025",tags:[{label:"ai",permalink:"/blog/tags/ai"}],readingTime:7.035,hasTruncateMarker:!1,authors:[{name:"\xd6zg\xfcr Ak\xe7a",title:"Junior Developer Relations",url:"https://github.com/doguhanozgurakca",imageURL:"https://github.com/doguhanozgurakca.png",key:"ozgur"}],frontMatter:{title:'What is "Vibe Coding"',description:"Ever had a half-formed idea that you just wanted to see in motion, without the usual development overhead?",slug:"vibe-coding",authors:"ozgur",tags:["ai"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2025-06-24-vibe-coding/vibe-coding-image.png",hide_table_of_contents:!1,is_featured:!0},prevItem:{title:"Git Merge vs. Git Rebase, The Ultimate Guide to Combining Branches",permalink:"/blog/git-merge-vs-rebase"},nextItem:{title:"Quality Code Generation: Multi-Agent Systems and Token Dilution",permalink:"/blog/quality-code-generation"},relatedPosts:[{title:"Vercel v0 - AI-Powered UI Generator",description:"Let's explore Vercel v0, an AI-powered UI generator that helps developers quickly scaffold UI elements.",permalink:"/blog/vercel-v0",formattedDate:"March 6, 2025",authors:[{name:"Necati \xd6zmen",title:"Head of Growth at Refine",url:"https://github.com/necatiozmen",description:"Feeling Irie",github:"https://github.com/necatiozmen",twitter:"https://twitter.com/necatiozmen3",linkedin:"https://www.linkedin.com/in/necatiozmen/",imageURL:"https://github.com/necatiozmen.png",key:"necati"}],readingTime:8.29,date:"2025-03-06T00:00:00.000Z"},{title:"Quality Code Generation: Multi-Agent Systems and Token Dilution",description:"How Refine AI's multi-agent system architecture effectively tackles token dilution, drastically improving code generation quality.",permalink:"/blog/quality-code-generation",formattedDate:"June 12, 2025",authors:[{name:"Youwei Zhen",title:"Junior Machine Learning Engineer",url:"https://github.com/AntoDono",imageURL:"https://www.linkedin.com/in/youwei-zhen-a8b662213/",key:"youwei"}],readingTime:5.85,date:"2025-06-12T00:00:00.000Z"},{title:"AI-First UIs: Why shadcn/ui's Model is Leading the Pack",description:"How shadcn/ui's component architecture and direct code ownership are setting the standard for AI-native UI development.",permalink:"/blog/shadcn-blog",formattedDate:"June 5, 2025",authors:[{name:"\xd6zg\xfcr Ak\xe7a",title:"Junior Developer Relations",url:"https://github.com/doguhanozgurakca",imageURL:"https://github.com/doguhanozgurakca.png",key:"ozgur"}],readingTime:6.475,date:"2025-06-05T00:00:00.000Z"}],authorPosts:[{title:"Git Merge vs. Git Rebase, The Ultimate Guide to Combining Branches",description:"We will dive into the key differences between git merge and git rebase.",permalink:"/blog/git-merge-vs-rebase",formattedDate:"July 9, 2025",authors:[{name:"\xd6zg\xfcr Ak\xe7a",title:"Junior Developer Relations",url:"https://github.com/doguhanozgurakca",imageURL:"https://github.com/doguhanozgurakca.png",key:"ozgur"}],readingTime:8.605,date:"2025-07-09T00:00:00.000Z"},{title:"Refine AI Levels Up with Claude 4",description:"Refine AI now capitalizes on the power of Anthropic's newly released Claude 4 models, improving output quality and productivity in your future and existing Refine AI projects.",permalink:"/blog/refine-ai-claude-4",formattedDate:"May 26, 2025",authors:[{name:"\xd6zg\xfcr Ak\xe7a",title:"Junior Developer Relations",url:"https://github.com/doguhanozgurakca",imageURL:"https://github.com/doguhanozgurakca.png",key:"ozgur"}],readingTime:2.555,date:"2025-05-26T00:00:00.000Z"},{title:"AI-First UIs: Why shadcn/ui's Model is Leading the Pack",description:"How shadcn/ui's component architecture and direct code ownership are setting the standard for AI-native UI development.",permalink:"/blog/shadcn-blog",formattedDate:"June 5, 2025",authors:[{name:"\xd6zg\xfcr Ak\xe7a",title:"Junior Developer Relations",url:"https://github.com/doguhanozgurakca",imageURL:"https://github.com/doguhanozgurakca.png",key:"ozgur"}],readingTime:6.475,date:"2025-06-05T00:00:00.000Z"}]},g={authorsImageUrls:[void 0]},d=[{value:"Vibe Coding Is Real, Even If It Sounds Fake",id:"vibe-coding-is-real-even-if-it-sounds-fake",level:2},{value:"It Wasn\u2019t Always Like This",id:"it-wasnt-always-like-this",level:2},{value:"When the Vibes Are Good",id:"when-the-vibes-are-good",level:2},{value:"When the Vibes Go Sour",id:"when-the-vibes-go-sour",level:2},{value:"Vibe Coding Isn\u2019t a Threat \u2014 It\u2019s a Tool",id:"vibe-coding-isnt-a-threat--its-a-tool",level:2},{value:"Vibe On, But Don\u2019t Forget to Refactor",id:"vibe-on-but-dont-forget-to-refactor",level:2}],h={toc:d},c="wrapper";function p(e){var{components:t}=e,o=r(e,["components"]);return(0,n.yg)(c,a(function(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{},n=Object.keys(o);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(o).filter((function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable})))),n.forEach((function(t){i(e,t,o[t])}))}return e}({},h,o),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#what-is-vibe-coding"},"Introduction")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#vibe-coding-is-real-even-if-it-sounds-fake"},"Vibe Coding Is Real, Even If It Sounds Fake")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#it-wasnt-always-like-this"},"It Wasn\u2019t Always Like This")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#when-the-vibes-are-good"},"When the Vibes Are Good")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#when-the-vibes-go-sour"},"When the Vibes Go Sour")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#vibe-coding-isnt-a-threat--its-a-tool"},"Vibe Coding Isn\u2019t a Threat \u2014 It\u2019s a Tool")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#vibe-on-but-dont-forget-to-refactor"},"Vibe On, But Don\u2019t Forget to Refactor"))),(0,n.yg)("p",null,"It usually starts with a half-formed idea. Something you saw in a product, or a pain point you felt in your own workflow. You don\u2019t open a design tool. You don\u2019t write a spec. You barely even think in terms of \u201cbuilding\u201d something yet \u2014 you\u2019re just curious to see what happens if you nudge an idea into motion."),(0,n.yg)("p",null,"So you open ChatGPT, or Claude, or v0, or whatever your current favorite AI tool is, and you type something like:\n",(0,n.yg)("strong",{parentName:"p"},"\u201cCan you make a UI to manage content approvals with basic role-based permissions?\u201d")),(0,n.yg)("p",null,"A moment later, there\u2019s code. A working layout. Maybe even styled buttons. You paste it into your dev environment, hit save, and\u2026 it just runs. It\u2019s crude, maybe a little weird, but it does what you asked. You didn\u2019t plan anything, you didn\u2019t write a doc, and you\u2019re not even sure what the app will look like when it\u2019s done \u2014 but you\u2019re vibing with it."),(0,n.yg)("p",null,"That\u2019s ",(0,n.yg)("strong",{parentName:"p"},"vibe coding"),"."),(0,n.yg)("p",null,"It\u2019s not a methodology, not quite a workflow, and definitely not something you\u2019ll find in a software engineering textbook. But it\u2019s real. It\u2019s the new way many developers \u2014 especially indie hackers, prototypers, and curious tinkerers \u2014 are building things in 2025. And it\u2019s reshaping how software gets made."),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"vibe-coding-is-real-even-if-it-sounds-fake"},"Vibe Coding Is Real, Even If It Sounds Fake"),(0,n.yg)("p",null,"The best way to describe vibe coding is that it\u2019s software development driven more by intuition than by formal planning. It\u2019s when you start building from a feeling rather than a roadmap. You\u2019re not following a strict process; you\u2019re exploring, playing, adjusting course as you go. It\u2019s a bit like jazz \u2014 improvisational, loose, sometimes messy, but when it works, it feels effortless."),(0,n.yg)("p",null,"Vibe coding became viable when AI tools got fast, smart, and deeply integrated into development workflows. Instead of sketching out a rough wireframe, you now describe the app in a prompt. Instead of writing boilerplate from scratch, you delegate it to a code generator. Instead of navigating documentation, you ask the AI to walk you through it. You\u2019re not necessarily writing less code \u2014 but you\u2019re making fewer decisions up front. The architecture emerges as you build."),(0,n.yg)("p",null,"What\u2019s striking about vibe coding is how it rewires your relationship to momentum. Traditional development starts with setup. You plan first \u2014 routes, schemas, component trees \u2014 then begin to implement. Vibe coding flips this. You implement first, then refactor. You move fast not because you\u2019re cutting corners, but because the corners don\u2019t even exist yet. You\u2019re inside the sketch of a sketch, discovering the edges of your idea by bumping into them."),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"it-wasnt-always-like-this"},"It Wasn\u2019t Always Like This"),(0,n.yg)("p",null,"Just a few years ago, this style of building would\u2019ve been impractical, if not impossible. Starting a new app meant setting up boilerplate, configuring packages, writing your own skeletons for things like routing, state management, and user auth. Prototyping something even halfway polished took days, not minutes."),(0,n.yg)("p",null,"But now, with LLMs capable of generating full React components from a sentence, and tools like Vercel\u2019s v0 turning prompts directly into deployable frontends, the distance between \u201cidea\u201d and \u201cimplementation\u201d has shrunk to almost nothing. You don\u2019t need to create a new repo or choose between Tailwind and MUI. You just tell the machine what you want and start massaging what it gives you. The scaffolding appears instantly. The vibe takes over."),(0,n.yg)("p",null,"And it\u2019s not just the generation of code that makes this possible. It\u2019s the way these tools let you skip so many intermediate steps. You don\u2019t have to deeply understand a library\u2019s API before you use it \u2014 you can copy-paste an AI-written snippet and see what happens. You don\u2019t need to define your data models upfront \u2014 you just create the UI and stub in the data as you go. You\u2019re not optimizing for correctness. You\u2019re optimizing for flow."),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"when-the-vibes-are-good"},"When the Vibes Are Good"),(0,n.yg)("p",null,"The surprising part is how productive vibe coding can be \u2014 especially for early-stage projects. If you\u2019re building a dashboard, a form, a search UI, an internal tool, or even a lightweight SaaS MVP, vibe coding gets you to \u201cworking\u201d faster than almost anything else. You\u2019re skipping over the usual slog of setup and jumping straight into shaping behavior."),(0,n.yg)("p",null,"This is particularly magical when you\u2019re exploring an idea you\u2019re not entirely sure about. Maybe you\u2019re trying to visualize some data in a new way, or rethinking how people create playlists, or inventing a better way to manage personal todos. Vibe coding lets you build just enough to see the shape of the idea \u2014 and often, that\u2019s all you need to realize whether it\u2019s worth pursuing."),(0,n.yg)("p",null,"And there\u2019s a creative joy to it, too. You\u2019re not worrying about lint rules or folder structure. You\u2019re not obsessing over test coverage. You\u2019re just making stuff. You\u2019re letting the code guide you, surprising yourself with what emerges. It feels less like engineering and more like sketching in code."),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"when-the-vibes-go-sour"},"When the Vibes Go Sour"),(0,n.yg)("p",null,"Of course, there are limits. Vibe coding is a great way to explore an idea \u2014 it\u2019s a terrible way to scale one."),(0,n.yg)("p",null,"Eventually, entropy catches up with you. You realize your component tree is a rat\u2019s nest. Your API calls are duplicated across three files. Your state is a mess of derived variables and hand-rolled context providers. The AI gave you what you asked for \u2014 and now you\u2019re stuck figuring out what it gave you."),(0,n.yg)("p",null,"One of the weird ironies of vibe coding is that while it feels easier, it often makes maintenance harder. The lack of structure that made things fast to start now becomes a burden. Refactoring AI-generated code is like renovating a house with no blueprint. You can do it \u2014 but you\u2019ll wish you\u2019d laid a better foundation."),(0,n.yg)("p",null,"This is where experienced developers still shine. Vibe coding gives you a sketch, but turning it into something sustainable still requires taste, judgment, and craft. You have to know when to stop vibing and start engineering."),(0,n.yg)("p",null,"This is also where the purpose-built AI Agents come in, which are the perfect inbetween, requiring more experience to use but resulting in cleaner code overall. Check out our blog post about ",(0,n.yg)("a",{parentName:"p",href:"/blog/ai-future-of-internal-enterprise-apps"},"Purpose-Built AI Agents"),"."),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"vibe-coding-isnt-a-threat--its-a-tool"},"Vibe Coding Isn\u2019t a Threat \u2014 It\u2019s a Tool"),(0,n.yg)("p",null,"Some developers see vibe coding and worry that it\u2019s \u201clazy\u201d or \u201cbad practice.\u201d But that misses the point. It\u2019s not a replacement for thoughtful design \u2014 it\u2019s a complement to it. A way to move quickly when you need speed, not structure. A way to build your way into clarity."),(0,n.yg)("p",null,"It\u2019s not for everything. If you\u2019re writing infrastructure, building a critical backend service, or scaling a large team, you probably don\u2019t want to vibe code your way through it. But for personal projects, rapid experiments, and even internal tools, it\u2019s an incredibly effective way to get to working software."),(0,n.yg)("p",null,"And over time, as AI tools improve, the line between vibe coding and traditional development will blur. What starts as a loose sketch might become the seed of a more rigorous system. What begins as a half-baked idea might harden into a real product. The key is knowing how to transition \u2014 when to embrace the vibes, and when to tighten the reins."),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"vibe-on-but-dont-forget-to-refactor"},"Vibe On, But Don\u2019t Forget to Refactor"),(0,n.yg)("p",null,"At its best, vibe coding makes development feel light again. It brings back the playful, exploratory spirit that many of us fell in love with in the first place \u2014 when coding felt like creativity, not just implementation. You get to chase ideas, skip the drudgery, and see what happens when you let instinct lead."),(0,n.yg)("p",null,"But it\u2019s not magic. It\u2019s not a license to ship garbage. It\u2019s a tool. A sketchpad. A way to move fast \u2014 with the understanding that, eventually, you\u2019ll need to slow down and do the work of shaping it into something real."),(0,n.yg)("p",null,"So vibe code. Let the tools do their thing. Explore the weird corners of your imagination. Build things you don\u2019t understand yet. But when it\u2019s time to go from sketch to structure \u2014 make sure you show up as an engineer."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"That\u2019s the real vibe.")))}p.isMDXComponent=!0}}]);