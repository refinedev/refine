"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[52486],{58860:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>m});var a=n(37953);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),u=r,m=c["".concat(s,".").concat(u)]||c[u]||g[u]||i;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},79991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>d,toc:()=>c});n(37953);var a=n(58860);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const l={title:"List",source:"https://github.com/refinedev/refine/tree/main/packages/refine-ui/registry/new-york/refine-ui/views/list-view.tsx"},s=void 0,d={unversionedId:"ui-integrations/shadcn/components/basic-views/list/index",id:"ui-integrations/shadcn/components/basic-views/list/index",title:"List",description:"`` provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.",source:"@site/docs/ui-integrations/shadcn/components/basic-views/list/index.md",sourceDirName:"ui-integrations/shadcn/components/basic-views/list",slug:"/ui-integrations/shadcn/components/basic-views/list/",permalink:"/docs/ui-integrations/shadcn/components/basic-views/list/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/docs/ui-integrations/shadcn/components/basic-views/list/index.md",tags:[],version:"current",lastUpdatedBy:"\xd6zg\xfcr Ak\xe7a",lastUpdatedAt:1758111044,formattedLastUpdatedAt:"Sep 17, 2025",frontMatter:{title:"List",source:"https://github.com/refinedev/refine/tree/main/packages/refine-ui/registry/new-york/refine-ui/views/list-view.tsx"},sidebar:"mainSidebar",previous:{title:"Edit",permalink:"/docs/ui-integrations/shadcn/components/basic-views/edit/"},next:{title:"Show",permalink:"/docs/ui-integrations/shadcn/components/basic-views/show/"}},p={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"ListView Properties",id:"listview-properties",level:3},{value:"ListViewHeader Properties",id:"listviewheader-properties",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Title and Actions",id:"custom-title-and-actions",level:3},{value:"Hide Breadcrumb",id:"hide-breadcrumb",level:3},{value:"Custom CSS Classes",id:"custom-css-classes",level:3}],g=(u="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.yg)("div",e)});var u;const m={toc:c},y="wrapper";function b(e){var{components:t}=e,n=o(e,["components"]);return(0,a.yg)(y,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),a.forEach((function(t){r(e,t,n[t])}))}return e}({},m,n),{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"<ListView />")," provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page."),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"ListView")," component is designed for displaying a list of records with automatic resource detection, breadcrumb navigation, and an optional create button."),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)(g,{id:"installation",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npx shadcn@latest add https://ui.refine.dev/r/views.json\n")),(0,a.yg)("p",null,"This will install all view components including ",(0,a.yg)("inlineCode",{parentName:"p"},"ListView"),".")),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)(g,{id:"usage",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import {\n  ListView,\n  ListViewHeader,\n} from "@/components/refine-ui/views/list-view";\nimport { LoadingOverlay } from "@/components/refine-ui/layout/loading-overlay";\n\nexport default function PostListPage() {\n  const isLoading = false; // or true, based on your data fetching state\n  const error = null; // or object, based on your data fetching state\n\n  if (error) {\n    return (\n      <ListView>\n        <ListViewHeader />\n        {/* Error content */}\n      </ListView>\n    );\n  }\n\n  return (\n    <ListView>\n      <ListViewHeader />\n      <LoadingOverlay loading={isLoading}>\n        {/* Record content (e.g., DataTable) */}\n      </LoadingOverlay>\n    </ListView>\n  );\n}\n'))),(0,a.yg)("h2",{id:"features"},"Features"),(0,a.yg)(g,{id:"features",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Resource Integration"),": Automatic resource detection and title generation"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Breadcrumb Navigation"),": Built-in breadcrumb component"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Optional Create Button"),": ",(0,a.yg)("inlineCode",{parentName:"li"},"CreateButton")," (from ",(0,a.yg)("inlineCode",{parentName:"li"},"buttons")," package) is displayed based on resource definition or ",(0,a.yg)("inlineCode",{parentName:"li"},"canCreate")," prop"))),(0,a.yg)("h2",{id:"api-reference"},"API Reference"),(0,a.yg)("h3",{id:"listview-properties"},"ListView Properties"),(0,a.yg)(g,{id:"listview-properties",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Prop"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Default"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"children")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"ReactNode")),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"Content to render inside the view")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"className")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"Additional CSS classes for the container"))))),(0,a.yg)("h3",{id:"listviewheader-properties"},"ListViewHeader Properties"),(0,a.yg)(g,{id:"listviewheader-properties",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Prop"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Default"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"resource")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"Current resource"),(0,a.yg)("td",{parentName:"tr",align:null},"Override the resource name for title and actions")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"title")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"Auto-generated"),(0,a.yg)("td",{parentName:"tr",align:null},"Custom title for the header")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"hideBreadcrumb")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"boolean")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"false")),(0,a.yg)("td",{parentName:"tr",align:null},"Set to ",(0,a.yg)("inlineCode",{parentName:"td"},"true")," to hide the breadcrumb")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"wrapperClassName")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"CSS classes for the header's main wrapper div")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"headerClassName")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"CSS classes for the div containing title and actions")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"canCreate")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"boolean")),(0,a.yg)("td",{parentName:"tr",align:null},"Resource default"),(0,a.yg)("td",{parentName:"tr",align:null},"Manually control visibility of the create button"))))),(0,a.yg)("h2",{id:"advanced-usage"},"Advanced Usage"),(0,a.yg)("h3",{id:"custom-title-and-actions"},"Custom Title and Actions"),(0,a.yg)(g,{id:"custom-title-and-actions",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import {\n  ListView,\n  ListViewHeader,\n} from "@/components/refine-ui/views/list-view";\nimport { Button } from "@/components/ui/button";\n\nexport default function PostListPage() {\n  return (\n    <ListView>\n      <ListViewHeader title="My Custom Posts List" canCreate={false} />\n      {/* Your list content */}\n    </ListView>\n  );\n}\n'))),(0,a.yg)("h3",{id:"hide-breadcrumb"},"Hide Breadcrumb"),(0,a.yg)(g,{id:"hide-breadcrumb",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"<ListViewHeader hideBreadcrumb={true} />\n"))),(0,a.yg)("h3",{id:"custom-css-classes"},"Custom CSS Classes"),(0,a.yg)(g,{id:"custom-css-classes",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<ListView className="my-custom-list">\n  <ListViewHeader\n    wrapperClassName="custom-header-wrapper"\n    headerClassName="custom-header-content"\n  />\n</ListView>\n'))))}b.isMDXComponent=!0}}]);