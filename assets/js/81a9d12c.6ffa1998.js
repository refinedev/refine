"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[64124],{58860:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var r=n(37953);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},s="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),s=d(n),h=o,g=s["".concat(l,".").concat(h)]||s[h]||p[h]||i;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=h;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[s]="string"==typeof e?e:o,a[1]=u;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},43168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>v,frontMatter:()=>u,metadata:()=>d,toc:()=>s});n(37953);var r=n(58860);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}const u={id:"auth0",title:"Auth0 Login",sidebar_label:"Auth0 Login"},l=void 0,d={unversionedId:"advanced-tutorials/auth/auth0",id:"version-4.xx.xx/advanced-tutorials/auth/auth0",title:"Auth0 Login",description:"Auth0 is a flexible, drop-in solution for adding authentication and authorization services to your applications. Your team and organization can avoid the cost, time, and risk that comes with building your own solution to authenticate and authorize users. You can check the Auth0 document for details.",source:"@site/versioned_docs/version-4.xx.xx/advanced-tutorials/auth/auth0.md",sourceDirName:"advanced-tutorials/auth",slug:"/advanced-tutorials/auth/auth0",permalink:"/docs/4.xx.xx/advanced-tutorials/auth/auth0",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-4.xx.xx/advanced-tutorials/auth/auth0.md",tags:[],version:"4.xx.xx",lastUpdatedBy:"Alican Erdurmaz",lastUpdatedAt:1755000415,formattedLastUpdatedAt:"Aug 12, 2025",frontMatter:{id:"auth0",title:"Auth0 Login",sidebar_label:"Auth0 Login"},sidebar:"mainSidebar",previous:{title:"Access Control",permalink:"/docs/4.xx.xx/advanced-tutorials/access-control"},next:{title:"Azure AD Login",permalink:"/docs/4.xx.xx/advanced-tutorials/auth/azure-ad"}},c={},s=[{value:"Installation",id:"installation",level:3},{value:"Configure the Auth0Provider component",id:"configure-the-auth0provider-component",level:4},{value:"Override <code>/login</code> page",id:"override-login-page",level:3},{value:"Auth Provider",id:"auth-provider",level:2},{value:"Methods",id:"methods",level:3},{value:"login",id:"login",level:4},{value:"logout",id:"logout",level:4},{value:"checkError &amp; getPermissions",id:"checkerror--getpermissions",level:4},{value:"checkAuth",id:"checkauth",level:4},{value:"getUserIdentity",id:"getuseridentity",level:4},{value:"Example",id:"example",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",t)},h=p("DocThumbsUpDownFeedbackWidget"),g=p("InstallPackagesCommand"),m=p("CodeSandboxExample"),y={toc:s},f="wrapper";function v(e){var{components:t}=e,n=a(e,["components"]);return(0,r.yg)(f,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){o(e,t,n[t])}))}return e}({},y,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://auth0.com/"},"Auth0")," is a flexible, drop-in solution for adding authentication and authorization services to your applications. Your team and organization can avoid the cost, time, and risk that comes with building your own solution to authenticate and authorize users. You can check the ",(0,r.yg)("a",{parentName:"p",href:"https://auth0.com/docs"},"Auth0 document")," for details."),(0,r.yg)("p",null,"We will show you how to use Auth0 with Refine"),(0,r.yg)("h3",{id:"installation"},"Installation"),(0,r.yg)(h,{id:"installation",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Run the following command within your project directory to install the Auth0 React SDK:"),(0,r.yg)(g,{args:"@auth0/auth0-react",mdxType:"InstallPackagesCommand"})),(0,r.yg)("h4",{id:"configure-the-auth0provider-component"},"Configure the Auth0Provider component"),(0,r.yg)(h,{id:"configure-the-auth0provider-component",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Wrap your root component with an Auth0Provider that you can import from the SDK."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="index.tsx"',title:'"index.tsx"'},'import React from "react";\nimport { createRoot } from "react-dom/client";\n\n// highlight-next-line\nimport { Auth0Provider } from "@auth0/auth0-react";\n\nimport App from "./App";\n\nconst container = document.getElementById("root");\nconst root = createRoot(container!);\nroot.render(\n  <React.StrictMode>\n    // highlight-start\n    <Auth0Provider\n      domain="YOUR_DOMAIN"\n      clientId="YOUR_CLIENT_ID"\n      redirectUri={window.location.origin}\n    >\n      <App />\n    </Auth0Provider>\n    // highlight-end\n  </React.StrictMode>,\n);\n')),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Refer to ",(0,r.yg)("a",{parentName:"p",href:"https://auth0.com/docs/quickstart/spa/react#configure-auth0"},(0,r.yg)("strong",{parentName:"a"},"Auth0 docs"))," for detailed configuration."))),(0,r.yg)("h3",{id:"override-login-page"},"Override ",(0,r.yg)("inlineCode",{parentName:"h3"},"/login")," page"),(0,r.yg)(h,{id:"override-login-page",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"First, we need to override the ",(0,r.yg)("strong",{parentName:"p"},"Refine")," login page. In this way, we will redirect it to the Auth0 login page. We create a ",(0,r.yg)("inlineCode",{parentName:"p"},"login.tsx")," file in the ",(0,r.yg)("inlineCode",{parentName:"p"},"/pages")," folder."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/pages/login.tsx"',title:'"/pages/login.tsx"'},'import { Layout, Button, Space, Typography } from "antd";\nimport { ThemedTitleV2 } from "@refinedev/antd";\n// highlight-next-line\nimport { useAuth0 } from "@auth0/auth0-react";\n\nexport const Login: React.FC = () => {\n  // highlight-next-line\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Layout\n      style={{\n        height: "100vh",\n        justifyContent: "center",\n        alignItems: "center",\n      }}\n    >\n      <Space direction="vertical" align="center" size="large">\n        <ThemedTitleV2\n          collapsed={false}\n          wrapperStyles={{\n            fontSize: "22px",\n          }}\n        />\n        <Button\n          type="primary"\n          size="middle"\n          // highlight-next-line\n          onClick={() => loginWithRedirect()}\n          style={{ width: "240px" }}\n        >\n          Sign in\n        </Button>\n        <Typography.Text type="secondary">Powered by Auth0</Typography.Text>\n      </Space>\n    </Layout>\n  );\n};\n')),(0,r.yg)("p",null,"After clicking the ",(0,r.yg)("inlineCode",{parentName:"p"},"Login")," button, you will be directed to the auth0 login screen."),(0,r.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/guides-and-concepts/auth0/auth0-login-min.gif",className:"border border-gray-200 rounded",alt:"auth0-login"})),(0,r.yg)("h2",{id:"auth-provider"},"Auth Provider"),(0,r.yg)(h,{id:"auth-provider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"In Refine, authentication and authorization processes are performed with the auth provider. Let's write a provider for Auth0."),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Show Code"),(0,r.yg)("p",null,(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine, AuthProvider, Authenticated } from "@refinedev/core";\nimport {\n  ThemedLayoutV2,\n  ReadyPage,\n  useNotificationProvider,\n  ErrorComponent,\n  RefineThemes,\n} from "@refinedev/antd";\nimport dataProvider from "@refinedev/simple-rest";\nimport routerProvider, {\n  NavigateToResource,\n  CatchAllNavigate,\n} from "@refinedev/react-router";\nimport { useAuth0 } from "@auth0/auth0-react";\n\nimport { BrowserRouter, Routes, Route, Outlet } from "react-router";\n\nimport { ConfigProvider } from "antd";\nimport "@refinedev/antd/dist/reset.css";\n\nimport { Login } from "pages/login";\n\nimport axios from "axios";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App = () => {\n  const { isLoading, isAuthenticated, user, logout, getIdTokenClaims } =\n    useAuth0();\n\n  if (isLoading) {\n    return <span>loading...</span>;\n  }\n\n  const authProvider: AuthProvider = {\n    login: async () => {\n      return {\n        success: true,\n      };\n    },\n    logout: async () => {\n      logout({ returnTo: window.location.origin });\n      return {\n        success: true,\n      };\n    },\n    onError: async (error) => {\n      console.error(error);\n      return { error };\n    },\n    check: async () => {\n      try {\n        const token = await getIdTokenClaims();\n        if (token) {\n          axios.defaults.headers.common = {\n            Authorization: `Bearer ${token.__raw}`,\n          };\n          return {\n            authenticated: true,\n          };\n        } else {\n          return {\n            authenticated: false,\n            error: {\n              message: "Check failed",\n              name: "Token not found",\n            },\n            redirectTo: "/login",\n            logout: true,\n          };\n        }\n      } catch (error: any) {\n        return {\n          authenticated: false,\n          error: new Error(error),\n          redirectTo: "/login",\n          logout: true,\n        };\n      }\n    },\n    getPermissions: async () => null,\n    getIdentity: async () => {\n      if (user) {\n        return {\n          ...user,\n          avatar: user.picture,\n        };\n      }\n      return null;\n    },\n  };\n\n  getIdTokenClaims().then((token) => {\n    if (token) {\n      axios.defaults.headers.common = {\n        Authorization: `Bearer ${token.__raw}`,\n      };\n    }\n  });\n\n  return (\n    <BrowserRouter>\n      <ConfigProvider theme={RefineThemes.Blue}>\n        <Refine\n          routerProvider={routerProvider}\n          authProvider={authProvider}\n          dataProvider={dataProvider(API_URL, axios)}\n          notificationProvider={useNotificationProvider}\n          resources={[\n            {\n              name: "posts",\n              list: "/posts",\n            },\n          ]}\n        >\n          <Routes>\n            <Route\n              element={\n                <Authenticated fallback={<CatchAllNavigate to="/login" />}>\n                  <ThemedLayoutV2>\n                    <Outlet />\n                  </ThemedLayoutV2>\n                </Authenticated>\n              }\n            >\n              <Route path="/posts" element={<div>dummy list page</div>} />\n            </Route>\n            <Route\n              element={\n                <Authenticated fallback={<Outlet />}>\n                  <NavigateToResource />\n                </Authenticated>\n              }\n            >\n              <Route path="/login" element={<Login />} />\n            </Route>\n            <Route path="*" element={<ErrorComponent />} />\n          </Routes>\n        </Refine>\n      </ConfigProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n'))))),(0,r.yg)("h3",{id:"methods"},"Methods"),(0,r.yg)("h4",{id:"login"},"login"),(0,r.yg)(h,{id:"login",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"loginWithRedirect")," method comes from the ",(0,r.yg)("inlineCode",{parentName:"p"},"useAuth0")," hook.")),(0,r.yg)("h4",{id:"logout"},"logout"),(0,r.yg)(h,{id:"logout",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"logout")," method comes from the ",(0,r.yg)("inlineCode",{parentName:"p"},"useAuth0")," hook.")),(0,r.yg)("h4",{id:"checkerror--getpermissions"},"checkError & getPermissions"),(0,r.yg)(h,{id:"checkerror--getpermissions",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"We revert to empty promise because Auth0 does not support it.")),(0,r.yg)("h4",{id:"checkauth"},"checkAuth"),(0,r.yg)(h,{id:"checkauth",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"We can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"isAuthenticated")," method, which returns the authentication status of the ",(0,r.yg)("inlineCode",{parentName:"p"},"useAuth0")," hook.")),(0,r.yg)("h4",{id:"getuseridentity"},"getUserIdentity"),(0,r.yg)(h,{id:"getuseridentity",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"We can use it with the ",(0,r.yg)("inlineCode",{parentName:"p"},"user")," from the ",(0,r.yg)("inlineCode",{parentName:"p"},"useAuth0")," hook.")),(0,r.yg)("h2",{id:"example"},"Example"),(0,r.yg)(h,{id:"example",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Auth0 example doesn't work in CodeSandbox embed mode. With ",(0,r.yg)("a",{parentName:"p",href:"https://cv8k99.csb.app/"},"this")," link, you can open the example in the browser and try it.")),(0,r.yg)(m,{path:"auth-auth0",mdxType:"CodeSandboxExample"})))}v.isMDXComponent=!0}}]);