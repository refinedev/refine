"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[90380],{58860:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>c});var r=n(37953);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),d=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(m.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(n),g=a,c=p["".concat(m,".").concat(g)]||p[g]||u[g]||o;return n?r.createElement(c,i(i({ref:t},s),{},{components:n})):r.createElement(c,i({ref:t},s))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},86779:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>m,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>p});n(37953);var r=n(58860);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const l={source:"https://github.com/refinedev/refine/tree/main/packages/refine-ui/registry/new-york/refine-ui/layout/layout-01/layout.tsx"},m="<ThemedLayout />",d={unversionedId:"ui-integrations/shadcn/components/themed-layout/index",id:"ui-integrations/shadcn/components/themed-layout/index",title:"<ThemedLayout />",description:"Modern admin dashboards should support both light and dark themes. Users often prefer dark mode for late-night work, while others prefer light mode during the day. This theme system provides everything you need to add theme switching to your Refine app.",source:"@site/docs/ui-integrations/shadcn/components/themed-layout/index.md",sourceDirName:"ui-integrations/shadcn/components/themed-layout",slug:"/ui-integrations/shadcn/components/themed-layout/",permalink:"/docs/ui-integrations/shadcn/components/themed-layout/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/docs/ui-integrations/shadcn/components/themed-layout/index.md",tags:[],version:"current",lastUpdatedBy:"\xd6zg\xfcr Ak\xe7a",lastUpdatedAt:1758111044,formattedLastUpdatedAt:"Sep 17, 2025",frontMatter:{source:"https://github.com/refinedev/refine/tree/main/packages/refine-ui/registry/new-york/refine-ui/layout/layout-01/layout.tsx"},sidebar:"mainSidebar",previous:{title:"<DataTable />",permalink:"/docs/ui-integrations/shadcn/components/data-table/"},next:{title:"<ErrorComponent />",permalink:"/docs/ui-integrations/shadcn/components/error-component/"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"Adding Theme Controls",id:"adding-theme-controls",level:2},{value:"Custom Theme Control",id:"custom-theme-control",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"ThemeProvider",id:"themeprovider",level:3},{value:"ThemeToggle",id:"themetoggle",level:3},{value:"ThemeSelect",id:"themeselect",level:3},{value:"useTheme Hook",id:"usetheme-hook",level:3}],u=(g="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+g+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",e)});var g;const c={toc:p},y="wrapper";function h(e){var{components:t}=e,n=i(e,["components"]);return(0,r.yg)(y,o(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},c,n),{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"themedlayout-"},(0,r.yg)("inlineCode",{parentName:"h1"},"<ThemedLayout />")),(0,r.yg)("p",null,"Modern admin dashboards should support both light and dark themes. Users often prefer dark mode for late-night work, while others prefer light mode during the day. This theme system provides everything you need to add theme switching to your Refine app."),(0,r.yg)("p",null,"The system includes a provider for theme management, toggle buttons for quick switching, and dropdown selectors for explicit theme choice. It automatically saves the user's preference and supports system theme detection."),(0,r.yg)("h2",{id:"installation"},"Installation"),(0,r.yg)(u,{id:"installation",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Add the theme system to your project:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npx shadcn@latest add https://ui.refine.dev/r/theme-provider.json\n")),(0,r.yg)("p",null,"This installs the complete theme system with light/dark/system theme support.")),(0,r.yg)("h2",{id:"setup"},"Setup"),(0,r.yg)(u,{id:"setup",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"First, wrap your app with the theme provider:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'import { ThemeProvider } from "@/components/refine-ui/theme/theme-provider";\n\nfunction App() {\n  return (\n    <ThemeProvider defaultTheme="system" storageKey="refine-ui-theme">\n      {/* Your app content */}\n    </ThemeProvider>\n  );\n}\n')),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},'defaultTheme="system"')," means it will automatically match the user's operating system preference. The theme choice is automatically saved to localStorage so users don't have to re-select their preference.")),(0,r.yg)("h2",{id:"adding-theme-controls"},"Adding Theme Controls"),(0,r.yg)(u,{id:"adding-theme-controls",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Now you can add theme switching controls to your layout. The most common approach is adding a theme toggle to your header:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'import { ThemeToggle } from "@/components/refine-ui/theme/theme-toggle";\nimport { ThemeSelect } from "@/components/refine-ui/theme/theme-select";\n\nfunction Layout() {\n  return (\n    <div>\n      <header className="flex items-center justify-between p-4">\n        <h1>My Admin Dashboard</h1>\n        {/* Quick theme toggle button */}\n        <ThemeToggle />\n      </header>\n\n      {/* Or use a dropdown in user menus */}\n      <nav>\n        <ThemeSelect />\n      </nav>\n    </div>\n  );\n}\n')),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"ThemeToggle")," cycles through light \u2192 dark \u2192 system themes with each click. The ",(0,r.yg)("inlineCode",{parentName:"p"},"ThemeSelect")," shows a dropdown with explicit options.")),(0,r.yg)("h2",{id:"custom-theme-control"},"Custom Theme Control"),(0,r.yg)(u,{id:"custom-theme-control",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can also build custom theme controls using the ",(0,r.yg)("inlineCode",{parentName:"p"},"useTheme")," hook:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx"},'import { useTheme } from "@/components/refine-ui/theme/theme-provider";\n\nfunction CustomThemeButton() {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <div className="flex gap-2">\n      <span>Current: {theme}</span>\n      <button onClick={() => setTheme("light")}>Light</button>\n      <button onClick={() => setTheme("dark")}>Dark</button>\n      <button onClick={() => setTheme("system")}>System</button>\n    </div>\n  );\n}\n'))),(0,r.yg)("h2",{id:"api-reference"},"API Reference"),(0,r.yg)("h3",{id:"themeprovider"},"ThemeProvider"),(0,r.yg)(u,{id:"themeprovider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Prop"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"children")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"ReactNode")),(0,r.yg)("td",{parentName:"tr",align:null},"-"),(0,r.yg)("td",{parentName:"tr",align:null},"Child components")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"defaultTheme")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},'"light" \\| "dark" \\| "system"')),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},'"system"')),(0,r.yg)("td",{parentName:"tr",align:null},"Default theme when none is stored")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"storageKey")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},'"refine-ui-theme"')),(0,r.yg)("td",{parentName:"tr",align:null},"localStorage key for persistence"))))),(0,r.yg)("h3",{id:"themetoggle"},"ThemeToggle"),(0,r.yg)(u,{id:"themetoggle",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Cycling button that switches between themes."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Prop"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"className")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"string")),(0,r.yg)("td",{parentName:"tr",align:null},"Additional CSS classes"))))),(0,r.yg)("h3",{id:"themeselect"},"ThemeSelect"),(0,r.yg)(u,{id:"themeselect",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Dropdown menu for theme selection.")),(0,r.yg)("h3",{id:"usetheme-hook"},"useTheme Hook"),(0,r.yg)(u,{id:"usetheme-hook",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Return Value"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"theme")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},'"light" \\| "dark" \\| "system"')),(0,r.yg)("td",{parentName:"tr",align:null},"Current theme")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"setTheme")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},'(theme: "light" \\| "dark" \\| "system") => void')),(0,r.yg)("td",{parentName:"tr",align:null},"Function to change theme"))))))}h.isMDXComponent=!0}}]);