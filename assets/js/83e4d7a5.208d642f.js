"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[11850],{58860:(e,n,t)=>{t.d(n,{xA:()=>l,yg:()=>g});var o=t(37953);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=o.createContext({}),p=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=p(e.components);return o.createElement(d.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=i,g=u["".concat(d,".").concat(m)]||u[m]||c[m]||r;return t?o.createElement(g,a(a({ref:n},l),{},{components:t})):o.createElement(g,a({ref:n},l))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,a=new Array(r);a[0]=m;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<r;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},68305:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>f,frontMatter:()=>s,metadata:()=>p,toc:()=>u});t(37953);var o=t(58860);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function a(e,n){if(null==e)return{};var t,o,i=function(e,n){if(null==e)return{};var t,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}const s={id:"edit",title:"Edit",swizzle:!0},d=void 0,p={unversionedId:"api-reference/mui/components/basic-views/edit",id:"version-3.xx.xx/api-reference/mui/components/basic-views/edit",title:"Edit",description:"` provides us a layout for displaying the page. It does not contain any logic but adds extra functionalities like a `.",source:"@site/versioned_docs/version-3.xx.xx/api-reference/mui/components/basic-views/edit.md",sourceDirName:"api-reference/mui/components/basic-views",slug:"/api-reference/mui/components/basic-views/edit",permalink:"/docs/3.xx.xx/api-reference/mui/components/basic-views/edit",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/mui/components/basic-views/edit.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Batuhan Wilhelm",lastUpdatedAt:1710925669,formattedLastUpdatedAt:"Mar 20, 2024",frontMatter:{id:"edit",title:"Edit",swizzle:!0},sidebar:"someSidebar",previous:{title:"Create",permalink:"/docs/3.xx.xx/api-reference/mui/components/basic-views/create"},next:{title:"List",permalink:"/docs/3.xx.xx/api-reference/mui/components/basic-views/list"}},l={},u=[{value:"Properties",id:"properties",level:2},{value:"<code>title</code>",id:"title",level:3},{value:"<code>resource</code>",id:"resource",level:3},{value:"<code>saveButtonProps</code>",id:"savebuttonprops",level:3},{value:"<code>canDelete</code> and <code>deleteButtonProps</code>",id:"candelete-and-deletebuttonprops",level:3},{value:"<code>recordItemId</code>",id:"recorditemid",level:3},{value:"<code>mutationMode</code>",id:"mutationmode",level:3},{value:"<code>dataProviderName</code>",id:"dataprovidername",level:3},{value:"<code>goBack</code>",id:"goback",level:3},{value:"<code>isLoading</code>",id:"isloading",level:3},{value:"<code>breadcrumb</code>",id:"breadcrumb",level:3},{value:"<code>wrapperProps</code>",id:"wrapperprops",level:3},{value:"<code>headerProps</code>",id:"headerprops",level:3},{value:"<code>contentProps</code>",id:"contentprops",level:3},{value:"<code>headerButtons</code>",id:"headerbuttons",level:3},{value:"<code>headerButtonProps</code>",id:"headerbuttonprops",level:3},{value:"<code>footerButtons</code>",id:"footerbuttons",level:3},{value:"<code>footerButtonProps</code>",id:"footerbuttonprops",level:3},{value:"<del><code>actionButtons</code></del>",id:"actionbuttons",level:3},{value:"<del><code>cardProps</code></del>",id:"cardprops",level:3},{value:"<del><code>cardHeaderProps</code></del>",id:"cardheaderprops",level:3},{value:"<del><code>cardContentProps</code></del>",id:"cardcontentprops",level:3},{value:"<del><code>cardActionsProps</code></del>",id:"cardactionsprops",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties-1",level:3}],c=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",n)},m=c("DocThumbsUpDownFeedbackWidget"),g=c("PropsTable"),h={toc:u},y="wrapper";function f(e){var{components:n}=e,t=a(e,["components"]);return(0,o.yg)(y,r(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},o=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),o.forEach((function(n){i(e,n,t[n])}))}return e}({},h,t),{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," provides us a layout for displaying the page. It does not contain any logic but adds extra functionalities like a ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/buttons/refresh-button"},(0,o.yg)("inlineCode",{parentName:"a"},"<RefreshButton>")),"."),(0,o.yg)("p",null,"We will show what ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," does using properties with examples."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode url=http://localhost:3000/posts/edit/123",live:!0,hideCode:!0,url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport React from "react";\nimport {\n  Edit,\n  useAutocomplete,\n  TextField,\n  Autocomplete,\n  Box,\n} from "@pankod/refine-mui";\nimport { useForm, Controller } from "@pankod/refine-react-hook-form";\n\nconst SampleEdit = () => {\n  const {\n    saveButtonProps,\n    refineCore: { queryResult },\n    register,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const samplesData = queryResult?.data?.data;\n\n  const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n    resource: "categories",\n    defaultValue: samplesData?.category?.id,\n  });\n\n  return (\n    <Edit saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("id", {\n            required: "This field is required",\n          })}\n          error={!!(errors as any)?.id}\n          helperText={(errors as any)?.id?.message}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="number"\n          label="Id"\n          name="id"\n          disabled\n        />\n        <TextField\n          {...register("title", {\n            required: "This field is required",\n          })}\n          error={!!(errors as any)?.title}\n          helperText={(errors as any)?.title?.message}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="text"\n          label="Title"\n          name="title"\n        />\n        <Controller\n          control={control}\n          name="category"\n          rules={{ required: "This field is required" }}\n          // eslint-disable-next-line\n          defaultValue={null as any}\n          render={({ field }) => (\n            <Autocomplete\n              {...categoryAutocompleteProps}\n              {...field}\n              onChange={(_, value) => {\n                field.onChange(value);\n              }}\n              getOptionLabel={(item) => {\n                return (\n                  categoryAutocompleteProps?.options?.find(\n                    (p) => p?.id?.toString() === item?.id?.toString(),\n                  )?.title ?? ""\n                );\n              }}\n              isOptionEqualToValue={(option, value) =>\n                value === undefined ||\n                option?.id?.toString() === (value?.id ?? value)?.toString()\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label="Category"\n                  margin="normal"\n                  variant="outlined"\n                  error={!!(errors as any)?.category?.id}\n                  helperText={(errors as any)?.category?.id?.message}\n                  required\n                />\n              )}\n            />\n          )}\n        />\n      </Box>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/samples/edit/123"]}\n    resources={[{ name: "samples", edit: SampleEdit, list: SampleList }]}\n  />,\n);\n')),(0,o.yg)("admonition",{title:"Swizzle",type:"info-tip"},(0,o.yg)("p",{parentName:"admonition"},"You can swizzle this component to customize it with the ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/packages/documentation/cli"},(0,o.yg)("strong",{parentName:"a"},"refine CLI")))),(0,o.yg)("h2",{id:"properties"},"Properties"),(0,o.yg)("h3",{id:"title"},(0,o.yg)("inlineCode",{parentName:"h3"},"title")),(0,o.yg)(m,{id:"title",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"It allows adding title inside the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>"),' component. if you don\'t pass title props it uses "Edit" prefix and singular resource name by default. For example, for the ',(0,o.yg)("inlineCode",{parentName:"p"},"/posts/edit"),' resource, it will be "Edit post".'),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/create",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/create"},'// visible-block-start\nimport { Edit, Typography } from "@pankod/refine-mui";\n\nconst EditPage: React.FC = () => {\n  return (\n    <Edit\n      // highlight-next-line\n      title={<Typography variant="h5">Custom Title</Typography>}\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId="123" />\n          </div>\n        ),\n        edit: EditPage,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"resource"},(0,o.yg)("inlineCode",{parentName:"h3"},"resource")),(0,o.yg)(m,{id:"resource",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," component reads the ",(0,o.yg)("inlineCode",{parentName:"p"},"resource")," information from the route by default. This default behavior will not work on custom pages. If you want to use the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," component in a custom page, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"resource")," prop."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/advanced-tutorials/custom-pages"},"Refer to the custom pages documentation for detailed usage. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/custom",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/custom"},'// handle initial routes in new way\nsetInitialRoutes(["/custom"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { Edit, Layout } from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nconst CustomPage: React.FC = () => {\n  return (\n    /* highlight-next-line */\n    <Edit resource="posts" recordItemId={123}>\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <Refine\n      routerProvider={{\n        ...routerProvider,\n        // highlight-start\n        routes: [\n          {\n            element: <CustomPage />,\n            path: "/custom",\n          },\n        ],\n        // highlight-end\n      }}\n      Layout={Layout}\n      dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n      resources={[{ name: "posts" }]}\n    />\n  );\n};\n// visible-block-end\n\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,o.yg)("h3",{id:"savebuttonprops"},(0,o.yg)("inlineCode",{parentName:"h3"},"saveButtonProps")),(0,o.yg)(m,{id:"savebuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," component has a save button by default. If you want to customize this button you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"saveButtonProps")," property like the code below."),(0,o.yg)("p",null,"Clicking on the save button will submit your form."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/buttons/save-button"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"<SaveButton>")," documentation for detailed usage. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  return (\n    /* highlight-next-line */\n    <Edit saveButtonProps={{ size: "small" }}>\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"candelete-and-deletebuttonprops"},(0,o.yg)("inlineCode",{parentName:"h3"},"canDelete")," and ",(0,o.yg)("inlineCode",{parentName:"h3"},"deleteButtonProps")),(0,o.yg)(m,{id:"candelete-and-deletebuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"canDelete")," allows us to add the delete button inside the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," component. If the resource has the ",(0,o.yg)("inlineCode",{parentName:"p"},"canDelete")," property, refine adds the delete button by default. If you want to customize this button you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"deleteButtonProps")," property like the code below."),(0,o.yg)("p",null,"When clicked on, the delete button executes the ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/data/useDelete/"},(0,o.yg)("inlineCode",{parentName:"a"},"useDelete"))," method provided by the ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/data-provider"},(0,o.yg)("inlineCode",{parentName:"a"},"dataProvider")),"."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/buttons/delete-button"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"<DeleteButton>")," documentation for detailed usage. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'const { default: simpleRest } = RefineSimpleRest;\n\nconst dataProvider = simpleRest("https://api.fake-rest.refine.dev");\n\nconst customDataProvider = {\n  ...dataProvider,\n  deleteOne: async ({ resource, id, variables }) => {\n    return {\n      data: {},\n    };\n  },\n};\n\nconst authProvider = {\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  checkAuth: () => Promise.resolve(),\n  checkError: () => Promise.resolve(),\n  getPermissions: () => Promise.resolve("admin"),\n  getUserIdentity: () => Promise.resolve(),\n};\n\n// visible-block-start\nimport { Edit } from "@pankod/refine-mui";\nimport { usePermissions } from "@pankod/refine-core";\n\nconst PostEdit: React.FC = () => {\n  const { data: permissionsData } = usePermissions();\n  return (\n    <Edit\n      /* highlight-start */\n      canDelete={permissionsData?.includes("admin")}\n      deleteButtonProps={{ size: "small" }}\n      /* highlight-end */\n      saveButtonProps={{ size: "small" }}\n    >\n      <p>Rest of your page here</p>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    authProvider={authProvider}\n    dataProvider={customDataProvider}\n    initialRoutes={["/posts/edit/123"]}\n    Layout={RefineMui.Layout}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId="123">\n              Edit Item 123\n            </RefineMui.EditButton>\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n')),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/auth/usePermissions"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"usePermission")," documentation for detailed usage. ","\u2192"))),(0,o.yg)("h3",{id:"recorditemid"},(0,o.yg)("inlineCode",{parentName:"h3"},"recordItemId")),(0,o.yg)(m,{id:"recorditemid",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," component reads the ",(0,o.yg)("inlineCode",{parentName:"p"},"id")," information from the route by default. ",(0,o.yg)("inlineCode",{parentName:"p"},"recordItemId")," is used when it cannot read from the URL(when used on a custom page, modal or drawer)."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/custom",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/custom"},'// handle initial routes in new way\nsetInitialRoutes(["/custom"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport { Edit, Layout } from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nconst CustomPage: React.FC = () => {\n  return (\n    /* highlight-next-line */\n    <Edit resource="posts" recordItemId={123}>\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <Refine\n      routerProvider={{\n        ...routerProvider,\n        routes: [\n          {\n            element: <CustomPage />,\n            path: "/custom",\n          },\n        ],\n      }}\n      Layout={Layout}\n      dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n      resources={[{ name: "posts" }]}\n    />\n  );\n};\n// visible-block-end\n\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n')),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"The ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," component needs the ",(0,o.yg)("inlineCode",{parentName:"p"},"id")," information for the ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/buttons/refresh-button"},(0,o.yg)("inlineCode",{parentName:"a"},"<RefreshButton>"))," to work properly."))),(0,o.yg)("h3",{id:"mutationmode"},(0,o.yg)("inlineCode",{parentName:"h3"},"mutationMode")),(0,o.yg)(m,{id:"mutationmode",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"Determines which mode mutation will have while executing ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/buttons/delete-button"},(0,o.yg)("inlineCode",{parentName:"a"},"<DeleteButton>")),"."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/advanced-tutorials/mutation-mode"},"Refer to the mutation mode docs for further information. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live hideCode url=http://localhost:3000/posts/edit/123",live:!0,hideCode:!0,url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport React from "react";\nimport {\n  Edit,\n  useAutocomplete,\n  TextField,\n  Autocomplete,\n  Box,\n} from "@pankod/refine-mui";\nimport { useForm, Controller } from "@pankod/refine-react-hook-form";\n\nconst SampleEdit = () => {\n  const {\n    saveButtonProps,\n    refineCore: { queryResult },\n    register,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const samplesData = queryResult?.data?.data;\n\n  const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n    resource: "categories",\n    defaultValue: samplesData?.category?.id,\n  });\n\n  return (\n    <Edit\n      saveButtonProps={saveButtonProps}\n      canDelete\n      // highlight-next-line\n      mutationMode="undoable"\n    >\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("id", {\n            required: "This field is required",\n          })}\n          error={!!(errors as any)?.id}\n          helperText={(errors as any)?.id?.message}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="number"\n          label="Id"\n          name="id"\n          disabled\n        />\n        <TextField\n          {...register("title", {\n            required: "This field is required",\n          })}\n          error={!!(errors as any)?.title}\n          helperText={(errors as any)?.title?.message}\n          margin="normal"\n          fullWidth\n          InputLabelProps={{ shrink: true }}\n          type="text"\n          label="Title"\n          name="title"\n        />\n        <Controller\n          control={control}\n          name="category"\n          rules={{ required: "This field is required" }}\n          // eslint-disable-next-line\n          defaultValue={null as any}\n          render={({ field }) => (\n            <Autocomplete\n              {...categoryAutocompleteProps}\n              {...field}\n              onChange={(_, value) => {\n                field.onChange(value);\n              }}\n              getOptionLabel={(item) => {\n                return (\n                  categoryAutocompleteProps?.options?.find(\n                    (p) => p?.id?.toString() === item?.id?.toString(),\n                  )?.title ?? ""\n                );\n              }}\n              isOptionEqualToValue={(option, value) =>\n                value === undefined ||\n                option?.id?.toString() === (value?.id ?? value)?.toString()\n              }\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label="Category"\n                  margin="normal"\n                  variant="outlined"\n                  error={!!(errors as any)?.category?.id}\n                  helperText={(errors as any)?.category?.id?.message}\n                  required\n                />\n              )}\n            />\n          )}\n        />\n      </Box>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/samples/edit/123"]}\n    resources={[{ name: "samples", edit: SampleEdit, list: SampleList }]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"dataprovidername"},(0,o.yg)("inlineCode",{parentName:"h3"},"dataProviderName")),(0,o.yg)(m,{id:"dataprovidername",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"If not specified, Refine will use the default data provider. If you have multiple data providers and want to use a different one, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"dataProviderName")," property."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx"},'import { Refine } from "@pankod/refine-core";\nimport { Edit } from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\n// highlight-start\nconst PostEdit = () => {\n  return <Edit dataProviderName="other">...</Edit>;\n};\n// highlight-end\n\nexport const App: React.FC = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      // highlight-start\n      dataProvider={{\n        default: dataProvider("https://api.fake-rest.refine.dev/"),\n        other: dataProvider("https://other-api.fake-rest.refine.dev/"),\n      }}\n      // highlight-end\n      resources={[{ name: "posts", edit: PostEdit }]}\n    />\n  );\n};\n'))),(0,o.yg)("h3",{id:"goback"},(0,o.yg)("inlineCode",{parentName:"h3"},"goBack")),(0,o.yg)(m,{id:"goback",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"To customize the back button or to disable it, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"goBack")," property."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit, Button } from "@pankod/refine-mui";\nimport { useNavigation } from "@pankod/refine-core";\n\nconst BackButton = () => {\n  const { goBack } = useNavigation();\n\n  return <Button onClick={() => goBack()}>BACK!</Button>;\n};\n\nconst PostEdit: React.FC = () => {\n  return (\n    <Edit\n      // highlight-next-line\n      goBack={<BackButton />}\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"isloading"},(0,o.yg)("inlineCode",{parentName:"h3"},"isLoading")),(0,o.yg)(m,{id:"isloading",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"To toggle the loading state of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit/>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"isLoading")," property."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n\n  return (\n    <Edit\n      // highlight-next-line\n      isLoading={loading}\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"breadcrumb"},(0,o.yg)("inlineCode",{parentName:"h3"},"breadcrumb")),(0,o.yg)(m,{id:"breadcrumb",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"To customize or disable the breadcrumb, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"breadcrumb")," property. By default it uses the ",(0,o.yg)("inlineCode",{parentName:"p"},"Breadcrumb")," component from ",(0,o.yg)("inlineCode",{parentName:"p"},"@pankod/refine-mui")," package."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/mui-breadcrumb"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"Breadcrumb")," documentation for detailed usage. ","\u2192")),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"This feature can be managed globally via the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Refine>")," component's ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/components/refine-config/#breadcrumb"},"options"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit, Breadcrumb } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  return (\n    <Edit\n      // highlight-start\n      breadcrumb={\n        <div\n          style={{\n            padding: "3px 6px",\n            border: "2px dashed cornflowerblue",\n          }}\n        >\n          <Breadcrumb />\n        </div>\n      }\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"wrapperprops"},(0,o.yg)("inlineCode",{parentName:"h3"},"wrapperProps")),(0,o.yg)(m,{id:"wrapperprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"If you want to customize the wrapper of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit/>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"wrapperProps")," property."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card/"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"Card")," documentation from Material UI for detailed usage. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n\n  return (\n    <Edit\n      // highlight-start\n      wrapperProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"headerprops"},(0,o.yg)("inlineCode",{parentName:"h3"},"headerProps")),(0,o.yg)(m,{id:"headerprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"If you want to customize the header of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit/>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"headerProps")," property."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-header/"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"CardHeader")," documentation from Material UI for detailed usage. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n\n  return (\n    <Edit\n      // highlight-start\n      headerProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"contentprops"},(0,o.yg)("inlineCode",{parentName:"h3"},"contentProps")),(0,o.yg)(m,{id:"contentprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"If you want to customize the content of the ",(0,o.yg)("inlineCode",{parentName:"p"},"<Edit/>")," component, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"contentProps")," property."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-content/"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"CardContent")," documentation from Material UI for detailed usage. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n\n  return (\n    <Edit\n      // highlight-start\n      contentProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"headerbuttons"},(0,o.yg)("inlineCode",{parentName:"h3"},"headerButtons")),(0,o.yg)(m,{id:"headerbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"You can customize the buttons at the header by using the ",(0,o.yg)("inlineCode",{parentName:"p"},"headerButtons")," property. It accepts ",(0,o.yg)("inlineCode",{parentName:"p"},"React.ReactNode")," or a render function ",(0,o.yg)("inlineCode",{parentName:"p"},"({ defaultButtons }) => React.ReactNode")," which you can use to keep the existing buttons and add your own."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit, Button } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n\n  return (\n    <Edit\n      // highlight-start\n      headerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"headerbuttonprops"},(0,o.yg)("inlineCode",{parentName:"h3"},"headerButtonProps")),(0,o.yg)(m,{id:"headerbuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"You can customize the wrapper element of the buttons at the header by using the ",(0,o.yg)("inlineCode",{parentName:"p"},"headerButtonProps")," property."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/box/"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"Box")," documentation from Material UI for detailed usage. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit, Button } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n\n  return (\n    <Edit\n      // highlight-start\n      headerButtonProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n      headerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"footerbuttons"},(0,o.yg)("inlineCode",{parentName:"h3"},"footerButtons")),(0,o.yg)(m,{id:"footerbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"You can customize the buttons at the footer by using the ",(0,o.yg)("inlineCode",{parentName:"p"},"footerButtons")," property. It accepts ",(0,o.yg)("inlineCode",{parentName:"p"},"React.ReactNode")," or a render function ",(0,o.yg)("inlineCode",{parentName:"p"},"({ defaultButtons }) => React.ReactNode")," which you can use to keep the existing buttons and add your own."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit, Button } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n\n  return (\n    <Edit\n      // highlight-start\n      footerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"footerbuttonprops"},(0,o.yg)("inlineCode",{parentName:"h3"},"footerButtonProps")),(0,o.yg)(m,{id:"footerbuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"You can customize the wrapper element of the buttons at the footer by using the ",(0,o.yg)("inlineCode",{parentName:"p"},"footerButtonProps")," property."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-actions/"},"Refer to the ",(0,o.yg)("inlineCode",{parentName:"a"},"CardActions")," documentation from Material UI for detailed usage. ","\u2192")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/edit/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/edit/123"},'// visible-block-start\nimport { Edit, Button } from "@pankod/refine-mui";\n\nconst PostEdit: React.FC = () => {\n  const [loading, setLoading] = React.useState(true);\n\n  return (\n    <Edit\n      // highlight-start\n      footerButtonProps={{\n        sx: {\n          backgroundColor: "lightsteelblue",\n        },\n      }}\n      // highlight-end\n      footerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n    >\n      <span>Rest of your page here</span>\n    </Edit>\n  );\n};\n// visible-block-end\n\nrender(\n  <RefineMuiDemo\n    initialRoutes={["/posts", "/posts/edit/123"]}\n    resources={[\n      {\n        name: "posts",\n        list: () => (\n          <div>\n            <p>This page is empty.</p>\n            <RefineMui.EditButton recordItemId={123} />\n          </div>\n        ),\n        edit: PostEdit,\n      },\n    ]}\n  />,\n);\n'))),(0,o.yg)("h3",{id:"actionbuttons"},(0,o.yg)("del",{parentName:"h3"},(0,o.yg)("inlineCode",{parentName:"del"},"actionButtons"))),(0,o.yg)(m,{id:"actionbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("admonition",{title:"Deprecated",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Use ",(0,o.yg)("inlineCode",{parentName:"p"},"headerButtons")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"footerButtons")," instead.")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," uses the Material UI ",(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-actions/#main-content"},(0,o.yg)("inlineCode",{parentName:"a"},"<CardActions>"))," component. The children of the ",(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-actions/#main-content"},(0,o.yg)("inlineCode",{parentName:"a"},"<CardActions>"))," component shows ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/buttons/save-button"},(0,o.yg)("inlineCode",{parentName:"a"},"<SaveButton>"))," and ",(0,o.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/buttons/delete-button"},(0,o.yg)("inlineCode",{parentName:"a"},"<DeleteButton>"))," based on your resource definition in the",(0,o.yg)("inlineCode",{parentName:"p"},"resources"),"property you pass to ",(0,o.yg)("inlineCode",{parentName:"p"},"<Refine>"),". If you want to use other things instead of these buttons, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"actionButton")," property like the code below."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/pages/posts/edit.tsx"',title:'"src/pages/posts/edit.tsx"'},'// highlight-next-line\nimport { Edit, Button } from "@pankod/refine-mui";\n\nexport const EditPage: React.FC = () => {\n  return (\n    <Edit\n      // highlight-start\n      actionButtons={\n        <>\n          <Button>Custom Button 1</Button>\n          <Button>Custom Button 2</Button>\n        </>\n      }\n      // highlight-end\n    >\n      ...\n    </Edit>\n  );\n};\n'))),(0,o.yg)("h3",{id:"cardprops"},(0,o.yg)("del",{parentName:"h3"},(0,o.yg)("inlineCode",{parentName:"del"},"cardProps"))),(0,o.yg)(m,{id:"cardprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("admonition",{title:"Deprecated",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Use ",(0,o.yg)("inlineCode",{parentName:"p"},"wrapperProps")," instead.")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," uses the Material UI ",(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/react-card/#main-content"},(0,o.yg)("inlineCode",{parentName:"a"},"<Card>"))," components so you can customize with the props of ",(0,o.yg)("inlineCode",{parentName:"p"},"cardProps"),".")),(0,o.yg)("h3",{id:"cardheaderprops"},(0,o.yg)("del",{parentName:"h3"},(0,o.yg)("inlineCode",{parentName:"del"},"cardHeaderProps"))),(0,o.yg)(m,{id:"cardheaderprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("admonition",{title:"Deprecated",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Use ",(0,o.yg)("inlineCode",{parentName:"p"},"headerProps")," instead.")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," uses the Material UI ",(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-header/"},(0,o.yg)("inlineCode",{parentName:"a"},"<CardHeader>"))," components so you can customize with the props of ",(0,o.yg)("inlineCode",{parentName:"p"},"cardHeaderProps"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/pages/posts/edit.tsx"',title:'"src/pages/posts/edit.tsx"'},'// highlight-next-line\nimport { Edit, Typography } from "@pankod/refine-mui";\n\nexport const EditPage: React.FC = () => {\n  return (\n    <Edit\n      //highlight-start\n      cardHeaderProps={{\n        title: <Typography variant="h5">Custom Title</Typography>,\n      }}\n      //highlight-end\n    >\n      ...\n    </Edit>\n  );\n};\n'))),(0,o.yg)("h3",{id:"cardcontentprops"},(0,o.yg)("del",{parentName:"h3"},(0,o.yg)("inlineCode",{parentName:"del"},"cardContentProps"))),(0,o.yg)(m,{id:"cardcontentprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("admonition",{title:"Deprecated",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Use ",(0,o.yg)("inlineCode",{parentName:"p"},"contentProps")," instead.")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," uses the Material UI ",(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-content/"},(0,o.yg)("inlineCode",{parentName:"a"},"<CardContent>"))," components so you can customize with the props of ",(0,o.yg)("inlineCode",{parentName:"p"},"cardContentProps"),".")),(0,o.yg)("h3",{id:"cardactionsprops"},(0,o.yg)("del",{parentName:"h3"},(0,o.yg)("inlineCode",{parentName:"del"},"cardActionsProps"))),(0,o.yg)(m,{id:"cardactionsprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("admonition",{title:"Deprecated",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Use ",(0,o.yg)("inlineCode",{parentName:"p"},"headerButtonProps")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"footerButtonProps")," instead.")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"<Edit>")," uses the Material UI ",(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/api/card-actions/"},(0,o.yg)("inlineCode",{parentName:"a"},"<CardActions>"))," components so you can customize with the props of ",(0,o.yg)("inlineCode",{parentName:"p"},"cardActionsProps"),".")),(0,o.yg)("h2",{id:"api-reference"},"API Reference"),(0,o.yg)("h3",{id:"properties-1"},"Properties"),(0,o.yg)(m,{id:"properties-1",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)(g,{module:"@pankod/refine-mui/Edit","wrapperProps-type":"[`CardProps`](https://mui.com/material-ui/api/card/#props)","contentProps-type":"[`CardContentProps`](https://mui.com/material-ui/api/card-content/#props)","headerProps-type":"[`CardHeaderProps`](https://mui.com/material-ui/api/card-header/#props)","headerButtons-default":"[`ListButton`](https://refine.dev/docs/api-reference/mui/components/buttons/list-button/) and [`RefreshButton`](https://refine.dev/docs/api-reference/mui/components/buttons/refresh-button/)","headerButtonProps-type":"[`BoxProps`](https://mui.com/material-ui/api/box/#props)","deleteButtonProps-type":"[`DeleteButtonProps`](/docs/3.xx.xx/api-reference/mui/components/buttons/delete-button/)","saveButtonProps-type":"[`SaveButtonProps`](https://refine.dev/docs/api-reference/mui/components/buttons/save-button/)","footerButtons-default":"[`SaveButton`](https://refine.dev/docs/api-reference/mui/components/buttons/save-button/) and [`DeleteButton`](https://refine.dev/docs/api-reference/mui/components/buttons/delete-button/)","footerButtonsProps-type":"[`CardActionsProps`](https://mui.com/material-ui/api/card-actions/#props)","breadcrumb-default":"[`<Breadcrumb/>`](/docs/3.xx.xx/api-reference/mui/components/mui-breadcrumb/)","goBack-default":"`<ArrowLeft />`","goBack-type":"`ReactNode`",mdxType:"PropsTable"}),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live shared",live:!0,shared:!0},'const SampleList = () => {\n  const { dataGridProps } = RefineMui.useDataGrid();\n\n  const { data: categoryData, isLoading: categoryIsLoading } =\n    RefineCore.useMany({\n      resource: "categories",\n      ids: dataGridProps?.rows?.map((item: any) => item?.category?.id) ?? [],\n      queryOptions: {\n        enabled: !!dataGridProps?.rows,\n      },\n    });\n\n  const columns = React.useMemo<GridColumns<any>>(\n    () => [\n      {\n        field: "id",\n        headerName: "Id",\n        type: "number",\n        minWidth: 50,\n      },\n      {\n        field: "title",\n        headerName: "Title",\n        minWidth: 200,\n      },\n      {\n        field: "category",\n        headerName: "Category",\n        valueGetter: ({ row }) => {\n          const value = row?.category?.id;\n\n          return value;\n        },\n        minWidth: 300,\n        renderCell: function render({ value }) {\n          return categoryIsLoading ? (\n            <>Loading...</>\n          ) : (\n            categoryData?.data?.find((item) => item.id === value)?.title\n          );\n        },\n      },\n      {\n        field: "createdAt",\n        headerName: "Created At",\n        minWidth: 250,\n        renderCell: function render({ value }) {\n          return <RefineMui.DateField value={value} />;\n        },\n      },\n      {\n        field: "actions",\n        headerName: "Actions",\n        renderCell: function render({ row }) {\n          return (\n            <>\n              <RefineMui.EditButton hideText recordItemId={row.id} />\n            </>\n          );\n        },\n        align: "center",\n        headerAlign: "center",\n        minWidth: 80,\n      },\n    ],\n    [categoryData?.data],\n  );\n\n  return (\n    <RefineMui.List>\n      <RefineMui.DataGrid {...dataGridProps} columns={columns} autoHeight />\n    </RefineMui.List>\n  );\n};\n\nconst Wrapper = ({ children }) => {\n  return (\n    <RefineMui.ThemeProvider theme={RefineMui.LightTheme}>\n      <RefineMui.CssBaseline />\n      <RefineMui.GlobalStyles\n        styles={{ html: { WebkitFontSmoothing: "auto" } }}\n      />\n      {children}\n    </RefineMui.ThemeProvider>\n  );\n};\n'))))}f.isMDXComponent=!0}}]);