"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[95430],{58860:(e,n,t)=>{t.d(n,{xA:()=>m,yg:()=>g});var o=t(37953);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),d=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=d(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},c=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=d(t),c=a,g=u["".concat(s,".").concat(c)]||u[c]||p[c]||i;return t?o.createElement(g,r(r({ref:n},m),{},{components:t})):o.createElement(g,r({ref:n},m))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:a,r[1]=l;for(var d=2;d<i;d++)r[d]=t[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}c.displayName="MDXCreateElement"},38274:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>u});t(37953);var o=t(58860);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function r(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}const l={title:"How to Install and Use NVM?",description:"Guide to using NVM with Mac and Windows.",slug:"install-nvm-mac-and-windows",authors:"chidume_nnamdi",tags:["javascript","dev-tools"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2022-11-09-nvm/social-2.png",hide_table_of_contents:!1},s=void 0,d={permalink:"/blog/install-nvm-mac-and-windows",source:"@site/blog/2024-07-05-nvm.md",title:"How to Install and Use NVM?",description:"Guide to using NVM with Mac and Windows.",date:"2024-07-05T00:00:00.000Z",formattedDate:"July 5, 2024",tags:[{label:"javascript",permalink:"/blog/tags/javascript"},{label:"dev-tools",permalink:"/blog/tags/dev-tools"}],readingTime:11.89,hasTruncateMarker:!1,authors:[{name:"Chidume Nnamdi",title:"Software Engineer",url:"https://github.com/philipszdavido",imageURL:"https://github.com/philipszdavido.png",key:"chidume_nnamdi"}],frontMatter:{title:"How to Install and Use NVM?",description:"Guide to using NVM with Mac and Windows.",slug:"install-nvm-mac-and-windows",authors:"chidume_nnamdi",tags:["javascript","dev-tools"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2022-11-09-nvm/social-2.png",hide_table_of_contents:!1},prevItem:{title:"How to use React Strict Mode in React 18",permalink:"/blog/react-strict-mode-in-react-18"},nextItem:{title:"What is Turborepo and Why Should You Care?",permalink:"/blog/how-to-use-turborepo"},relatedPosts:[{title:"A Detailed Guide on Docker Volumes",description:"We'll go over the fundamentals of Docker volumes, including what they are, why they're important, and how to use them.",permalink:"/blog/docker-volumes",formattedDate:"July 11, 2023",authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],readingTime:10.64,date:"2023-07-11T00:00:00.000Z"},{title:"Swiper.js Tutorial - A Powerful Touch Slider Library",description:"We'll take a dive into the Swiper.js library, a powerful JavaScript library that lets you quickly add touch-enabled and responsive sliders to your website or web application.",permalink:"/blog/swiper-js",formattedDate:"December 7, 2023",authors:[{name:"Peter Osah",title:"Web Developer",imageURL:"/img/generic-profile.png",key:"peter_osah"}],readingTime:13.65,date:"2023-12-07T00:00:00.000Z"},{title:"How to Change Node Version",description:"A comprehensive guide on how to change the node version.",permalink:"/blog/change-node-version",formattedDate:"March 27, 2024",authors:[{name:"Muhammad Khabbab",title:"Project Manager",imageURL:"/img/generic-profile.png",key:"muhammad_khabbab"}],readingTime:10.11,date:"2024-03-27T00:00:00.000Z"}],authorPosts:[{title:"Getting started with Astro Framework",description:"We will learn how to set up Astrojs, create a new project, and basics.",permalink:"/blog/astro-js-guide",formattedDate:"October 22, 2024",authors:[{name:"Chidume Nnamdi",title:"Software Engineer",url:"https://github.com/philipszdavido",imageURL:"https://github.com/philipszdavido.png",key:"chidume_nnamdi"}],readingTime:21.505,date:"2024-10-22T00:00:00.000Z"},{title:"Error Boundaries in React -  Handling Errors Gracefully",description:"We'll see how to handle errors in React using Error Boundaries and how to use the react-error-boundary library to handle errors in React.",permalink:"/blog/react-error-boundaries",formattedDate:"September 9, 2024",authors:[{name:"Chidume Nnamdi",title:"Software Engineer",url:"https://github.com/philipszdavido",imageURL:"https://github.com/philipszdavido.png",key:"chidume_nnamdi"}],readingTime:16.74,date:"2024-09-09T00:00:00.000Z"},{title:"Using SVGs in React",description:"Let's talk about React SVG and how it makes the process of adding and handling images on modern websites more versatile and fun.",permalink:"/blog/react-svg",formattedDate:"January 7, 2025",authors:[{name:"Chidume Nnamdi",title:"Software Engineer",url:"https://github.com/philipszdavido",imageURL:"https://github.com/philipszdavido.png",key:"chidume_nnamdi"}],readingTime:15.405,date:"2025-01-07T00:00:00.000Z"}]},m={authorsImageUrls:[void 0]},u=[{value:"Introduction",id:"introduction",level:2},{value:"What&#39;s <code>nvm</code>?",id:"whats-nvm",level:2},{value:"Installation of nvm",id:"installation-of-nvm",level:2},{value:"Installing a Node version",id:"installing-a-node-version",level:2},{value:"Switching environments",id:"switching-environments",level:2},{value:"Advanced NVM Usage",id:"advanced-nvm-usage",level:2},{value:"Automating Node Version Switch",id:"automating-node-version-switch",level:4},{value:"Combining NVM with Development Tools",id:"combining-nvm-with-development-tools",level:4},{value:"Useful nvm commands",id:"useful-nvm-commands",level:2},{value:"<code>list</code>",id:"list",level:3},{value:"<code>uninstall</code>",id:"uninstall",level:3},{value:"<code>run</code>",id:"run",level:3},{value:"NVM Best Practices",id:"nvm-best-practices",level:2},{value:"Keeping NVM and Node Versions Up-To-Date",id:"keeping-nvm-and-node-versions-up-to-date",level:3},{value:"Leveraging NVM for Various Environments",id:"leveraging-nvm-for-various-environments",level:3},{value:"Managing Global Packages",id:"managing-global-packages",level:3},{value:"Conclusion",id:"conclusion",level:2}],p={toc:u},c="wrapper";function g(e){var{components:n}=e,t=r(e,["components"]);return(0,o.yg)(c,i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},o=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),o.forEach((function(n){a(e,n,t[n])}))}return e}({},p,t),{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"This article was last updated on July 05, 2024, to add sections for Advanced NVM Usage and Best Practices for Using NVM.")),(0,o.yg)("h2",{id:"introduction"},"Introduction"),(0,o.yg)("p",null,"Nodejs became a game changer in the software development world after its initial release in May 2009. Since then, software development has not been the same. The majority of big companies turned towards Nodejs and many JavaScript frameworks were birthed. Finally, JavaScript ceased from being a browser-only language to an all-platform language. We can create mobile apps, and desktop apps now with JavaScript."),(0,o.yg)("p",null,"To run Nodejs all you need to do is to install the executable and off you go!\nNow, Nodejs got better and better with each new version released but sometimes these versions can be a problem, and we might see ourselves running incompatible Nodejs in our projects. So we might just have to install the right Nodejs version, but do we have to install and re-install Nodejs versions all the time?"),(0,o.yg)("p",null,"The answer is NO because a brilliant does all the versioning work for us. The tool is called nvm, Node Version Manager."),(0,o.yg)("p",null,"Steps we'll cover:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#whats-nvm"},"What's ",(0,o.yg)("inlineCode",{parentName:"a"},"nvm"),"?")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#installation-of-nvm"},"Installation of nvm")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#installing-a-node-version"},"Installing a Node version")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#switching-environments"},"Switching environments")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#advanced-nvm-usage"},"Advanced NVM Usage")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#useful-nvm-commands"},"Useful nvm commands")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"#nvm-best-practices"},"NVM Best Practices"))),(0,o.yg)("h2",{id:"whats-nvm"},"What's ",(0,o.yg)("inlineCode",{parentName:"h2"},"nvm"),"?"),(0,o.yg)("p",null,"nvm like we have learned is a Node Version Manager. It allows us to install and switch between different versions of Nodejs."),(0,o.yg)("p",null,"Instead of manually downloading and uninstalling the version of Nodejs nvm does it behind the hood for us. Just that it does not uninstall any version. It just manages them and switches to anyone at will."),(0,o.yg)("p",null,"Let's say you are trying to run a Node project and the project works correctly (for e.g) Node version 14 but your Node version is 10. You will likely get this warning:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"This project requires Node version 14\n")),(0,o.yg)("p",null,"I encountered that on a project I was part of. I am running Node version 16.17.0 but the tests in the project were written in Node version 14.18.1. I constantly got failures concerning V8 buffer overflows and most of the tests were failing because of that. It wasn't until after a long time I got to realize that the tests were initially written in a Node 14.18.1 environment. So I had to use nvm and switch from 16 to 14 and all the tests passed."),(0,o.yg)("p",null,"One of the quick and most powerful commands of the nvm is the ",(0,o.yg)("inlineCode",{parentName:"p"},"use")," command. This command does the switching of the Node version."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm use 14.18.0\n")),(0,o.yg)("p",null,"This command will switch your current Node environment version to switch from its current version to version 14.18.0."),(0,o.yg)("p",null,"Let's say you are on Node 16.0.1"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"node --v\n16.0.1\n")),(0,o.yg)("p",null,"Now, to switch to Node version 14.18.0, we run the previous command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm use 14.18.0\n")),(0,o.yg)("p",null,"Let's check if the Node version is correctly switched:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"node -v\n14.18.0\n")),(0,o.yg)("p",null,"Yes, it is now on Node version 14.18.0."),(0,o.yg)("h2",{id:"installation-of-nvm"},"Installation of nvm"),(0,o.yg)("p",null,"The easiest way to install the nvm in Linux or MacOS is by using the curl or wget tool. you run any of the commands below:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash\n\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash\n")),(0,o.yg)("p",null,"These commands download the ",(0,o.yg)("inlineCode",{parentName:"p"},"install.sh")," script from ",(0,o.yg)("inlineCode",{parentName:"p"},"https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/")," and run the script."),(0,o.yg)("p",null,"This script contains instructions on where to fetch the nvm repository and install it on the executing machine. This nvm repository will be cloned to ",(0,o.yg)("inlineCode",{parentName:"p"},".nvm")," directory in your machine, and then add the below snippet to either of the profile configuration files: ",(0,o.yg)("inlineCode",{parentName:"p"},"~/.bash_profile"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"~/.zshrc"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"~/.profile"),", or ",(0,o.yg)("inlineCode",{parentName:"p"},"~/.bashrc"),"."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},'export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"\n[ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh" # This loads nvm\n')),(0,o.yg)("p",null,"Installation on a Windows machine is different from the above. In Windows, you will use the nvm-windows tool. This NVM for Windows is the Microsoft/npm/Google recommended Node.js version manager for Windows.\nN.B It is not the same thing as nvm."),(0,o.yg)("p",null,"You can download the latest release of the NVM Windows here. To view all releases of the NVM Windows, you can see it here. For more instructions on how to install the NVM Windows, upgrade, and more, visit their Github repo page."),(0,o.yg)("p",null,"Now, when done with the installation of the nvm we can verify if the installation is successful and that the nvm is available globally on our machine we will run the below command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm -v\n")),(0,o.yg)("p",null,"This will print the version of the nvm currently on your machine."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},'Node Version Manager (v0.35.3)\n\nNote: <version> refers to any version-like string nvm understands. This includes:\n  - full or partial version numbers, starting with an optional "v" (0.10, v0.1.2, v1)\n  - default (built-in) aliases: node, stable, unstable, iojs, system\n  - custom aliases you define with `nvm alias foo`\n\n Any options that produce colorized output should respect the `--no-colors` option.\n')),(0,o.yg)("p",null,"See mine above, as you can see I have nvm version 0.35.3 on my machine."),(0,o.yg)("h2",{id:"installing-a-node-version"},"Installing a Node version"),(0,o.yg)("p",null,"We can install a particular Nodejs version using ",(0,o.yg)("inlineCode",{parentName:"p"},"nvm"),". This is done by running the command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm install 10.1.0\n")),(0,o.yg)("p",null,"This will install the Nodejs v10.1.0 on your machine. Now, if there is Nodejs v14 in your machine, it will not be removed. Instead nvm will install the Nodejs v10.1.0 to sit in my machine alongside the v14. Now, the current version of Node that the ",(0,o.yg)("inlineCode",{parentName:"p"},"node")," will use is the version that was mainly installed directly, not from nvm."),(0,o.yg)("p",null,"You can install as many as Nodejs versions you want:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm install 11.2.1\n")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm install 16.2.3\n")),(0,o.yg)("p",null,"To install the latest Node version, we will run the below command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm install node\n")),(0,o.yg)("p",null,"This will install the latest version of Nodejs on your machine."),(0,o.yg)("p",null,"If we run the ",(0,o.yg)("inlineCode",{parentName:"p"},"install")," command with only the major version, then nvm will install the latest version of Nodejs in that major version."),(0,o.yg)("p",null,"For example, this:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm install 10\n")),(0,o.yg)("p",null,"will install the latest version of Nodejs v10. Let's say the latest version of Nodejs in major version 10 is 10.19.0. It will be installed."),(0,o.yg)("h2",{id:"switching-environments"},"Switching environments"),(0,o.yg)("p",null,"We can switch Node environments by using the nvm ",(0,o.yg)("inlineCode",{parentName:"p"},"use")," command."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm use 14\n")),(0,o.yg)("p",null,"This switches to Nodejs version 14. We must have the Nodejs 14 already installed on our machine before we can switch to it."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm use 12.0.1\n")),(0,o.yg)("p",null,"This will switch to Nodejs v12.0.1."),(0,o.yg)("p",null,"There is something that we need to understand. If we only state the major version in the ",(0,o.yg)("inlineCode",{parentName:"p"},"use")," command, nvm will switch to using the major version of the Nodejs regardless of the minor and patch versions."),(0,o.yg)("p",null,"For example, this:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm use 14\n")),(0,o.yg)("p",null,"This is just 14, the major version. There is no minor or patch version. Now, this will switch to using the latest Node version in the machine with a major version of 14.\nIf there are Node versions: ",(0,o.yg)("inlineCode",{parentName:"p"},"14.17.1"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"14.18.1"),", and ",(0,o.yg)("inlineCode",{parentName:"p"},"14.18.0"),". nvm will pick the latest ",(0,o.yg)("inlineCode",{parentName:"p"},"14.18.1")," and switch to it."),(0,o.yg)("h2",{id:"advanced-nvm-usage"},"Advanced NVM Usage"),(0,o.yg)("p",null,"In this new section, I put a part on advanced NVM usage into our article on NVM installation and usage to automatize the switching of versions for Node. I integrated NVM with other well-known development tools."),(0,o.yg)("h4",{id:"automating-node-version-switch"},"Automating Node Version Switch"),(0,o.yg)("p",null,"Automating process-based switching of Node versions with respect to the project directory will save time and achieve consistency in managing the problem. This can be done with ",(0,o.yg)("inlineCode",{parentName:"p"},".nvmrc")," files. An ",(0,o.yg)("inlineCode",{parentName:"p"},".nvmrc")," file specifies a version of Node for a project, and NVM will automatically switch to that version when changing to the project directory."),(0,o.yg)("p",null,"Below are some simple steps to create and use ",(0,o.yg)("inlineCode",{parentName:"p"},".nvmrc")," files for automatic Node version switching:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Place in the project's root folder a file named ",(0,o.yg)("inlineCode",{parentName:"li"},".nvmrc")," that contains the version of Node you want to install."),(0,o.yg)("li",{parentName:"ol"},"Run the ",(0,o.yg)("inlineCode",{parentName:"li"},"nvm use")," command to switch to the Node version specified in the ",(0,o.yg)("inlineCode",{parentName:"li"},".nvmrc")," file.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},'# Create a .nvmrc file in your project root\necho "14.18.1" > .nvmrc\n\n# Use the Node version specified in .nvmrc\nnvm use\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Create a ",(0,o.yg)("inlineCode",{parentName:"li"},".nvmrc")," file in your project root: ",(0,o.yg)("inlineCode",{parentName:"li"},'echo "14.18.1" > .nvmrc')),(0,o.yg)("li",{parentName:"ul"},"Use the Node version that's defined in ",(0,o.yg)("inlineCode",{parentName:"li"},".nvmrc"),": ",(0,o.yg)("inlineCode",{parentName:"li"},"nvm use"))),(0,o.yg)("h4",{id:"combining-nvm-with-development-tools"},"Combining NVM with Development Tools"),(0,o.yg)("p",null,"With NVM built into popular development tools such as Visual Studio Code and Docker, this guarantees the right Node version is used and assures a common one in the development environment. This embeds NVM inside frequent development tools to give good assurance of correct Node versioning, with no issues or time waste due to conflicts in different environments."),(0,o.yg)("p",null,"Here is how you can configure all these tools so they can use the right Node version managed by NVM:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Visual Studio Code"),": Update your VS Code settings to point to the Node version controlled by NVM."),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Docker"),": Configure Docker to use NVM and the correct Node version in your Docker containers.")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"For example, a Visual Studio Code settings.json:",(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "terminal.integrated.shellArgs.linux": ["-l"],\n  "terminal.integrated.env.linux": {\n    "NVM_DIR": "$HOME/.nvm",\n    "PATH": "$NVM_DIR/versions/node/$(nvm version)/bin:$PATH"\n  }\n}\n')))),(0,o.yg)("p",null,"It will enable you to automate the switching of Node versions and include NVM as part of the development tools that you are working with. This integration of NVM with the tooling will become a smooth and efficient workflow."),(0,o.yg)("h2",{id:"useful-nvm-commands"},"Useful nvm commands"),(0,o.yg)("p",null,"Let's see some other useful nvm commands:"),(0,o.yg)("h3",{id:"list"},(0,o.yg)("inlineCode",{parentName:"h3"},"list")),(0,o.yg)("p",null,"This command lists/displays all the Nodejs versions we have on our machine."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm list\n")),(0,o.yg)("p",null,"Let's see the output:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"v14.17.1\nv14.18.1\nv16.9.0\n-> v16.17 system\ndefault -> node (-> v16.17.0)\nnode -> stable (-> v16.17.0) (default)\nstable -> 16.17 (-> v16.17.0) (default)\niojs -> N/A (default)\nunstable -> N/A (default)\nlts/* -> lts/gallium (-> v16.17.0)\nlts/argon -> v4.9.1 (-> N/A)\nlts/boron -> v6.17.1 (-> N/A)\nlts/carbon -> v8.17.0 (-> N/A)\nlts/dubnium -> v10.24.1 (-> N/A)\nlts/erbium -> v12.22.12 (-> N/A)\nlts/fermium -> v14.20.0 (-> N/A)\nlts/gallium -> v16.17.0\n")),(0,o.yg)("p",null,"See that it displays all the Nodejs versions in my machine and LTS(long-term support) versions. See that the arrowed item in the list is our current Nodejs version."),(0,o.yg)("h3",{id:"uninstall"},(0,o.yg)("inlineCode",{parentName:"h3"},"uninstall")),(0,o.yg)("p",null,"This is the reverse action of ",(0,o.yg)("inlineCode",{parentName:"p"},"install"),". This command will uninstall a Node version from the machine:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm uninstall 13.10.1\n")),(0,o.yg)("p",null,"This will remove the installed Nodejs version 13.10.1 from your machine."),(0,o.yg)("h3",{id:"run"},(0,o.yg)("inlineCode",{parentName:"h3"},"run")),(0,o.yg)("p",null,"This command lets you run a script with a Nodejs version without changing the current version."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"nvm run 6.10.3 app.js\n")),(0,o.yg)("p",null,"This runs app.js using node 6.10.3. You don't have to switch the current version to 6.10.3 using the ",(0,o.yg)("inlineCode",{parentName:"p"},"use")," command before you can run the script. So this ",(0,o.yg)("inlineCode",{parentName:"p"},"run")," command does the switching before running the script and switches back to the current version after executing the script."),(0,o.yg)("h2",{id:"nvm-best-practices"},"NVM Best Practices"),(0,o.yg)("p",null,"I have organized the best practices section into our article on installing and using NVM. The following section provides some of the most important tips that help in the efficient and effective utilization of NVM."),(0,o.yg)("h3",{id:"keeping-nvm-and-node-versions-up-to-date"},"Keeping NVM and Node Versions Up-To-Date"),(0,o.yg)("p",null,"Security, performance, and compatibility with the latest features and fixes in bug calls require that NVM and Node versions be updated regularly. Keep your development environment up to date so you can take advantage of the latest improvements in the Node.js ecosystem."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Best Practices"),":"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Install updates for NVM on a regular basis."),(0,o.yg)("li",{parentName:"ul"},"Always use the latest stable versions of Node for new projects."),(0,o.yg)("li",{parentName:"ul"},"Regularly check and update Node versions for existing projects in order to meet compatibility and security requirements.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"# Update NVM to the latest version\nnvm install-latest-npm\n\n# Install the latest Node version\nnvm install node\n\n# Update existing Node versions and reinstall global packages\nnvm install 14.18.1 --reinstall-packages-from=14.17.0\n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Update NVM: ",(0,o.yg)("inlineCode",{parentName:"li"},"nvm install-latest-npm")),(0,o.yg)("li",{parentName:"ul"},"Install the current version of node: ",(0,o.yg)("inlineCode",{parentName:"li"},"nvm install node")),(0,o.yg)("li",{parentName:"ul"},"Update existing Node versions: ",(0,o.yg)("inlineCode",{parentName:"li"},"nvm install 14.18.1 --reinstall-packages-from=14.17.0"))),(0,o.yg)("h3",{id:"leveraging-nvm-for-various-environments"},"Leveraging NVM for Various Environments"),(0,o.yg)("p",null,"NVM helps to manage multiple Node environments on a single machine. It is beneficial when you jump between development, test, and production, which most likely requires different Node versions."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Best Practices"),":"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Place ",(0,o.yg)("inlineCode",{parentName:"li"},".nvmrc")," files within your project directories outlining what version of Node your project should be using."),(0,o.yg)("li",{parentName:"ul"},"Setup NVM scripts for auto-switching between Node versions based on the particular task you're running."),(0,o.yg)("li",{parentName:"ul"},"Test your app on various Node versions to ensure it's compatible and performs well in every environment.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},'# Create an .nvmrc file in your project root to specify Node version\necho "14.18.1" > .nvmrc\n\n# Switch to the Node version specified in .nvmrc\nnvm use\n\n')),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Create an ",(0,o.yg)("inlineCode",{parentName:"li"},".nvmrc")," file in your project root: ",(0,o.yg)("inlineCode",{parentName:"li"},'echo "14.18.1" > .nvmrc')),(0,o.yg)("li",{parentName:"ul"},"Switch to the specified Node version in ",(0,o.yg)("inlineCode",{parentName:"li"},".nvmrc"),": ",(0,o.yg)("inlineCode",{parentName:"li"},"nvm use"))),(0,o.yg)("h3",{id:"managing-global-packages"},"Managing Global Packages"),(0,o.yg)("p",null,"It becomes very crucial when effectively managing global packages with NVM, whereby much consideration has to be taken so that there is no conflict and consistency maintained across the different Node versions."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Best Practices"),":"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Install global packages for each Node version so that the environments are isolated from one another."),(0,o.yg)("li",{parentName:"ul"},"Using the ",(0,o.yg)("inlineCode",{parentName:"li"},"reinstall-packages")," NVM feature, global packages are moved with a Node upgrade."),(0,o.yg)("li",{parentName:"ul"},"Regularly audit and clean up your global packages to keep your dev environment nice and trimmed.")),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"# Reinstall global packages when upgrading Node versions\nnvm install 14.18.1 --reinstall-packages-from=14.17.0\n\n# List global packages for the current Node version\nnpm list -g --depth=0\n\n# Remove an unused global package\nnpm uninstall -g package-name\n")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Reinstall global packages when upgrading Node versions: ",(0,o.yg)("inlineCode",{parentName:"li"},"nvm install 14.18.1 --reinstall-packages-from=14.17.0")),(0,o.yg)("li",{parentName:"ul"},"List all globally installed packages: ",(0,o.yg)("inlineCode",{parentName:"li"},"npm list -g --depth=0"))),(0,o.yg)("p",null,"These best practices allow for a smooth and efficient flow with NVM, allowing you an environment that is current, consistent, and best optimized for different project requirements."),(0,o.yg)("h2",{id:"conclusion"},"Conclusion"),(0,o.yg)("p",null,"We learned a lot from this article. We started by introducing Nodejs and then followed by nvm. Next, we learned about nvm and what it does to Node versions in our machine."),(0,o.yg)("p",null,"Next, we learned how nvm switches between Node versions in our machine, and the command we can use to do that. We learned also how to install and uninstall Node versions using the nvm tool."),(0,o.yg)("p",null,"Finally, we saw lists of useful nvm commands that we can to ease our use of the nvm tool."))}g.isMDXComponent=!0}}]);