"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[84051],{58860:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>m});var a=t(37953);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=a.createContext({}),l=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=l(e.components);return a.createElement(d.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=l(t),u=o,m=c["".concat(d,".").concat(u)]||c[u]||g[u]||r;return t?a.createElement(m,i(i({ref:n},s),{},{components:t})):a.createElement(m,i({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=u;var p={};for(var d in n)hasOwnProperty.call(n,d)&&(p[d]=n[d]);p.originalType=e,p[c]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<r;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},28069:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>f,frontMatter:()=>p,metadata:()=>l,toc:()=>c});t(37953);var a=t(58860);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const p={id:"refine-config",title:"<Refine>",sidebar_label:"<Refine>"},d=void 0,l={unversionedId:"api-reference/core/components/refine-config",id:"version-3.xx.xx/api-reference/core/components/refine-config",title:"<Refine>",description:"`` component is the entry point of a refine app. It is where the highest level of configuration of the app occurs.",source:"@site/versioned_docs/version-3.xx.xx/api-reference/core/components/refine-config.md",sourceDirName:"api-reference/core/components",slug:"/api-reference/core/components/refine-config",permalink:"/docs/3.xx.xx/api-reference/core/components/refine-config",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/core/components/refine-config.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Necati \xd6zmen",lastUpdatedAt:1709896748,formattedLastUpdatedAt:"Mar 8, 2024",frontMatter:{id:"refine-config",title:"<Refine>",sidebar_label:"<Refine>"},sidebar:"someSidebar",previous:{title:"<AuthPage>",permalink:"/docs/3.xx.xx/api-reference/core/components/auth-page"},next:{title:"<LayoutWrapper>",permalink:"/docs/3.xx.xx/api-reference/core/components/layout-wrapper"}},s={},c=[{value:"<code>dataProvider</code>",id:"dataprovider",level:2},{value:"<code>routerProvider</code>",id:"routerprovider",level:2},{value:"<code>resources</code>",id:"resources",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>list</code>",id:"list",level:3},{value:"<code>create</code>",id:"create",level:3},{value:"<code>edit</code>",id:"edit",level:3},{value:"<code>show</code>",id:"show",level:3},{value:"<code>canDelete</code>",id:"candelete",level:3},{value:"<code>icon</code>",id:"icon",level:3},{value:"<code>options</code>",id:"options",level:3},{value:"<code>label</code>",id:"label",level:4},{value:"<code>route</code>",id:"route",level:4},{value:"<code>dataProviderName</code>",id:"dataprovidername",level:4},{value:"<code>hide</code>",id:"hide",level:4},{value:"<code>authProvider</code>",id:"authprovider",level:2},{value:"<code>i18nProvider</code>",id:"i18nprovider",level:2},{value:"<code>accessControlProvider</code>",id:"accesscontrolprovider",level:2},{value:"<code>liveProvider</code>",id:"liveprovider",level:2},{value:"<code>notificationProvider</code>",id:"notificationprovider",level:2},{value:"<code>options</code>",id:"options-1",level:2},{value:"<code>breadcrumb</code>",id:"breadcrumb",level:3},{value:"<code>mutationMode</code>",id:"mutationmode",level:3},{value:"<code>undoableTimeout</code>",id:"undoabletimeout",level:3},{value:"<code>syncWithLocation</code>",id:"syncwithlocation",level:3},{value:"<code>warnWhenUnsavedChanges</code>",id:"warnwhenunsavedchanges",level:3},{value:"<code>liveMode</code>",id:"livemode",level:3},{value:"<code>disableTelemetry</code>",id:"disabletelemetry",level:3},{value:"<code>redirect</code>",id:"redirect",level:3},{value:"<code>reactQuery</code>",id:"reactquery",level:3},{value:"<code>clientConfig</code>",id:"clientconfig",level:4},{value:"<code>devtoolConfig</code>",id:"devtoolconfig",level:4},{value:"<code>onLiveEvent</code>",id:"onliveevent",level:2},{value:"<code>catchAll</code>",id:"catchall",level:2},{value:"<code>LoginPage</code>",id:"loginpage",level:2},{value:"<code>DashboardPage</code>",id:"dashboardpage",level:2},{value:"<code>ReadyPage</code>",id:"readypage",level:2},{value:"<code>Sider</code>",id:"sider",level:2},{value:"<code>Footer</code>",id:"footer",level:2},{value:"<code>Header</code>",id:"header",level:2},{value:"<code>Layout</code>",id:"layout",level:2},{value:"<code>OffLayoutArea</code>",id:"offlayoutarea",level:2},{value:"<code>Title</code>",id:"title",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties",level:3}],g=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.yg)("div",n)},u=g("DocThumbsUpDownFeedbackWidget"),m=g("PropsTable"),y={toc:c},h="wrapper";function f(e){var{components:n}=e,t=i(e,["components"]);return(0,a.yg)(h,r(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){o(e,n,t[n])}))}return e}({},y,t),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"<Refine>")," component is the entry point of a ",(0,a.yg)("strong",{parentName:"p"},"refine")," app. It is where the highest level of configuration of the app occurs."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/data-provider"},(0,a.yg)("inlineCode",{parentName:"a"},"dataProvider"))," and ",(0,a.yg)("a",{parentName:"p",href:"#routerprovider"},(0,a.yg)("inlineCode",{parentName:"a"},"routerProvider"))," are required to bootstrap the app. After adding them, ",(0,a.yg)("a",{parentName:"p",href:"#resources"},(0,a.yg)("inlineCode",{parentName:"a"},"resources"))," can be added as property."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport { PostList } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n  return (\n    <Refine\n      dataProvider={dataProvider(API_URL)}\n      resources={[\n        {\n          name: "posts",\n          list: PostList,\n        },\n      ]}\n    />\n  );\n};\n\nexport default App;\n')),(0,a.yg)("br",null),(0,a.yg)("h2",{id:"dataprovider"},(0,a.yg)("inlineCode",{parentName:"h2"},"dataProvider")),(0,a.yg)(u,{id:"dataprovider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("div",{className:"required"},"Required"),(0,a.yg)("br",null),(0,a.yg)("br",null),(0,a.yg)("p",null,"A ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/data-provider"},(0,a.yg)("inlineCode",{parentName:"a"},"dataProvider"))," is the place where a refine app communicates with an API.\nData providers also act as adapters for refine, making it possible for it to consume different API's and data services.",(0,a.yg)("br",{parentName:"p"}),"\n","A ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/data-provider"},(0,a.yg)("inlineCode",{parentName:"a"},"dataProvider"))," makes HTTP requests and returns response data back using predefined methods."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/data-provider"},"Refer to the Data Provider documentation for detailed information. ","\u2192")),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"To activate multiple data provider in refine, we have to pass the default key with ",(0,a.yg)("inlineCode",{parentName:"p"},"dataProvider")," for the default data provider and we can pass other data providers with any key to the ",(0,a.yg)("inlineCode",{parentName:"p"},"<Refine />")," component."),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine-core";\n\nimport defaultDataProvider from "./dataProvider";\nimport exampleDataProvider from "./dataProvider";\n\nconst App: React.FC = () => {\n  return (\n    <Refine\n      dataProvider={{\n        default: defaultDataProvider,\n        example: exampleDataProvider,\n      }}\n    />\n  );\n};\n'))),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"routerprovider"},(0,a.yg)("inlineCode",{parentName:"h2"},"routerProvider")),(0,a.yg)(u,{id:"routerprovider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("div",{className:"required"},"Required"),(0,a.yg)("br",null),(0,a.yg)("br",null),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," needs some router functions to create resource pages, handle navigation, etc. This provider allows you to use the router library you want."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/router-provider"},"Refer to the Router Provider documentation for detailed information. ","\u2192"))),(0,a.yg)("h2",{id:"resources"},(0,a.yg)("inlineCode",{parentName:"h2"},"resources")),(0,a.yg)(u,{id:"resources",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"resources")," is the main building block of a ",(0,a.yg)("strong",{parentName:"p"},"refine")," app. A resource represents an entity in an endpoint in the API (e.g. ",(0,a.yg)("a",{parentName:"p",href:"https://api.fake-rest.refine.dev/posts"},"https://api.fake-rest.refine.dev/posts"),"). It serves as a bridge between the data from the API and the pages in the app, allowing pages to interact with the data from the API."),(0,a.yg)("p",null,"Here's an app that consumes the ",(0,a.yg)("a",{parentName:"p",href:"https://api.fake-rest.refine.dev/posts"},"https://api.fake-rest.refine.dev/posts")," endpoint as a resource to list multiple items, edit or create an item and show a single item."),(0,a.yg)("p",null,"Page components that are for interacting with the CRUD API operations are passed as a resource element to ",(0,a.yg)("inlineCode",{parentName:"p"},"resources"),"."),(0,a.yg)("br",null),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport dataProvider from "@pankod/refine-json-server";\n\nimport { PostList, PostCreate, PostEdit, PostShow } from "pages/posts";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n  return (\n    <Refine\n      dataProvider={dataProvider(API_URL)}\n      // highlight-start\n      resources={[\n        {\n          name: "posts",\n          list: PostList,\n          create: PostCreate,\n          edit: PostEdit,\n          show: PostShow,\n        },\n      ]}\n      // highlight-end\n    />\n  );\n};\n\nexport default App;\n')),(0,a.yg)("br",null),(0,a.yg)("p",null,"These components will receive some properties."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="PostList.tsx"',title:'"PostList.tsx"'},"type OptionsProps<TExtends = { [key: string]: any }> = TExtends & {\n    label?: string;\n    route?: string;\n    dataProviderName?: string;\n    hide?: boolean;\n}\n\ninterface IResourceComponentsProps<TCrudData = any, TOptionsPropsExtends = { [key: string]: any }> {\n    canCreate?: boolean;\n    canEdit?: boolean;\n    canDelete?: boolean;\n    canShow?: boolean;\n    name?: string;\n    initialData?: TCrudData;\n    options?: OptionsProps<TOptionsPropsExtends>;\n}\n\nconst PostList: React.FC<IResourceComponentsProps> = (props) => {\n    ...\n}\n")),(0,a.yg)("p",null,"The values of ",(0,a.yg)("inlineCode",{parentName:"p"},"canCreate"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"canEdit"),", and ",(0,a.yg)("inlineCode",{parentName:"p"},"canShow")," are determined by whether the associated component is passed as an element to ",(0,a.yg)("inlineCode",{parentName:"p"},"resources")," or not.",(0,a.yg)("br",{parentName:"p"}),"\n",(0,a.yg)("inlineCode",{parentName:"p"},"name")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"canDelete")," are the values passed to the ",(0,a.yg)("inlineCode",{parentName:"p"},"resources"),"."),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"This props can be get by using the ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/resource/useResource"},"useResource")," hook."))),(0,a.yg)("h3",{id:"name"},(0,a.yg)("inlineCode",{parentName:"h3"},"name")),(0,a.yg)(u,{id:"name",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("div",{className:"required"},"Required"),(0,a.yg)("br",null),(0,a.yg)("br",null),(0,a.yg)("p",null,"A string value that identifies a resource in the API. Interacting with the data in a resource will be done using an endpoint determined by the ",(0,a.yg)("inlineCode",{parentName:"p"},"name"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"https://api.fake-rest.refine.dev/posts\nhttps://api.fake-rest.refine.dev/posts/1\n")),(0,a.yg)("br",null),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"name")," also determines the routes of the pages of a resource:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"List page -> ",(0,a.yg)("inlineCode",{parentName:"li"},"/posts")),(0,a.yg)("li",{parentName:"ul"},"Create page -> ",(0,a.yg)("inlineCode",{parentName:"li"},"/posts/create")),(0,a.yg)("li",{parentName:"ul"},"Edit page -> ",(0,a.yg)("inlineCode",{parentName:"li"},"/posts/edit/:id")),(0,a.yg)("li",{parentName:"ul"},"Show page -> ",(0,a.yg)("inlineCode",{parentName:"li"},"/posts/show/:id")),(0,a.yg)("li",{parentName:"ul"},"Clone page -> ",(0,a.yg)("inlineCode",{parentName:"li"},"/posts/clone/:id"))),(0,a.yg)("br",null)),(0,a.yg)("h3",{id:"list"},(0,a.yg)("inlineCode",{parentName:"h3"},"list")),(0,a.yg)(u,{id:"list",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The component passed to the ",(0,a.yg)("inlineCode",{parentName:"p"},"list")," prop will be rendered on the ",(0,a.yg)("inlineCode",{parentName:"p"},"/posts")," route.")),(0,a.yg)("h3",{id:"create"},(0,a.yg)("inlineCode",{parentName:"h3"},"create")),(0,a.yg)(u,{id:"create",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The component passed to ",(0,a.yg)("inlineCode",{parentName:"p"},"create")," will be rendered on the ",(0,a.yg)("inlineCode",{parentName:"p"},"/posts/create")," route by default."),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},"It will also be rendered on ",(0,a.yg)("inlineCode",{parentName:"p"},"/posts/clone/:id"),". This represents namely a clone page. ",(0,a.yg)("inlineCode",{parentName:"p"},"id")," represent a record and it will be available as a route parameter.",(0,a.yg)("br",{parentName:"p"}),"\n","For example ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/antd/hooks/form/useForm#clone-mode"},(0,a.yg)("inlineCode",{parentName:"a"},"useForm")," uses this parameter to create a clone form"))),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},(0,a.yg)("inlineCode",{parentName:"p"},"clone")," from ",(0,a.yg)("inlineCode",{parentName:"p"},"useNavigation")," can be used to navigate to a clone page."))),(0,a.yg)("h3",{id:"edit"},(0,a.yg)("inlineCode",{parentName:"h3"},"edit")),(0,a.yg)(u,{id:"edit",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The component passed to ",(0,a.yg)("inlineCode",{parentName:"p"},"edit")," will be rendered on the ",(0,a.yg)("inlineCode",{parentName:"p"},"/posts/edit/:id")," route.")),(0,a.yg)("h3",{id:"show"},(0,a.yg)("inlineCode",{parentName:"h3"},"show")),(0,a.yg)(u,{id:"show",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The component passed to ",(0,a.yg)("inlineCode",{parentName:"p"},"show")," will be rendered on the ",(0,a.yg)("inlineCode",{parentName:"p"},"/posts/show/:id")," route.")),(0,a.yg)("h3",{id:"candelete"},(0,a.yg)("inlineCode",{parentName:"h3"},"canDelete")),(0,a.yg)(u,{id:"candelete",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"This value will be passed to all CRUD pages defined as the ",(0,a.yg)("inlineCode",{parentName:"p"},"resources")," element."),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("strong",{parentName:"p"},"refine"),"'s <",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/antd/components/basic-views/edit"},"Edit"),"> component uses ",(0,a.yg)("inlineCode",{parentName:"p"},"canDelete")," value to whether show delete button in the edit form or not."))),(0,a.yg)("h3",{id:"icon"},(0,a.yg)("inlineCode",{parentName:"h3"},"icon")),(0,a.yg)(u,{id:"icon",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"An icon element can be passed as properties for the icon in the menu."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"<Refine\n    ...\n    resources={[\n        {\n            ...\n            // highlight-next-line\n            icon: <CustomIcon />\n        },\n    ]}\n/>\n"))),(0,a.yg)("h3",{id:"options"},(0,a.yg)("inlineCode",{parentName:"h3"},"options")),(0,a.yg)(u,{id:"options",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Menu item name and route on clicking can be customized."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<Refine\n    ...\n    resources={[\n        {\n            ...\n            // highlight-next-line\n            options: { label: "custom", route: "/custom" }\n        },\n    ]}\n/>\n'))),(0,a.yg)("h4",{id:"label"},(0,a.yg)("inlineCode",{parentName:"h4"},"label")),(0,a.yg)(u,{id:"label",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Name to show in the menu. The plural form of the resource name is shown by default.")),(0,a.yg)("h4",{id:"route"},(0,a.yg)("inlineCode",{parentName:"h4"},"route")),(0,a.yg)(u,{id:"route",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Custom route name")),(0,a.yg)("h4",{id:"dataprovidername"},(0,a.yg)("inlineCode",{parentName:"h4"},"dataProviderName")),(0,a.yg)(u,{id:"dataprovidername",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Default data provider name to use for the resource. If not specified, the default data provider will be used.")),(0,a.yg)("h4",{id:"hide"},(0,a.yg)("inlineCode",{parentName:"h4"},"hide")),(0,a.yg)(u,{id:"hide",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Can be used to hide a ",(0,a.yg)("inlineCode",{parentName:"p"},"resource")," in ",(0,a.yg)("inlineCode",{parentName:"p"},"Sider"),". This resource is also filtered in the ",(0,a.yg)("inlineCode",{parentName:"p"},"useMenu")," hook."),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"You can also pass any type of property into the options object. This property you pass can be received from the ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/resource/useResource"},"useResource")," and ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/resource/useResourceWithRoute"},"useResourceWithRoute")," hooks as well as the components rendered in the ",(0,a.yg)("inlineCode",{parentName:"p"},"list"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"create"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"edit")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"show")," pages."),(0,a.yg)("pre",{parentName:"admonition"},(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"type DataType = {\n    id: number;\n    title: string;\n};\n\n//highlight-start\ntype OptionType = {\n    yourCustomOption: string;\n};\n//highlight-end\n\nconst PostList: React.FC<IResourceComponentsProps<DataType, OptionType>> = (props) => {\n    ...\n}\n"))),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"authprovider"},(0,a.yg)("inlineCode",{parentName:"h2"},"authProvider")),(0,a.yg)(u,{id:"authprovider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"authProvider")," handles authentication logic like login, logout flow, and checking user credentials. It is an object with methods that refine uses when necessary."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/auth-provider"},"Refer to the Auth Provider documentation for detailed information. ","\u2192")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"i18nprovider"},(0,a.yg)("inlineCode",{parentName:"h2"},"i18nProvider")),(0,a.yg)(u,{id:"i18nprovider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"i18nProvider")," property lets you add i18n support to your app. Making you able to use any i18n framework."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/i18n-provider"},"Refer to i18n documentation for detailed information. ","\u2192")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"accesscontrolprovider"},(0,a.yg)("inlineCode",{parentName:"h2"},"accessControlProvider")),(0,a.yg)(u,{id:"accesscontrolprovider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"accessControlProvider")," is the entry point for implementing access control for ",(0,a.yg)("strong",{parentName:"p"},"refine")," apps."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/accessControl-provider"},"Refer to access control documentation for detailed information. ","\u2192")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"liveprovider"},(0,a.yg)("inlineCode",{parentName:"h2"},"liveProvider")),(0,a.yg)(u,{id:"liveprovider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," lets you add Realtime support to your app via ",(0,a.yg)("inlineCode",{parentName:"p"},"liveProvider"),". It can be used to update and show data in Realtime throughout your app."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider"},"Refer to live provider documentation for detailed information. ","\u2192")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"notificationprovider"},(0,a.yg)("inlineCode",{parentName:"h2"},"notificationProvider")),(0,a.yg)(u,{id:"notificationprovider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"notificationProvider")," handles notification logic. It is an object with methods that refine uses when necessary."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/notification-provider"},"Refer to the Notification Provider documentation for detailed information. ","\u2192")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"options-1"},(0,a.yg)("inlineCode",{parentName:"h2"},"options")),(0,a.yg)(u,{id:"options-1",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"options")," is used to configure the app.")),(0,a.yg)("h3",{id:"breadcrumb"},(0,a.yg)("inlineCode",{parentName:"h3"},"breadcrumb")),(0,a.yg)(u,{id:"breadcrumb",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Customize or disable the breadcrumb. By default it uses the Breadcrumb component from respective package."),(0,a.yg)("p",null,"The value set in individual CRUD components (",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/antd/components/basic-views/create/#breadcrumb"},"ANTD"),", ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mantine/components/basic-views/create/#breadcrumb"},"Mantine"),", ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mui/components/basic-views/create/#breadcrumb"},"Material UI"),") will override the value set with ",(0,a.yg)("inlineCode",{parentName:"p"},"breadcrumb"),"."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/antd/components/breadcrumb/"},"Refer to the Breadcrumb docs for further information. ","\u2192")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Breadcrumb } from "@pankod/refine-antd";\nOR\nimport { Breadcrumb } from "@pankod/refine-mantine";\nOR\nimport { Breadcrumb } from "@pankod/refine-mui";\nOR\nimport { Breadcrumb } from "my-custom-breadcrumb";\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            // highlight-start\n            options={{\n                breadcrumb: (\n                    <div\n                        style={{\n                            padding: "3px 6px",\n                            border: "2px dashed cornflowerblue",\n                        }}\n                    >\n                        <Breadcrumb />\n                    </div>\n                ),\n            }}\n            // highlight-end\n        />\n    );\n};\n')),(0,a.yg)("p",null,"To disable the breadcrumb"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"const App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            // highlight-start\n            options={{\n                breadcrumb: false,\n            }}\n            // highlight-end\n        />\n    );\n};\n"))),(0,a.yg)("h3",{id:"mutationmode"},(0,a.yg)("inlineCode",{parentName:"h3"},"mutationMode")),(0,a.yg)(u,{id:"mutationmode",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"mutationMode")," determines which mode the mutations run with. (e.g. useUpdate, useDelete)."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            // highlight-next-line\n            options={{ mutationMode: "optimistic" }}\n        />\n    );\n};\n')),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"pessimistic"),": The mutation runs immediately. Redirection and UI updates are executed after the mutation returns successfully. This is the default setting."),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"optimistic"),": The mutation is applied locally, and redirection and UI updates are executed immediately as if the mutation is successful. If the mutation returns with an error, UI updates accordingly."),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"undoable"),": The mutation is applied locally, and redirection and UI updates are executed immediately as if the mutation is successful. Waits for a customizable amount of timeout before mutation is applied. During the timeout, mutation can be canceled from the notification with the ?undo? button. UI will revert accordingly."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/advanced-tutorials/mutation-mode"},"Refer to the Mutation Mode docs for further information. ","\u2192"))),(0,a.yg)("h3",{id:"undoabletimeout"},(0,a.yg)("inlineCode",{parentName:"h3"},"undoableTimeout")),(0,a.yg)(u,{id:"undoabletimeout",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The duration of the timeout period in ",(0,a.yg)("strong",{parentName:"p"},"undoable")," mode is shown in milliseconds. Mutations can be canceled during this period. This period can also be set on the supported data hooks.",(0,a.yg)("br",{parentName:"p"}),"\n","The value set in hooks will override the value set with ",(0,a.yg)("inlineCode",{parentName:"p"},"undoableTimeout"),".",(0,a.yg)("br",{parentName:"p"}),"\n",(0,a.yg)("inlineCode",{parentName:"p"},"undoableTimeout")," has a default value of ",(0,a.yg)("inlineCode",{parentName:"p"},"5000"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            // highlight-next-line\n            options={{ mutationMode: "undoable", undoableTimeout: 3500 }}\n        />\n    );\n};\n'))),(0,a.yg)("h3",{id:"syncwithlocation"},(0,a.yg)("inlineCode",{parentName:"h3"},"syncWithLocation")),(0,a.yg)(u,{id:"syncwithlocation",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"List query parameter values can be edited manually by typing directly in the URL. To activate this feature ",(0,a.yg)("inlineCode",{parentName:"p"},"syncWithLocation")," needs to be set to ",(0,a.yg)("inlineCode",{parentName:"p"},"true"),"."),(0,a.yg)("p",null,"When ",(0,a.yg)("inlineCode",{parentName:"p"},"syncWithLocation")," is active, the URL on the listing page shows query parameters like those shown below:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"/posts?current=1&pageSize=8&sort[]=createdAt&order[]=desc\n")),(0,a.yg)("p",null,"Users can change the current page, items count per page, and sort and filter parameters."),(0,a.yg)("p",null,"The default value is ",(0,a.yg)("inlineCode",{parentName:"p"},"false"),".")),(0,a.yg)("h3",{id:"warnwhenunsavedchanges"},(0,a.yg)("inlineCode",{parentName:"h3"},"warnWhenUnsavedChanges")),(0,a.yg)(u,{id:"warnwhenunsavedchanges",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"When you have unsaved changes and try to leave the current page, ",(0,a.yg)("strong",{parentName:"p"},"refine")," shows a confirmation modal box.\nTo activate this feature, set the ",(0,a.yg)("inlineCode",{parentName:"p"},"warnWhenUnsavedChanges")," to ",(0,a.yg)("inlineCode",{parentName:"p"},"true"),"."),(0,a.yg)("br",null),(0,a.yg)("div",{style:{textAlign:"center",backgroundColor:"#efefef",padding:"13px 10px 10px"}},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/warnwhen.png"})),(0,a.yg)("br",null),(0,a.yg)("p",null,"The default value is ",(0,a.yg)("inlineCode",{parentName:"p"},"false"),".")),(0,a.yg)("h3",{id:"livemode"},(0,a.yg)("inlineCode",{parentName:"h3"},"liveMode")),(0,a.yg)(u,{id:"livemode",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Whether to update data automatically (",(0,a.yg)("inlineCode",{parentName:"p"},"auto"),") or not (",(0,a.yg)("inlineCode",{parentName:"p"},"manual"),") if a related live event is received. The ",(0,a.yg)("inlineCode",{parentName:"p"},"off")," value is used to avoid creating a subscription."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider#livemode"},"Refer to live provider documentation for detailed information. ","\u2192"))),(0,a.yg)("h3",{id:"disabletelemetry"},(0,a.yg)("inlineCode",{parentName:"h3"},"disableTelemetry")),(0,a.yg)(u,{id:"disabletelemetry",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," implements a simple and transparent telemetry module for collecting usage statistics defined in a very limited scope. This telemetry module is used to improve the ",(0,a.yg)("strong",{parentName:"p"},"refine")," experience. You can disable this by setting ",(0,a.yg)("inlineCode",{parentName:"p"},"disableTelemetry")," to ",(0,a.yg)("inlineCode",{parentName:"p"},"true"),"."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/further-readings/telemetry"},"Refer to refine telemetry documentation for detailed information. ","\u2192"))),(0,a.yg)("h3",{id:"redirect"},(0,a.yg)("inlineCode",{parentName:"h3"},"redirect")),(0,a.yg)(u,{id:"redirect",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"By default, ",(0,a.yg)("strong",{parentName:"p"},"refine")," redirects to the ",(0,a.yg)("inlineCode",{parentName:"p"},"list")," page of the resource after a successful form mutation. To change this behaviour based on the form ",(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/useForm#actions"},"action"),", set ",(0,a.yg)("inlineCode",{parentName:"p"},"redirect")," as follows:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            // highlight-start\n            options={{\n                redirect: {\n                    afterCreate: "show",\n                    afterClone: "edit",\n                    afterEdit: false,\n                },\n            }}\n            // highlight-end\n        />\n    );\n};\n')),(0,a.yg)("p",null,"When the ",(0,a.yg)("inlineCode",{parentName:"p"},"redirect")," option is set to ",(0,a.yg)("inlineCode",{parentName:"p"},"false"),", no redirect is performed after a successful form mutation."),(0,a.yg)("admonition",{type:"caution"},(0,a.yg)("p",{parentName:"admonition"},"If you don't have a show page and you redirect to the show page, the user will be redirected to the list page. Also, in the ",(0,a.yg)("inlineCode",{parentName:"p"},"undoable")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"optimistic")," mutation modes, redirect happens before the mutation succeeds. Therefore, if there is no data in the query cache, the user will be redirected to the list page."))),(0,a.yg)("h3",{id:"reactquery"},(0,a.yg)("inlineCode",{parentName:"h3"},"reactQuery")),(0,a.yg)("h4",{id:"clientconfig"},(0,a.yg)("inlineCode",{parentName:"h4"},"clientConfig")),(0,a.yg)(u,{id:"clientconfig",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Config for React Query client that ",(0,a.yg)("strong",{parentName:"p"},"refine")," uses."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," uses some defaults that apply to all queries:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"{\n    refetchOnWindowFocus: false,\n    keepPreviousData: true,\n}\n")),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://react-query.tanstack.com/reference/QueryClient#queryclient"},"Refer to the QueryClient documentation for detailed information. ","\u2192")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        options={{\n            reactQuery: {\n                clientConfig: {\n                    defaultOptions: {\n                        queries: {\n                            staleTime: Infinity,\n                        },\n                    },\n                },\n            },\n        }}\n        // highlight-end\n    />\n);\n")),(0,a.yg)("p",null,"Also, you can implement your own ",(0,a.yg)("a",{parentName:"p",href:"https://react-query.tanstack.com/reference/QueryClient#queryclient"},"QueryClient"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import { QueryClient } from "@tanstack/react-query";\n\nconst queryClient = new QueryClient();\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        options={{\n            reactQuery: {\n                clientConfig: queryClient\n            },\n        }}\n        // highlight-end\n    />\n);\n'))),(0,a.yg)("h4",{id:"devtoolconfig"},(0,a.yg)("inlineCode",{parentName:"h4"},"devtoolConfig")),(0,a.yg)(u,{id:"devtoolconfig",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Config for customizing React Query Devtools. If you want to disable the Devtools, set ",(0,a.yg)("inlineCode",{parentName:"p"},"devtoolConfig")," to ",(0,a.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," uses some defaults that apply to react-query devtool:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},'{\n    initialIsOpen: false,\n    position: "bottom-right"\n}\n')),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://react-query.tanstack.com/devtools#options"},"Refer to the Devtools documentation for detailed information. ","\u2192")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"{4-7}","{4-7}":!0},'const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        options={{\n            reactQuery: {\n                devtoolConfig: {\n                    initialIsOpen: true,\n                    position: "bottom-left",\n                },\n            },\n        }}\n        // highlight-end\n    />\n);\n')),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"onliveevent"},(0,a.yg)("inlineCode",{parentName:"h2"},"onLiveEvent")),(0,a.yg)(u,{id:"onliveevent",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Callback to handle all live events."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/providers/live-provider#refine"},"Refer to live provider documentation for detailed information. ","\u2192"))),(0,a.yg)("h2",{id:"catchall"},(0,a.yg)("inlineCode",{parentName:"h2"},"catchAll")),(0,a.yg)(u,{id:"catchall",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"When the app is navigated to a non-existent route, ",(0,a.yg)("strong",{parentName:"p"},"refine")," shows a default error page. A custom error component can be used for this error page by passing the customized component to the ",(0,a.yg)("inlineCode",{parentName:"p"},"catchAll")," property:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomErrorPage = <div>Page not found</div>;\n\nconst App: React.FC = () => {\n    return (\n        <Refine\n            ...\n            // highlight-next-line\n            catchAll={CustomErrorPage}\n        />\n    );\n};\n")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"loginpage"},(0,a.yg)("inlineCode",{parentName:"h2"},"LoginPage")),(0,a.yg)(u,{id:"loginpage",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," has a default login page form which is served on the ",(0,a.yg)("inlineCode",{parentName:"p"},"/login")," route when the ",(0,a.yg)("inlineCode",{parentName:"p"},"authProvider")," configuration is provided."),(0,a.yg)("p",null,"Custom login component can be passed to the ",(0,a.yg)("inlineCode",{parentName:"p"},"LoginPage")," property."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomLoginPage = () => <div> Custom Login Page </div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        LoginPage={CustomLoginPage}\n    />\n);\n")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"dashboardpage"},(0,a.yg)("inlineCode",{parentName:"h2"},"DashboardPage")),(0,a.yg)(u,{id:"dashboardpage",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"A custom dashboard page can be passed to the ",(0,a.yg)("inlineCode",{parentName:"p"},"DashboardPage")," prop which is accessible on the root route."),(0,a.yg)("p",null,"The dashboard item will appear at the top of the sider menu. If ",(0,a.yg)("inlineCode",{parentName:"p"},"DashboardPage")," is not given, the first resource of ",(0,a.yg)("inlineCode",{parentName:"p"},"resources")," will be shown."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomDashboardPage = () => <div> Custom Dashboard Page </div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        DashboardPage={CustomDashboardPage}\n    />\n);\n")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"readypage"},(0,a.yg)("inlineCode",{parentName:"h2"},"ReadyPage")),(0,a.yg)(u,{id:"readypage",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," shows a default ready page on the root route when no ",(0,a.yg)("inlineCode",{parentName:"p"},"resources")," is passed to the ",(0,a.yg)("inlineCode",{parentName:"p"},"<Refine>"),"."),(0,a.yg)("p",null,"Custom ready page component can be set by passing to the ",(0,a.yg)("inlineCode",{parentName:"p"},"ReadyPage")," property?."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomReadyPage = () => <div> Custom Ready Page </div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        ReadyPage={CustomReadyPage}\n    />\n);\n")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"sider"},(0,a.yg)("inlineCode",{parentName:"h2"},"Sider")),(0,a.yg)(u,{id:"sider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The default sidebar can be customized by using refine hooks and passing custom components to the ",(0,a.yg)("inlineCode",{parentName:"p"},"Sider")," property."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," uses ",(0,a.yg)("a",{parentName:"p",href:"https://ant.design/components/layout/#Layout.Sider"},"Ant Design Sider")," component by default."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/hooks/ui/useMenu"},"Refer to the ",(0,a.yg)("inlineCode",{parentName:"a"},"useMenu")," hook documentation for detailed sidebar customization. ","\u2192")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"footer"},(0,a.yg)("inlineCode",{parentName:"h2"},"Footer")),(0,a.yg)(u,{id:"footer",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The default app footer can be customized by passing the ",(0,a.yg)("inlineCode",{parentName:"p"},"Footer")," property."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomFooter = () => <div>Custom Footer</div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        Footer={CustomFooter}\n    />\n);\n")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"header"},(0,a.yg)("inlineCode",{parentName:"h2"},"Header")),(0,a.yg)(u,{id:"header",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The default app header can be customized by passing the ",(0,a.yg)("inlineCode",{parentName:"p"},"Header")," property."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},"// highlight-next-line\nconst CustomHeader = () => <div>Custom Header</div>;\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        Header={CustomHeader}\n    />\n);\n")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"layout"},(0,a.yg)("inlineCode",{parentName:"h2"},"Layout")),(0,a.yg)(u,{id:"layout",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The default layout can be customized by passing the ",(0,a.yg)("inlineCode",{parentName:"p"},"Layout")," property."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"refine")," uses ",(0,a.yg)("a",{parentName:"p",href:"https://ant.design/components/layout/"},"Ant Design Layout")," components by default."),(0,a.yg)("p",null,"Layout property will receive individual layout components as property."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        Layout={({ children, Sider, Footer, Header, OffLayoutArea }) => (\n            <AntdLayout style={{ minHeight: "100vh", flexDirection: "row" }}>\n                {Sider && <Sider />}\n                <AntdLayout>\n                    {Header && <Header />}\n                    <AntdLayout.Content>\n                        <div style={{ padding: 24, minHeight: 360 }}>\n                            {children}\n                        </div>\n                    </AntdLayout.Content>\n                    {Footer && <Footer />}\n                </AntdLayout>\n                {OffLayoutArea && <OffLayoutArea />}\n            </AntdLayout>\n        )}\n        // highlight-end\n    />\n);\n')),(0,a.yg)("br",null),(0,a.yg)("p",null,"A completely custom layout can also be implemented instead of the ",(0,a.yg)("strong",{parentName:"p"},"refine"),"'s default ",(0,a.yg)("a",{parentName:"p",href:"https://ant.design/components/layout"},"Ant Design based layout")," like below."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-start\n        Layout={({ children }) => (\n            <div style={{ display: "flex", flexDirection: "column" }}>\n                <div>Custom Layout</div>\n                <div>{children}</div>\n            </div>\n        )}\n        // highlight-end\n    />\n);\n')),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/advanced-tutorials/custom-layout"},"Refer to the Custom Layout documentation for detailed information. ","\u2192")),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},(0,a.yg)("inlineCode",{parentName:"p"},"children")," will be what is passed as a component for the route in a resource(list, edit..) or a custom route.")),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"offlayoutarea"},(0,a.yg)("inlineCode",{parentName:"h2"},"OffLayoutArea")),(0,a.yg)(u,{id:"offlayoutarea",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The component wanted to be placed out of the app layout structure can be set by passing to the ",(0,a.yg)("inlineCode",{parentName:"p"},"OffLayoutArea")," prop."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'// highlight-next-line\nimport { Refine } from "@pankod/refine-core";\nimport { BackTop } from "@pankod/refine-antd";\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        OffLayoutArea={() => <BackTop />}\n    />\n);\n')),(0,a.yg)("br",null)),(0,a.yg)("h2",{id:"title"},(0,a.yg)("inlineCode",{parentName:"h2"},"Title")),(0,a.yg)(u,{id:"title",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"The app title can be set by passing the ",(0,a.yg)("inlineCode",{parentName:"p"},"Title")," property."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'// highlight-start\nconst CustomTitle = ({ collapsed }) => (\n    <div>{collapsed ? "Collapsed Title" : "Full Title"}</div>\n);\n// highlight-end\n\nconst App: React.FC = () => (\n    <Refine\n        ...\n        // highlight-next-line\n        Title={CustomTitle}\n    />\n);\n'))),(0,a.yg)("h2",{id:"api-reference"},"API Reference"),(0,a.yg)("h3",{id:"properties"},"Properties"),(0,a.yg)(u,{id:"properties",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)(m,{module:"@pankod/refine-core/Refine",mdxType:"PropsTable"})))}f.isMDXComponent=!0}}]);