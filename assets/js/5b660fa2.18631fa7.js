"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[97769],{58860:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var r=t(37953);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=l(t),m=o,g=c["".concat(s,".").concat(m)]||c[m]||u[m]||a;return t?r.createElement(g,i(i({ref:n},d),{},{components:t})):r.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[c]="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},57586:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>y,frontMatter:()=>p,metadata:()=>l,toc:()=>c});t(37953);var r=t(58860);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const p={id:"create",title:"Create",swizzle:!0},s=void 0,l={unversionedId:"api-reference/mantine/components/basic-views/create",id:"version-3.xx.xx/api-reference/mantine/components/basic-views/create",title:"Create",description:"`` provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.",source:"@site/versioned_docs/version-3.xx.xx/api-reference/mantine/components/basic-views/create.md",sourceDirName:"api-reference/mantine/components/basic-views",slug:"/api-reference/mantine/components/basic-views/create",permalink:"/docs/3.xx.xx/api-reference/mantine/components/basic-views/create",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/mantine/components/basic-views/create.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Batuhan Wilhelm",lastUpdatedAt:1711375201,formattedLastUpdatedAt:"Mar 25, 2024",frontMatter:{id:"create",title:"Create",swizzle:!0},sidebar:"someSidebar",previous:{title:"Inferencer",permalink:"/docs/3.xx.xx/api-reference/mantine/components/inferencer"},next:{title:"Edit",permalink:"/docs/3.xx.xx/api-reference/mantine/components/basic-views/edit"}},d={},c=[{value:"Properties",id:"properties",level:2},{value:"<code>title</code>",id:"title",level:3},{value:"<code>saveButtonProps</code>",id:"savebuttonprops",level:3},{value:"<code>resource</code>",id:"resource",level:3},{value:"<code>goBack</code>",id:"goback",level:3},{value:"<code>isLoading</code>",id:"isloading",level:3},{value:"<code>breadcrumb</code>",id:"breadcrumb",level:3},{value:"<code>wrapperProps</code>",id:"wrapperprops",level:3},{value:"<code>headerProps</code>",id:"headerprops",level:3},{value:"<code>contentProps</code>",id:"contentprops",level:3},{value:"<code>headerButtons</code>",id:"headerbuttons",level:3},{value:"<code>headerButtonProps</code>",id:"headerbuttonprops",level:3},{value:"<code>footerButtons</code>",id:"footerbuttons",level:3},{value:"<code>footerButtonProps</code>",id:"footerbuttonprops",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Props",id:"props",level:3}],u=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",n)},m=u("DocThumbsUpDownFeedbackWidget"),g=u("PropsTable"),h={toc:c},f="wrapper";function y(e){var{components:n}=e,t=i(e,["components"]);return(0,r.yg)(f,a(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){o(e,n,t[n])}))}return e}({},h,t),{components:n,mdxType:"MDXLayout"}),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live shared",live:!0,shared:!0},'const { default: simpleRest } = RefineSimpleRest;\nsetRefineProps({\n  dataProvider: simpleRest("https://api.fake-rest.refine.dev"),\n  notificationProvider: RefineMantine.useNotificationProvider,\n  Layout: RefineMantine.Layout,\n  Sider: () => null,\n});\n\nconst Wrapper = ({ children }) => {\n  return (\n    <RefineMantine.MantineProvider\n      theme={RefineMantine.LightTheme}\n      withNormalizeCSS\n      withGlobalStyles\n    >\n      <RefineMantine.Global\n        styles={{ body: { WebkitFontSmoothing: "auto" } }}\n      />\n      <RefineMantine.NotificationsProvider position="top-right">\n        {children}\n      </RefineMantine.NotificationsProvider>\n    </RefineMantine.MantineProvider>\n  );\n};\n\ninterface ICategory {\n  id: number;\n  title: string;\n}\n\ninterface IPost {\n  id: number;\n  title: string;\n  content: string;\n  status: "published" | "draft" | "rejected";\n  category: { id: number };\n}\n')),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"<Create>")," provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page."),(0,r.yg)("p",null,"We'll show what ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create>")," does using properties with examples."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=420px hideCode",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"420px",hideCode:!0},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport {\n  Create,\n  Select,\n  TextInput,\n  useForm,\n  useSelect,\n} from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  const { saveButtonProps, getInputProps } = useForm<IPost>({\n    initialValues: {\n      title: "",\n      status: "",\n      category: {\n        id: "",\n      },\n    },\n    validate: {\n      title: (value) => (value.length < 2 ? "Too short title" : null),\n      status: (value) => (value.length <= 0 ? "Status is required" : null),\n      category: {\n        id: (value) => (value.length <= 0 ? "Category is required" : null),\n      },\n    },\n  });\n\n  const { selectProps } = useSelect<ICategory>({\n    resource: "categories",\n  });\n\n  return (\n    <Create saveButtonProps={saveButtonProps}>\n      <form>\n        <TextInput\n          mt={8}\n          label="Title"\n          placeholder="Title"\n          {...getInputProps("title")}\n        />\n        <Select\n          mt={8}\n          label="Status"\n          placeholder="Pick one"\n          {...getInputProps("status")}\n          data={[\n            { label: "Published", value: "published" },\n            { label: "Draft", value: "draft" },\n            { label: "Rejected", value: "rejected" },\n          ]}\n        />\n        <Select\n          mt={8}\n          label="Category"\n          placeholder="Pick one"\n          {...getInputProps("category.id")}\n          {...selectProps}\n        />\n      </form>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n')),(0,r.yg)("admonition",{title:"Swizzle",type:"info-tip"},(0,r.yg)("p",{parentName:"admonition"},"You can swizzle this component to customize it with the ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/packages/documentation/cli"},(0,r.yg)("strong",{parentName:"a"},"refine CLI")))),(0,r.yg)("h2",{id:"properties"},"Properties"),(0,r.yg)("h3",{id:"title"},(0,r.yg)("inlineCode",{parentName:"h3"},"title")),(0,r.yg)(m,{id:"title",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"It allows adding title inside the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create>"),' component. if you don\'t pass title props it uses "Create" prefix and singular resource name by default. For example, for the ',(0,r.yg)("inlineCode",{parentName:"p"},"/posts/create"),' resource, it will be "Create post".'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create, Title } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    /* highlight-next-line */\n    <Create title={<Title order={3}>Custom Title</Title>}>\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"savebuttonprops"},(0,r.yg)("inlineCode",{parentName:"h3"},"saveButtonProps")),(0,r.yg)(m,{id:"savebuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"<Create>")," component has a default button that submits the form. If you want to customize this button you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"saveButtonProps")," property like the code below."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mantine/components/buttons/save-button"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"<SaveButton>")," documentation for detailed usage. ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    /* highlight-next-line */\n    <Create saveButtonProps={{ size: "xs" }}>\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"resource"},(0,r.yg)("inlineCode",{parentName:"h3"},"resource")),(0,r.yg)(m,{id:"resource",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create>")," component reads the ",(0,r.yg)("inlineCode",{parentName:"p"},"resource")," information from the route by default. This default behavior will not work on custom pages. If you want to use the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create>")," component in a custom page, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"resource")," prop."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/advanced-tutorials/custom-pages"},"Refer to the custom pages documentation for detailed usage. ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/custom previewHeight=280px",live:!0,url:"http://localhost:3000/custom",previewHeight:"280px"},'setInitialRoutes(["/custom"]);\n\n// visible-block-start\nimport { Refine } from "@pankod/refine-core";\nimport dataProvider from "@pankod/refine-simple-rest";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport { Layout, Create } from "@pankod/refine-mantine";\n\nconst CustomPage: React.FC = () => {\n  return (\n    /* highlight-next-line */\n    <Create resource="categories">\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <Refine\n      routerProvider={{\n        ...routerProvider,\n        // highlight-start\n        routes: [\n          {\n            element: <CustomPage />,\n            path: "/custom",\n          },\n        ],\n        // highlight-end\n      }}\n      Layout={Layout}\n      dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n      resources={[{ name: "posts" }]}\n    />\n  );\n};\n// visible-block-end\n\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"goback"},(0,r.yg)("inlineCode",{parentName:"h3"},"goBack")),(0,r.yg)(m,{id:"goback",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"To customize the back button or to disable it, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"goBack")," property. You can pass ",(0,r.yg)("inlineCode",{parentName:"p"},"false")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"null")," to hide the back button."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    /* highlight-next-line */\n    <Create goBack="\ud83d\ude0a">\n      <p>Rest of your page here 2</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"isloading"},(0,r.yg)("inlineCode",{parentName:"h3"},"isLoading")),(0,r.yg)(m,{id:"isloading",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"To toggle the loading state of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"isLoading")," property."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    /* highlight-next-line */\n    <Create isLoading={true}>\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"breadcrumb"},(0,r.yg)("inlineCode",{parentName:"h3"},"breadcrumb")),(0,r.yg)(m,{id:"breadcrumb",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"To customize or disable the breadcrumb, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"breadcrumb")," property. By default it uses the ",(0,r.yg)("inlineCode",{parentName:"p"},"Breadcrumb")," component from ",(0,r.yg)("inlineCode",{parentName:"p"},"@pankod/refine-mantine")," package."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/mantine/components/breadcrumb"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"Breadcrumb")," documentation for detailed usage. ","\u2192")),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"This feature can be managed globally via the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Refine>")," component's ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/components/refine-config/#breadcrumb"},"options"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create, Breadcrumb } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      breadcrumb={\n        <div\n          style={{\n            padding: "3px 6px",\n            border: "2px dashed cornflowerblue",\n          }}\n        >\n          <Breadcrumb />\n        </div>\n      }\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"wrapperprops"},(0,r.yg)("inlineCode",{parentName:"h3"},"wrapperProps")),(0,r.yg)(m,{id:"wrapperprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"If you want to customize the wrapper of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"wrapperProps")," property. For ",(0,r.yg)("inlineCode",{parentName:"p"},"@pankod/refine-mantine")," wrapper element is ",(0,r.yg)("inlineCode",{parentName:"p"},"<Card>"),"s and ",(0,r.yg)("inlineCode",{parentName:"p"},"wrapperProps")," can get every attribute that ",(0,r.yg)("inlineCode",{parentName:"p"},"<Card>")," can get."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://mantine.dev/core/card/"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"Card")," documentation from Mantine for detailed usage. ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      wrapperProps={{\n        style: {\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"headerprops"},(0,r.yg)("inlineCode",{parentName:"h3"},"headerProps")),(0,r.yg)(m,{id:"headerprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"If you want to customize the header of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"headerProps")," property."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://mantine.dev/core/group/"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"Group")," documentation from Mantine for detailed usage. ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerProps={{\n        style: {\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"contentprops"},(0,r.yg)("inlineCode",{parentName:"h3"},"contentProps")),(0,r.yg)(m,{id:"contentprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"If you want to customize the content of the ",(0,r.yg)("inlineCode",{parentName:"p"},"<Create/>")," component, you can use the ",(0,r.yg)("inlineCode",{parentName:"p"},"contentProps")," property."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://mantine.dev/core/box/"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"Box")," documentation from Mantine for detailed usage. ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=320px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"320px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      contentProps={{\n        style: {\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"headerbuttons"},(0,r.yg)("inlineCode",{parentName:"h3"},"headerButtons")),(0,r.yg)(m,{id:"headerbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the buttons at the header by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"headerButtons")," property. It accepts ",(0,r.yg)("inlineCode",{parentName:"p"},"React.ReactNode")," or a render function ",(0,r.yg)("inlineCode",{parentName:"p"},"({ defaultButtons }) => React.ReactNode")," which you can use to keep the existing buttons and add your own."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create, Button } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button type="primary">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"headerbuttonprops"},(0,r.yg)("inlineCode",{parentName:"h3"},"headerButtonProps")),(0,r.yg)(m,{id:"headerbuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the wrapper element of the buttons at the header by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"headerButtonProps")," property."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://mantine.dev/core/group/"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"Group")," documentation from Mantine for detailed usage. ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create, Button } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      headerButtonProps={{\n        style: {\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n      headerButtons={<Button type="primary">Custom Button</Button>}\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"footerbuttons"},(0,r.yg)("inlineCode",{parentName:"h3"},"footerButtons")),(0,r.yg)(m,{id:"footerbuttons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the buttons at the footer by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"footerButtons")," property. It accepts ",(0,r.yg)("inlineCode",{parentName:"p"},"React.ReactNode")," or a render function ",(0,r.yg)("inlineCode",{parentName:"p"},"({ defaultButtons }) => React.ReactNode")," which you can use to keep the existing buttons and add your own."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create, Button } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      footerButtons={({ defaultButtons }) => (\n        <>\n          {defaultButtons}\n          <Button variant="gradient">Custom Button</Button>\n        </>\n      )}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h3",{id:"footerbuttonprops"},(0,r.yg)("inlineCode",{parentName:"h3"},"footerButtonProps")),(0,r.yg)(m,{id:"footerbuttonprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"You can customize the wrapper element of the buttons at the footer by using the ",(0,r.yg)("inlineCode",{parentName:"p"},"footerButtonProps")," property."),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://mantine.dev/core/group/"},"Refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"Group")," documentation from Mantine for detailed usage. ","\u2192")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live url=http://localhost:3000/posts/create previewHeight=280px",live:!0,url:"http://localhost:3000/posts/create",previewHeight:"280px"},'setInitialRoutes(["/posts/create"]);\nimport { Refine } from "@pankod/refine-core";\nimport { CreateButton } from "@pankod/refine-mantine";\nimport routerProvider from "@pankod/refine-react-router-v6";\n\n// visible-block-start\nimport { Create } from "@pankod/refine-mantine";\n\nconst PostCreate: React.FC = () => {\n  return (\n    <Create\n      // highlight-start\n      footerButtonProps={{\n        style: {\n          // hide-start\n          float: "right",\n          marginRight: 24,\n          // hide-end\n          border: "2px dashed cornflowerblue",\n          padding: "16px",\n        },\n      }}\n      // highlight-end\n    >\n      <p>Rest of your page here</p>\n    </Create>\n  );\n};\n// visible-block-end\n\nconst App = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      resources={[\n        {\n          name: "posts",\n          create: PostCreate,\n          list: () => (\n            <div>\n              <p>This page is empty.</p>\n              <CreateButton />\n            </div>\n          ),\n        },\n      ]}\n    />\n  );\n};\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n'))),(0,r.yg)("h2",{id:"api-reference"},"API Reference"),(0,r.yg)("h3",{id:"props"},"Props"),(0,r.yg)(m,{id:"props",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)(g,{module:"@pankod/refine-mantine/Create","goBack-default":"`<IconArrowLeft />`","title-default":"`<Title order={3}>Create {resource.name}</Title>`",mdxType:"PropsTable"})))}y.isMDXComponent=!0}}]);