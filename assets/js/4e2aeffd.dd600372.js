"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[57690],{58860:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>d});var a=t(37953);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),m=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=m(t),g=i,d=u["".concat(l,".").concat(g)]||u[g]||c[g]||o;return t?a.createElement(d,r(r({ref:n},p),{},{components:t})):a.createElement(d,r({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:i,r[1]=s;for(var m=2;m<o;m++)r[m]=t[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},92087:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>m,toc:()=>u});t(37953);var a=t(58860);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function r(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}const s={title:"Framer Motion React Animations",description:"We'll walk you through the features and functionalities of Framer Motion.",slug:"framer-motion",authors:"peter_osah",tags:["react"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/social.png",hide_table_of_contents:!1},l=void 0,m={permalink:"/blog/framer-motion",source:"@site/blog/2024-06-20-framer-motion.md",title:"Framer Motion React Animations",description:"We'll walk you through the features and functionalities of Framer Motion.",date:"2024-06-20T00:00:00.000Z",formattedDate:"June 20, 2024",tags:[{label:"react",permalink:"/blog/tags/react"}],readingTime:15.475,hasTruncateMarker:!1,authors:[{name:"Peter Osah",title:"Web Developer",imageURL:"/img/generic-profile.png",key:"peter_osah"}],frontMatter:{title:"Framer Motion React Animations",description:"We'll walk you through the features and functionalities of Framer Motion.",slug:"framer-motion",authors:"peter_osah",tags:["react"],image:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/social.png",hide_table_of_contents:!1},prevItem:{title:"Temporal API - A new approach to managing Date and Time in JS",permalink:"/blog/temporal-date-api"},nextItem:{title:"Redirect in React Router V6 with Navigate Component",permalink:"/blog/navigate-react-router-redirect"},relatedPosts:[{title:"Create charts using Recharts",description:"We'll explore how to create charts in a Refine project using Recharts.",permalink:"/blog/recharts",formattedDate:"November 5, 2024",authors:[{name:"Joseph Mawa",title:"Web Developer",url:"https://github.com/nibble0101",imageURL:"/img/generic-profile.png",key:"joseph_mawa"}],readingTime:24.985,date:"2024-11-05T00:00:00.000Z"},{title:"React 18 Upgrade Guide and New Features",description:"React 18 was released! Are you looking to upgrade to React 18?  Learn about the new features and changes in this comprehensive guide.",permalink:"/blog/react-18-upgrade-guide",formattedDate:"September 9, 2022",authors:[{name:"Joel Adewole",title:"Web Developer",url:"https://github.com/wolz-codelife",github:"https://github.com/wolz-codelife",linkedin:"https://linkedin.com/in/wolz-codelife",imageURL:"https://github.com/wolz-CODElife.png",key:"joel_adewole"}],readingTime:7.95,date:"2022-09-09T00:00:00.000Z"},{title:"Building a Complete React CRM App with Refine, Ant Design and GraphQL",description:"We'll explore the key features of our CRM app, the technologies we used.",permalink:"/blog/react-crm-with-refine",formattedDate:"October 2, 2023",authors:[{name:"Necati \xd6zmen",title:"Head of Growth at Refine",url:"https://github.com/necatiozmen",description:"Feeling Irie",github:"https://github.com/necatiozmen",twitter:"https://twitter.com/necatiozmen3",linkedin:"https://www.linkedin.com/in/necatiozmen/",imageURL:"https://github.com/necatiozmen.png",key:"necati"}],readingTime:4.625,date:"2023-10-02T00:00:00.000Z"}],authorPosts:[{title:"Tailwind Animations with Examples",description:"Understanding the cleanup function of the useEffect hook in React. Learn how to clean up side effects in React components to prevent memory leaks and improve performance.",permalink:"/blog/tailwind-animations",formattedDate:"November 5, 2024",authors:[{name:"Peter Osah",title:"Web Developer",imageURL:"/img/generic-profile.png",key:"peter_osah"}],readingTime:8.285,date:"2024-11-05T00:00:00.000Z"},{title:"Creating testable React applications with Playwright",description:"We'll take a look at how to create testable React applications with Playwright.",permalink:"/blog/playwright-react",formattedDate:"June 4, 2024",authors:[{name:"Peter Osah",title:"Web Developer",imageURL:"/img/generic-profile.png",key:"peter_osah"}],readingTime:9.29,date:"2024-06-04T00:00:00.000Z"},{title:"React Design Patterns",description:"We'll explore React design patterns and examine how they might improve the development of React applications.",permalink:"/blog/react-design-patterns",formattedDate:"September 5, 2024",authors:[{name:"Peter Osah",title:"Web Developer",imageURL:"/img/generic-profile.png",key:"peter_osah"}],readingTime:14.98,date:"2024-09-05T00:00:00.000Z"}]},p={authorsImageUrls:[void 0]},u=[{value:"Introduction",id:"introduction",level:2},{value:"What is Framer motion?",id:"what-is-framer-motion",level:2},{value:"Setting up Framer Motion in React.",id:"setting-up-framer-motion-in-react",level:2},{value:"Components in Framer",id:"components-in-framer",level:2},{value:"Motion",id:"motion",level:3},{value:"Examples of text and image animations using motion animate props",id:"examples-of-text-and-image-animations-using-motion-animate-props",level:5},{value:"Examples of text and image animations using motion layouts",id:"examples-of-text-and-image-animations-using-motion-layouts",level:5},{value:"Examples of text and image animations using motion gestures",id:"examples-of-text-and-image-animations-using-motion-gestures",level:5},{value:"Examples of animations using motion transitions",id:"examples-of-animations-using-motion-transitions",level:5},{value:"Examples of other animations with motion components",id:"examples-of-other-animations-with-motion-components",level:4},{value:"AnimatePresence",id:"animatepresence",level:3},{value:"Examples of animations using AnimatePresence",id:"examples-of-animations-using-animatepresence",level:4},{value:"Hooks in Framer",id:"hooks-in-framer",level:2},{value:"useSpring",id:"usespring",level:3},{value:"Use cases of the useSpring hook.",id:"use-cases-of-the-usespring-hook",level:4},{value:"useScroll",id:"usescroll",level:3},{value:"Use cases of the useScroll hook.",id:"use-cases-of-the-usescroll-hook",level:4},{value:"useTransform",id:"usetransform",level:3},{value:"Use cases of the useTransform hook.",id:"use-cases-of-the-usetransform-hook",level:4},{value:"useVelocity",id:"usevelocity",level:3},{value:"Use cases of the useVelocity hook.",id:"use-cases-of-the-usevelocity-hook",level:4},{value:"When to use Framer Motion",id:"when-to-use-framer-motion",level:2},{value:"Complex Animations",id:"complex-animations",level:4},{value:"Performance",id:"performance",level:4},{value:"Interactive UI",id:"interactive-ui",level:4},{value:"State-based Animations",id:"state-based-animations",level:4},{value:"Ease of Use",id:"ease-of-use",level:4},{value:"Custom Animations",id:"custom-animations",level:4},{value:"Choreographed Animations",id:"choreographed-animations",level:4},{value:"Conclusion",id:"conclusion",level:2}],c={toc:u},g="wrapper";function d(e){var{components:n}=e,t=r(e,["components"]);return(0,a.yg)(g,o(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){i(e,n,t[n])}))}return e}({},c,t),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"introduction"},"Introduction"),(0,a.yg)("p",null,"Modern web development relies heavily on animations to create a dynamic and interesting user experience. Creating animations in React applications can be done using traditional CSS or JavaScript however, it can become very cumbersome. Various libraries like GSAP, React Spring, anime.js, etc were created to combat the ambiguity in creating animations but one worthy to note is Framer Motion. Framer Motion is a famous React animation library that makes constructing complicated animations easier by providing utility animation components as well as hooks. In this article, we will walk you through the features and functionalities of Framer Motion."),(0,a.yg)("h2",{id:"what-is-framer-motion"},"What is Framer motion?"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://www.framer.com/motion/"},"Framer-motion")," is an open-source React animation and gesture library that offers a low-level API for integrating animation and gestures into elements in React applications while preserving HTML and SVG semantics."),(0,a.yg)("p",null,"Framer-motion was made by Framer, the company behind the Framer site builder designed for creative professionals."),(0,a.yg)("h2",{id:"setting-up-framer-motion-in-react"},"Setting up Framer Motion in React."),(0,a.yg)("p",null,"To setup framer motion in a React project, you must install the framer motion package using the below commands"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"npm")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"npm install framer-motion\n")),(0,a.yg)("h2",{id:"components-in-framer"},"Components in Framer"),(0,a.yg)("p",null,"Framer Motion includes a set of key components that serve as the basis for producing animations They are:"),(0,a.yg)("h3",{id:"motion"},"Motion"),(0,a.yg)("p",null,"The motion component encapsulates ",(0,a.yg)("inlineCode",{parentName:"p"},"HTML")," elements in ",(0,a.yg)("inlineCode",{parentName:"p"},"React")," components, allowing you to animate them using initial and animate props. Motion components are ",(0,a.yg)("strong",{parentName:"p"},"DOM")," primitives designed specifically for ",(0,a.yg)("strong",{parentName:"p"},"60fps")," animation and gestures."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Props available in motion components")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("h4",{parentName:"li",id:"animate"},(0,a.yg)("inlineCode",{parentName:"h4"},"animate"),":"),"The ",(0,a.yg)("inlineCode",{parentName:"li"},"animate")," prop is in responsible for animating ",(0,a.yg)("inlineCode",{parentName:"li"},"motion")," components because it holds the CSS properties to be animated. It is an object that accepts a key-value pair representing the CSS property(in camel case) and its value, respectively.")),(0,a.yg)("p",null,"An example of the animate prop on a motion component is provided below:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.div\n  animate={{\n    x: 0,\n    backgroundColor: "#000",\n    boxShadow: "10px 10px 0 rgba(0, 0, 0, 0.2)",\n    position: "fixed",\n  }}\n/>\n')),(0,a.yg)("p",null,"in the example above, the properties ",(0,a.yg)("inlineCode",{parentName:"p"},"backgroundColor"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"boxShadow"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"position")," are animated to their respective specified values."),(0,a.yg)("h5",{id:"examples-of-text-and-image-animations-using-motion-animate-props"},"Examples of text and image animations using motion animate props"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"animating texts using its opacity")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.p\n  initial={{ opacity: 0 }}\n  animate={{ opacity: 1 }}\n  className="text-[40px] font-bold capitalize"\n>\n  Text animated using opacity\n</motion.p>\n')),(0,a.yg)("p",null,"From the code above, we can specify the initial animation property and value to be animated using the ",(0,a.yg)("inlineCode",{parentName:"p"},"initial")," props and then animate that to another value using the ",(0,a.yg)("inlineCode",{parentName:"p"},"animate")," props."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/text-opacity-min.gif",alt:"typescript zod"})),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Animating texts using its transform scale:")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.p\n  initial={{ scale: 0.5 }}\n  animate={{ scale: 1 }}\n  className="text-[40px] font-bold capitalize"\n>\n  Text animated using scale\n</motion.p>\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/text-scale-min.gif",alt:"typescript zod"})),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Animating texts using their opacity and scale: you can also combine properties to get the desired animation.")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.p\n  initial={{ opacity: 0, scale: 0.5 }}\n  animate={{ opacity: 1, scale: 1 }}\n  className="text-[40px] font-bold capitalize"\n>\n  Text animated using opacity and scale\n</motion.p>\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/text-scale-opacity-min.gif",alt:"typescript zod"})),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Animating texts with translate transforms: We can create a translate animation by defining the x and y positions.")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.p\n  initial={{ x: -100, y: -100 }}\n  animate={{ x: 1, y: 1 }}\n  className="text-[30px] font-bold capitalize"\n>\n  Text animated using transform translate\n</motion.p>\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/text-translate-min.gif",alt:"typescript zod"})),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("h4",{parentName:"li",id:"layout"},(0,a.yg)("inlineCode",{parentName:"h4"},"layout")),"The ",(0,a.yg)("inlineCode",{parentName:"li"},"layout")," props is effective in animating layouts (like ",(0,a.yg)("strong",{parentName:"li"},"height")," ",(0,a.yg)("strong",{parentName:"li"},"width"),", flex properties like ",(0,a.yg)("strong",{parentName:"li"},"justify-content"),", ",(0,a.yg)("strong",{parentName:"li"},"flex-start"),", etc). It does this performantly and doesn't trigger browser layout mechanisms with each animation frame by animating layout-related structures with transforms under the hood rather than the specified layout CSS property.")),(0,a.yg)("p",null,"An example of the animate prop on a motion component is provided below:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"<motion.div layout />\n")),(0,a.yg)("h5",{id:"examples-of-text-and-image-animations-using-motion-layouts"},"Examples of text and image animations using motion layouts"),(0,a.yg)("p",null,"Here is an example that uses motion layout to animate its expanded parent element on click:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.div\n  layout\n  data-expanded={isOpen}\n  initial={{ borderRadius: 50 }}\n  className="flex h-[100px] w-[100px] items-center justify-center bg-black data-[expanded=true]:h-[200px] data-[expanded=true]:w-[400px]"\n  onClick={() => setIsOpen(!isOpen)}\n>\n  <motion.div layout className="h-10 w-10 rounded-full bg-white" />\n</motion.div>\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/layout-animations-min.gif",alt:"typescript zod"})),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("h4",{parentName:"li",id:"gestures"},(0,a.yg)("inlineCode",{parentName:"h4"},"Gestures")),(0,a.yg)("inlineCode",{parentName:"li"},"motion")," components add a straightforward but effective collection of UI gesture handlers to React's core set of event listeners.\nAt the moment, it supports gesture detection for ",(0,a.yg)("strong",{parentName:"li"},"hover"),", ",(0,a.yg)("strong",{parentName:"li"},"tap"),", ",(0,a.yg)("strong",{parentName:"li"},"pan"),", and ",(0,a.yg)("strong",{parentName:"li"},"drag")," is supported. You can add several event listeners to your motion component for each gesture.")),(0,a.yg)("p",null,"An example of a gesture handler on a motion component is shown below:"),(0,a.yg)("p",null,"Below is an example of a hover gesture handler:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"<motion.button\n  whileHover={{\n    scale: 1.2,\n    transition: { duration: 1 },\n  }}\n  whileTap={{ scale: 0.9 }}\n/>\n")),(0,a.yg)("h5",{id:"examples-of-text-and-image-animations-using-motion-gestures"},"Examples of text and image animations using motion gestures"),(0,a.yg)("p",null,"Below is an example of a scale animation displayed on hover:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.div\n  className="h-[80px] w-[200px] cursor-pointer rounded-[50px] bg-[#00ccff]"\n  whileHover={{ scale: 1.1 }}\n  transition={{ type: "spring", stiffness: 400, damping: 10 }}\n/>\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/hover-gesture-min.gif",alt:"typescript zod"})),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("h4",{parentName:"li",id:"transitions"},(0,a.yg)("inlineCode",{parentName:"h4"},"Transitions")),(0,a.yg)("inlineCode",{parentName:"li"},"motion")," components can accept a ",(0,a.yg)("inlineCode",{parentName:"li"},"transition")," prop, which specifies the type of animation used while animating CSS properties.\nIn the transition props object, we can specify the ",(0,a.yg)("inlineCode",{parentName:"li"},"duration"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"delay"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"ease")," properties of the transition.")),(0,a.yg)("h5",{id:"examples-of-animations-using-motion-transitions"},"Examples of animations using motion transitions"),(0,a.yg)("p",null,"An example of the ",(0,a.yg)("inlineCode",{parentName:"p"},"transition")," prop with ",(0,a.yg)("inlineCode",{parentName:"p"},"duration"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"ease"),", and ",(0,a.yg)("inlineCode",{parentName:"p"},"delay")," on a motion component is shown below:"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.div\n  className=" h-[200px] w-[200px] rounded-full bg-black"\n  initial={{ opacity: 0, scale: 0.5 }}\n  animate={{ opacity: 1, scale: 1 }}\n  transition={{\n    duration: 0.8,\n    delay: 0.5,\n    ease: [0, 0.71, 0.2, 1.01],\n  }}\n/>\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/transition-properties-min.gif",alt:"typescript zod"})),(0,a.yg)("p",null,"the transition props can also receive props that specify which sort of animation to utilize (",(0,a.yg)("strong",{parentName:"p"},"Tween"),", ",(0,a.yg)("strong",{parentName:"p"},"Spring"),", or ",(0,a.yg)("strong",{parentName:"p"},"Inertia"),")."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.div\n    className="flex items-center justify-center text-white w-[200px] h-[200px] rounded-full bg-black"\n    animate={{ y: 100 }}\n    transition={{ type: "spring", stiffness: 200 }}\n    >\n        Transition : Spring\n</motion.div>\n\n<motion.div\n    className="flex items-center justify-center text-white w-[200px] h-[200px] rounded-full bg-black"\n    animate={{ y: 100, pathLength: 1 }}\n    transition={{ type: "tween", duration: 3, }}\n    >\n        Transition: Tween\n</motion.div>\n\n<motion.div\n    className="flex items-center justify-center text-white w-[200px] h-[200px] rounded-full bg-black"\n    animate={{ y: 100 }}\n    transition={{ type: "inertia", velocity: 120 }}\n    >\n        Transition: Inertia\n</motion.div>\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/transition-types-min.gif",alt:"typescript zod"})),(0,a.yg)("h4",{id:"examples-of-other-animations-with-motion-components"},"Examples of other animations with motion components"),(0,a.yg)("h3",{id:"animatepresence"},"AnimatePresence"),(0,a.yg)("p",null,"Components removed from the React tree can be animated out using the ",(0,a.yg)("inlineCode",{parentName:"p"},"AnimatePresence")," component."),(0,a.yg)("p",null,"This component solves many cases such as animating an element on react that was conditionally rendered as React lacks a lifecycle method that supports the notification of components to be unmounted as well as allowing them to defer unmounting until after an action (like an animation) has been executed."),(0,a.yg)("h4",{id:"examples-of-animations-using-animatepresence"},"Examples of animations using AnimatePresence"),(0,a.yg)("p",null,"An example below is an animation done on a conditionally rendered div box."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import { useState } from "react";\nimport { motion, AnimatePresence } from "framer-motion";\n\nconst App = () => {\n  const [show, setShow] = useState(true);\n\n  return (\n    <div className="mt-20 flex h-screen max-h-screen w-full flex-col items-center justify-start">\n      <div className="flex flex-col items-center p-0 pb-[50px]">\n        <motion.button\n          className="rounded-[10px] bg-black p-4 text-white"\n          whileTap={{ scale: 0.95 }}\n          onClick={() => {\n            setShow(!show);\n          }}\n        >\n          {show ? "Hide" : "Show"}\n        </motion.button>\n      </div>\n\n      <AnimatePresence>\n        {show ? (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className="m-0 flex h-[150px] w-[150px] items-center justify-center rounded-[30px] bg-black text-white"\n          />\n        ) : null}\n      </AnimatePresence>\n    </div>\n  );\n};\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/animation-presence-min.gif",alt:"typescript zod"})),(0,a.yg)("h2",{id:"hooks-in-framer"},"Hooks in Framer"),(0,a.yg)("h3",{id:"usespring"},"useSpring"),(0,a.yg)("p",null,"A motion value can be animated in a spring fashion through the ",(0,a.yg)("inlineCode",{parentName:"p"},"useSpring")," hook."),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"useSpring")," hook generates a motion value that animates to its latest target value using a spring animation. The target can be set manually using ",(0,a.yg)("inlineCode",{parentName:"p"},".set")," methods, or automatically by handing in another motion value."),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"useSpring")," can be initialized with a number."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"const spring = useSpring(0);\n")),(0,a.yg)("p",null,"Or, with a motionValue provided by framer"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"const x = useMotionValue(0);\nconst spring = useSpring(x);\n")),(0,a.yg)("p",null,"UseSpring can be configured using the ",(0,a.yg)("a",{parentName:"p",href:"https://www.framer.com/motion/transition/#spring"},"standard spring transition options"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"useSpring(x, { stiffness: 1000, damping: 10 });\n")),(0,a.yg)("h4",{id:"use-cases-of-the-usespring-hook"},"Use cases of the useSpring hook."),(0,a.yg)("p",null,"An example is to utilize the ",(0,a.yg)("inlineCode",{parentName:"p"},"useSpring")," hook to animate the scale parameters of an element when the ",(0,a.yg)("inlineCode",{parentName:"p"},"useEffect hook")," is triggered or when the element is hovered over."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import { useEffect } from "react";\nimport { motion, useSpring } from "framer-motion";\n\nconst App = () => {\n  const x = useSpring(0.5);\n  const y = useSpring(0.5);\n\n  useEffect(() => {\n    x.set(1);\n  }, []);\n\n  return (\n    <div>\n      <motion.div\n        className="flex h-10 w-full cursor-pointer items-center justify-center rounded-lg bg-black p-4 text-sm text-white"\n        style={{ scale: x }}\n      >\n        Spring scale animation on useEffect (component mounts)\n      </motion.div>\n\n      <motion.div\n        className="flex h-10 w-full cursor-pointer items-center justify-center rounded-lg bg-black p-4 text-sm text-white"\n        onHoverStart={() => y.set(1)}\n        style={{ scale: y }}\n      >\n        Spring scale animation on Hover\n      </motion.div>\n    </div>\n  );\n};\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/use-spring-min.gif",alt:"typescript zod"})),(0,a.yg)("h3",{id:"usescroll"},"useScroll"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"useScroll")," hook is a hook in Framer Motion that is used to watch scroll positions on an element or page. It is frequently used to create scroll-linked animations such as progress bars and parallax effects."),(0,a.yg)("p",null,"the ",(0,a.yg)("inlineCode",{parentName:"p"},"useScroll")," hook returns four motion values:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"ScrollX/Y"),": The absolute scroll position of the X and Y axis (in pixels)."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"scrollXProgress/YProgress"),": The scroll position (of the X and Y axis) between the specified offsets, expressed as a value between 0 and 1.")),(0,a.yg)("h4",{id:"use-cases-of-the-usescroll-hook"},"Use cases of the useScroll hook."),(0,a.yg)("p",null,"Let's look at an example of how we can use motion values to construct the classic scroll indicator. Simply send the ",(0,a.yg)("inlineCode",{parentName:"p"},"scrollYProgress")," motion value to the styleX style property of the progress bar element, as demonstrated in the code example below."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<motion.div className="progress-bar bg-red-500 fixed top-0 left-0 right-0 h-2.5 origin-left" style={{ scaleX }} />\n  <h1>\n    <code>useScroll</code> with spring smoothing\n  </h1>\n\n  <article>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam ac\n      rhoncus quam.\n    </p>\n    <p>\n      Fringilla quam urna. Cras turpis elit, euismod eget ligula quis,\n      imperdiet sagittis justo. In viverra fermentum ex ac vestibulum.\n      Aliquam eleifend nunc a luctus porta. Mauris laoreet augue ut felis\n      blandit, at iaculis odio ultrices. Nulla facilities. Vestibulum cursus\n      ipsum tellus, eu tincidunt neque tincidunt a.\n    </p>\n    <h2>Sub-header</h2>\n    <p>\n      In eget sodales arcu, consectetur efficitur metus. Duis efficitur\n      tincidunt odio, sit amet laoreet massa fringilla eu.\n    </p>\n    <p>\n      Pellentesque id lacus pulvinar elit pulvinar pretium ac non urna.\n      Mauris id mauris vel arcu commodo venenatis. Aliquam eu risus arcu.\n      Proin sit amet lacus mollis, semper massa ut, rutrum mi.\n    </p>\n    <p>Sed sem nisi, luctus consequat ligula in, congue sodales nisl.</p>\n    <p>\n      Vestibulum bibendum at erat sit amet pulvinar. Pellentesque pharetra\n      leo vitae tristique rutrum. Donec ut volutpat ante, ut suscipit leo.\n    </p>\n    <h2>Sub-header</h2>\n    <p>\n      Maecenas quis elementum nulla, in lacinia nisl. Ut rutrum fringilla\n      aliquet. Pellentesque auctor vehicula malesuada. Aliquam id feugiat\n      sem, sit amet tempor nulla. Quisque fermentum felis faucibus, vehicula\n      metus ac, interdum nibh. Curabitur vitae convallis ligula. Integer ac\n      enim vel felis pharetra laoreet. Interdum et malesuada fames ac ante\n      ipsum primis in faucibus. Pellentesque hendrerit ac augue quis\n      pretium.\n    </p>\n    <p>\n      Morbi ut scelerisque nibh. Integer auctor, massa non dictum tristique,\n      elit metus efficitur elit, ac pretium sapien nisl nec ante. In et ex\n      ultricies, mollis mi in, euismod dolor.\n    </p>\n    <p>Quisque convallis ligula non magna efficitur tincidunt.</p>\n    <p>\n      Pellentesque id lacus pulvinar elit pulvinar pretium ac non urna.\n      Mauris id mauris vel arcu commodo venenatis. Aliquam eu risus arcu.\n      Proin sit amet lacus mollis, semper massa ut, rutrum mi.\n    </p>\n    <p>Sed sem nisi, luctus consequat ligula in, congue sodales nisl.</p>\n    <p>\n      Vestibulum bibendum at erat sit amet pulvinar. Pellentesque pharetra\n      leo vitae tristique rutrum. Donec ut volutpat ante, ut suscipit leo.\n    </p>\n    <h2>Sub-header</h2>\n    <p>\n      Maecenas quis elementum nulla, in lacinia nisl. Ut rutrum fringilla\n      aliquet. Pellentesque auctor vehicula malesuada. Aliquam id feugiat\n      sem, sit amet tempor nulla. Quisque fermentum felis faucibus, vehicula\n      metus ac, interdum nibh. Curabitur vitae convallis ligula. Integer ac\n      enim vel felis pharetra laoreet. Interdum et malesuada fames ac ante\n      ipsum primis in faucibus. Pellentesque hendrerit ac augue quis\n      pretium.\n    </p>\n    <p>\n      Morbi ut scelerisque nibh. Integer auctor, massa non dictum tristique,\n      elit metus efficitur elit, ac pretium sapien nisl nec ante. In et ex\n      ultricies, mollis mi in, euismod dolor.\n    </p>\n    <p>Quisque convallis ligula non magna efficitur tincidunt.</p>\n  </article>\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/use-scroll-min.gif",alt:"typescript zod"})),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"useScroll")," motion values can be combined with other motion value hooks, such as ",(0,a.yg)("inlineCode",{parentName:"p"},"useTransform")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"useSpring"),", to create sophisticated animations like the one shown below."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'const data = [\n  {\n    id: 1,\n    text: "Canyon",\n    url: "https://images.pexels.com/photos/19561297/pexels-photo-19561297.jpeg?auto=compress&cs=tinysrgb&w=600&lazy=load",\n  },\n  {\n    id: 2,\n    text: "Kyoto",\n    url: "https://images.pexels.com/photos/19488566/pexels-photo-19488566/free-photo-of-kyoto.jpeg?auto=compress&cs=tinysrgb&w=600&lazy=load",\n  },\n  {\n    id: 3,\n    text: "Forest",\n    url: "https://images.pexels.com/photos/19237996/pexels-photo-19237996/free-photo-of-empty-road-in-forest.jpeg?auto=compress&cs=tinysrgb&w=600&lazy=load",\n  },\n  {\n    id: 4,\n    text: "Vietnam",\n    url: "https://images.pexels.com/photos/18707547/pexels-photo-18707547/free-photo-of-a-curved-road-in-the-mountains-with-a-motorcycle.jpeg?auto=compress&cs=tinysrgb&w=600&lazy=load",\n  },\n];\n\nfunction Images({ text, url }: { text: string; url: string }) {\n  const ref = useRef(null);\n  const { scrollYProgress } = useScroll({ target: ref });\n  const scale = useSpring(useTransform(scrollYProgress, [0, 1], [10, 20]), {\n    stiffness: 100,\n    damping: 5,\n  });\n  return (\n    <section className="relative h-screen border">\n      <div className="absolute inset-0 rounded-[5px]" ref={ref}>\n        <img className="absolute h-full w-full" src={url} alt={text} />\n        <motion.h2\n          className="absolute left-[45%] top-[50%] -translate-x-1/2 text-[20px] font-bold leading-[1.2] -tracking-[2px] text-red-500"\n          style={{ scale }}\n        >\n          {text}\n        </motion.h2>\n      </div>\n    </section>\n  );\n}\n\nfunction App() {\n  return (\n    <div className="App">\n      {data.map((img) => (\n        <Images key={img.id} text={img.text} url={img.url} />\n      ))}\n    </div>\n  );\n}\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/usescroll-img-min.gif",alt:"typescript zod"})),(0,a.yg)("h3",{id:"usetransform"},"useTransform"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"useTransform")," hook generates a motionValue by modifying the output of one or more other motionValues."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"const opacity = useTransform(\n  x,\n  // Map x from these values:\n  [0, 100],\n  // Into these values:\n  [1, 0],\n);\n")),(0,a.yg)("p",null,"We may use the ",(0,a.yg)("inlineCode",{parentName:"p"},"useTransform"),' to define a new motion value called opacity. By specifying an input and output range, we can say, "When x is 0, opacity should be 1. When x is 100, opacity should be zero."'),(0,a.yg)("h4",{id:"use-cases-of-the-usetransform-hook"},"Use cases of the useTransform hook."),(0,a.yg)("p",null,"An example is to utilize the ",(0,a.yg)("inlineCode",{parentName:"p"},"useTransform")," hook to animate the background parameters of an element on hover."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import { motion, useTransform, motionValue } from "framer-motion";\n\nconst App = () => {\n  const x = useMotionValue(0);\n  const y = useMotionValue(0);\n\n  const backgroundColor = useTransform(x, [0, 100], ["#fff", "#000"]);\n\n  const color = useTransform(y, [0, 100], ["#000", "#fff"]);\n\n  return (\n    <div>\n      <motion.div\n        className="flex h-10 w-full cursor-pointer items-center justify-center rounded-lg bg-black p-4 text-sm text-white"\n        style={{\n          backgroundColor,\n          color,\n        }}\n        animate={{\n          transition: {\n            duration: 0.8,\n            delay: 0.5,\n            ease: [0, 0.71, 0.2, 1.01],\n          },\n        }}\n        onMouseEnter={() => {\n          x.set(100);\n          y.set(100);\n        }}\n        onMouseLeave={() => {\n          x.set(0);\n          y.set(0);\n        }}\n      >\n        useTransform hook background color animation on hover\n      </motion.div>\n    </div>\n  );\n};\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/usetransform-min.gif",alt:"typescript zod"})),(0,a.yg)("p",null,"Another example is to combine the ",(0,a.yg)("inlineCode",{parentName:"p"},"useTransform")," hook with the ",(0,a.yg)("inlineCode",{parentName:"p"},"useSpring")," hook to get a spring animation on a transformed motion value on hover."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import { motion, useSpring, useTransform, useMotionValue } from "framer-motion";\n\nconst App = () => {\n  const springConfig = { stiffness: 100, damping: 5 };\n\n  const scaleMV = useMotionValue(0.5);\n  const transformMV = useMotionValue(50);\n\n  const scale = useSpring(useTransform(scaleMV, [0, 1], [0, 1]), springConfig);\n\n  const translateX = useSpring(\n    useTransform(transformMV, [0, 100], [0, 50]),\n    springConfig,\n  );\n\n  return (\n    <div>\n      <motion.div\n        className="flex h-10 w-full cursor-pointer items-center justify-center rounded-lg bg-black p-4 text-sm text-white"\n        style={{\n          scale,\n          rotateX: translateX,\n        }}\n        onMouseEnter={() => {\n          scaleMV.set(1);\n          transformMV.set(50);\n        }}\n        onMouseLeave={() => {\n          scaleMV.set(0.5);\n          transformMV.set(0);\n        }}\n      >\n        useTransform combination with useSpring\n      </motion.div>\n    </div>\n  );\n};\n')),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/usetransform-usespring-min.gif",alt:"typescript zod"})),(0,a.yg)("h3",{id:"usevelocity"},"useVelocity"),(0,a.yg)("p",null,"When a motion value is supplied, the ",(0,a.yg)("inlineCode",{parentName:"p"},"useVelocity")," hook takes it and provides a new one that updates with the velocity of the motion value."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Code:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import { useMotionValue, useVelocity } from "framer-motion";\n\nfunction Component() {\n  const x = useMotionValue(0);\n\n  const xVelocity = useVelocity(x);\n\n  useEffect(() => {\n    return xVelocity.onChange((latestVelocity) => {\n      console.log("Velocity", latestVelocity);\n    });\n  }, []);\n\n  return <motion.div style={{ x }} />;\n}\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/usevelocity-min.gif",alt:"typescript zod"})),(0,a.yg)("h4",{id:"use-cases-of-the-usevelocity-hook"},"Use cases of the useVelocity hook."),(0,a.yg)("p",null,"In the example below, we create a velocity motion value (which updates when the element moves) from a spring animation and then translate it to a scale and background motion value, which we will utilize on our element."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'const App = () => {\n  const pink = (saturation: number) => `hsl(327, ${saturation}%, 50%)`;\n  const x = useMotionValue(0);\n\n  const xSmooth = useSpring(x, { damping: 50, stiffness: 400 });\n\n  /**\n   * Create a motion value from the smoothed output of x\n   */\n  const xVelocity = useVelocity(xSmooth);\n\n  /**\n   * Transform the velocity of x into a scale motion value\n   */\n  const scale = useTransform(xVelocity, [-3000, 0, 3000], [2, 1, 2], {\n    clamp: false,\n  });\n\n  /**\n   * Transform the velocity of x into a range of background color intensities\n   */\n  const backgroundColor = useTransform(\n    xVelocity,\n    [-2000, 0, 2000],\n    [pink(100), pink(0), pink(100)],\n  );\n\n  return (\n    <div>\n      <motion.div\n        className="h-20 w-20 rounded-[30px] bg-[#ff008c]"\n        drag="x"\n        dragElastic={1}\n        dragConstraints={{ left: -200, right: 200 }}\n        style={{ x, scale, backgroundColor }}\n      />\n    </div>\n  );\n};\n')),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"View:")),(0,a.yg)("div",{className:"centered-image"},(0,a.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/blog/2024-06-20-framer-motion/usetransform-usespring-min.gif",alt:"typescript zod"})),(0,a.yg)("h2",{id:"when-to-use-framer-motion"},"When to use Framer Motion"),(0,a.yg)("h4",{id:"complex-animations"},"Complex Animations"),(0,a.yg)("p",null,"If your project is something where you need complex animations that involve multi-step or multiple elements, Framer Motion quickly becomes the best way to handle such kinds of robust APIs and features."),(0,a.yg)("h4",{id:"performance"},"Performance"),(0,a.yg)("p",null,"If performance is a critical point in your application, Framer Motion was built for performance and will easily handle the animations of even hundreds of elements on the screen."),(0,a.yg)("h4",{id:"interactive-ui"},"Interactive UI"),(0,a.yg)("p",null,"For making interactive user interfaces, it allows you to make elements react to the user input smoothly and visually appealingly, which generally provides tools like gestures and drag animations."),(0,a.yg)("h4",{id:"state-based-animations"},"State-based Animations"),(0,a.yg)("p",null,"If you want to animate components based on changing state, Framer Motion is seamless with React's state and props; it makes developing dynamic animations very easy."),(0,a.yg)("h4",{id:"ease-of-use"},"Ease of Use"),(0,a.yg)("p",null,"If you'd like a library that can easily be integrated and used in your React project, Framer Motion exposes a user-friendly API with features and examples that are well documented."),(0,a.yg)("h4",{id:"custom-animations"},"Custom Animations"),(0,a.yg)("p",null,"In case the need arises for more refined and controlled fine-tuning of your animations, with Framer Motion, you can define your animations down to the smallest detail."),(0,a.yg)("h4",{id:"choreographed-animations"},"Choreographed Animations"),(0,a.yg)("p",null,"For choreographed or synchronized animations, Framer Motion includes tools such as variants and keyframes to make their management super easy."),(0,a.yg)("h2",{id:"conclusion"},"Conclusion"),(0,a.yg)("p",null,"In this article, we learned how to use various Framer Motion components and props to create stunning animations with Framer motion. Framer Motion has more amazing features in its ",(0,a.yg)("a",{parentName:"p",href:"https://www.framer.com/motion/"},"documentation")," that we did not cover in this tutorial. You should check them out.\nI hope this article becomes useful to you in building animations in React."))}d.isMDXComponent=!0}}]);