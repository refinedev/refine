"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5494],{66546:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>g,contentTitle:()=>d,default:()=>v,frontMatter:()=>u,metadata:()=>p,toc:()=>m});a(37953);var t=a(58860),r=a(82433),o=a(47191);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))})),e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}const u={title:"Migrating from 4.x.x to 5.x.x",sidebar_label:"4.x.x to 5.x.x"},d=void 0,p={unversionedId:"migration-guide/4x-to-5x",id:"migration-guide/4x-to-5x",title:"Migrating from 4.x.x to 5.x.x",description:"Motivation Behind the Release",source:"@site/docs/migration-guide/4x-to-5x.md",sourceDirName:"migration-guide",slug:"/migration-guide/4x-to-5x",permalink:"/docs/migration-guide/4x-to-5x",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/docs/migration-guide/4x-to-5x.md",tags:[],version:"current",lastUpdatedBy:"\xd6zg\xfcr Ak\xe7a",lastUpdatedAt:1757327267,formattedLastUpdatedAt:"Sep 8, 2025",frontMatter:{title:"Migrating from 4.x.x to 5.x.x",sidebar_label:"4.x.x to 5.x.x"},sidebar:"mainSidebar",previous:{title:"Multitenancy",permalink:"/docs/enterprise-edition/multitenancy/"},next:{title:"3.x.x to 4.x.x",permalink:"/docs/migration-guide/3x-to-4x"}},g={},m=[{value:"Motivation Behind the Release",id:"motivation-behind-the-release",level:2},{value:"1. Upgrade All Refine Dependencies to v5",id:"1-upgrade-all-refine-dependencies-to-v5",level:2},{value:"Package Version Changes",id:"package-version-changes",level:4},{value:"2. Remove All Deprecated APIs from Refine v4",id:"2-remove-all-deprecated-apis-from-refine-v4",level:2},{value:"3. Refactor Legacy Router Provider to use new Router Provider",id:"3-refactor-legacy-router-provider-to-use-new-router-provider",level:2},{value:"4. Refactor Legacy Auth Provider to use new Auth Provider",id:"4-refactor-legacy-auth-provider-to-use-new-auth-provider",level:2},{value:"5. Upgrade TanStack Query to v5",id:"5-upgrade-tanstack-query-to-v5",level:2},{value:"6. Upgrade React to v19 (optional)",id:"6-upgrade-react-to-v19-optional",level:2},{value:"Data &amp; Mutation Hooks: Return Type Breaking Changes",id:"data--mutation-hooks-return-type-breaking-changes",level:2},{value:"useList",id:"uselist",level:3},{value:"useOne, useMany, useShow",id:"useone-usemany-useshow",level:3},{value:"useTable from @refinedev/react-table",id:"usetable-from-refinedevreact-table",level:3},{value:"useTable from @refinedev/core",id:"usetable-from-refinedevcore",level:3},{value:"useTable from @refinedev/antd",id:"usetable-from-refinedevantd",level:3},{value:"useDataGrid from @refinedev/mui",id:"usedatagrid-from-refinedevmui",level:3},{value:"useSimpleList from @refinedev/antd",id:"usesimplelist-from-refinedevantd",level:3},{value:"useInfiniteList",id:"useinfinitelist",level:3},{value:"Authentication Hooks",id:"authentication-hooks",level:3},{value:"Mutation Hooks",id:"mutation-hooks",level:3},{value:"List of All Breaking Changes",id:"list-of-all-breaking-changes",level:2},{value:"metaData \u2192 meta",id:"metadata--meta",level:3},{value:"AuthBindings \u2192 AuthProvider (Type Imports)",id:"authbindings--authprovider-type-imports",level:4},{value:"RouterBindings \u2192 RouterProvider (Type Imports)",id:"routerbindings--routerprovider-type-imports",level:4},{value:"sorter/sort \u2192 sorters",id:"sortersort--sorters",level:4},{value:"filters Updates",id:"filters-updates",level:3},{value:"pagination Updates",id:"pagination-updates",level:3},{value:"Resource options \u2192 meta",id:"resource-options--meta",level:3},{value:"resourceName/resourceNameOrRouteName \u2192 resource",id:"resourcenameresourcenameorroutename--resource",level:3},{value:"config Object Removal",id:"config-object-removal",level:3},{value:"useTable Hook Restructuring",id:"usetable-hook-restructuring",level:3},{value:"queryResult \u2192 query",id:"queryresult--query",level:3},{value:"defaultValueQueryResult \u2192 defaultValueQuery",id:"defaultvaluequeryresult--defaultvaluequery",level:3},{value:"tableQueryResult \u2192 tableQuery",id:"tablequeryresult--tablequery",level:3},{value:"mutationResult \u2192 mutation",id:"mutationresult--mutation",level:3},{value:"isLoading \u2192 isPending",id:"isloading--ispending",level:3},{value:"useNavigation \u2192 useGo, useBack",id:"usenavigation--usego-useback",level:3},{value:"useResource \u2192 useResourceParams",id:"useresource--useresourceparams",level:4},{value:"ignoreAccessControlProvider \u2192 accessControl",id:"ignoreaccesscontrolprovider--accesscontrol",level:4},{value:"Resource options \u2192 meta",id:"resource-options--meta-1",level:3},{value:"DataProvider getList and custom Method Updates",id:"dataprovider-getlist-and-custom-method-updates",level:3},{value:"useImport and useExport Hook Updates",id:"useimport-and-useexport-hook-updates",level:3},{value:"queryKeys -&gt; keys",id:"querykeys---keys",level:3},{value:"useNavigation \u2192 useGo",id:"usenavigation--usego",level:3},{value:"ITreeMenu \u2192 TreeMenuItem &amp; list field changes",id:"itreemenu--treemenuitem--list-field-changes",level:3},{value:"ThemedLayoutV2 \u2192 ThemedLayout",id:"themedlayoutv2--themedlayout",level:3}],c=(y="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+y+" was not imported, exported, or provided by MDXProvider as global scope"),(0,t.yg)("div",e)});var y;const f={toc:m},h="wrapper";function v(e){var{components:n}=e,a=l(e,["components"]);return(0,t.yg)(h,s(function(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{},t=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),t.forEach((function(n){i(e,n,a[n])}))}return e}({},f,a),{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h2",{id:"motivation-behind-the-release"},"Motivation Behind the Release"),(0,t.yg)(c,{id:"motivation-behind-the-release",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Refine v5")," removes deprecated APIs and legacy systems, upgrades to TanStack Query v5, and adds React 19 support. The result is a cleaner, faster codebase with better developer experience."),(0,t.yg)("admonition",{type:"caution"},(0,t.yg)("p",{parentName:"admonition"},"Before upgrading to Refine 5, make sure that you are using Refine 4.x.x."),(0,t.yg)("p",{parentName:"admonition"},"If you are using Refine 3.x.x, ",(0,t.yg)("a",{parentName:"p",href:"/docs/migration-guide/3x-to-4x"},"refer to the migration guide for details on upgrading from 3.x.x to 4.x.x "))),(0,t.yg)("h2",null,"Migration Steps "),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Step 1"),": ",(0,t.yg)("a",{parentName:"li",href:"#1-upgrade-all-refine-dependencies-to-v5"},"Upgrade the dependencies")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Step 2"),": ",(0,t.yg)("a",{parentName:"li",href:"#2-remove-all-deprecated-apis-from-refine-v4"},"Remove the deprecated APIs")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Step 3"),": ",(0,t.yg)("a",{parentName:"li",href:"/docs/migration-guide/router-provider/"},"Update the router provider")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Step 4"),": ",(0,t.yg)("a",{parentName:"li",href:"/docs/migration-guide/auth-provider/"},"Update the auth provider")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"Step 5"),": ",(0,t.yg)("a",{parentName:"li",href:"#5-upgrade-tanstack-query-to-v5"},"Upgrade TanStack Query")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"(Optional) Step 6"),": ",(0,t.yg)("a",{parentName:"li",href:"#6-optionally-upgrade-react-to-v19"},"Optional: Upgrade React")))),(0,t.yg)("h2",{id:"1-upgrade-all-refine-dependencies-to-v5"},"1. Upgrade All Refine Dependencies to v5"),(0,t.yg)("h4",{id:"package-version-changes"},"Package Version Changes"),(0,t.yg)(c,{id:"package-version-changes",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"All Refine packages have been bumped to the next major version as a coordinated release. This ensures maximum stability and compatibility when using packages together - all Refine v5 packages are tested as a complete ecosystem."),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Package"),(0,t.yg)("th",{parentName:"tr",align:null},"v4 Version"),(0,t.yg)("th",{parentName:"tr",align:null},"v5 Version"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/core")),(0,t.yg)("td",{parentName:"tr",align:null},"4.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"5.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"react")),(0,t.yg)("td",{parentName:"tr",align:null},"17 or 18"),(0,t.yg)("td",{parentName:"tr",align:null},"18 or 19")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@tanstack/react-query")),(0,t.yg)("td",{parentName:"tr",align:null},"4.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"5.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/antd")),(0,t.yg)("td",{parentName:"tr",align:null},"5.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"6.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/mui")),(0,t.yg)("td",{parentName:"tr",align:null},"6.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"7.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/mantine")),(0,t.yg)("td",{parentName:"tr",align:null},"2.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"3.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/chakra-ui")),(0,t.yg)("td",{parentName:"tr",align:null},"2.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"3.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/react-hook-form")),(0,t.yg)("td",{parentName:"tr",align:null},"4.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"5.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/react-table")),(0,t.yg)("td",{parentName:"tr",align:null},"5.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"6.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/react-router")),(0,t.yg)("td",{parentName:"tr",align:null},"1.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"2.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/nextjs-router")),(0,t.yg)("td",{parentName:"tr",align:null},"6.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"7.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/remix-router")),(0,t.yg)("td",{parentName:"tr",align:null},"3.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"4.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/inferencer")),(0,t.yg)("td",{parentName:"tr",align:null},"5.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"6.x.x")),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"@refinedev/devtools")),(0,t.yg)("td",{parentName:"tr",align:null},"1.x.x"),(0,t.yg)("td",{parentName:"tr",align:null},"2.x.x")))),(0,t.yg)(r.A,{defaultValue:"refine-cli",values:[{label:"Update with Refine CLI",value:"refine-cli"},{label:"Manual Update",value:"manual"}],mdxType:"Tabs"},(0,t.yg)(o.A,{value:"refine-cli",mdxType:"TabItem"},(0,t.yg)("p",null,"\u26a1\ufe0f You can easily update Refine packages with the Refine CLI ",(0,t.yg)("a",{parentName:"p",href:"/docs/packages/cli/#update"},(0,t.yg)("inlineCode",{parentName:"a"},"update"))," command."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"npm run refine update\n")),(0,t.yg)("admonition",{type:"caution"},(0,t.yg)("p",{parentName:"admonition"},(0,t.yg)("strong",{parentName:"p"},"React Query v5 is required for Refine v5"),". Make sure to install it when updating:"),(0,t.yg)("pre",{parentName:"admonition"},(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"npm i @tanstack/react-query@5\n"))),(0,t.yg)("blockquote",null,(0,t.yg)("p",{parentName:"blockquote"},(0,t.yg)("a",{parentName:"p",href:"/docs/packages/cli/#how-to-add-to-an-existing-project"},"Want to add Refine CLI to an existing project?")))),(0,t.yg)(o.A,{value:"manual",mdxType:"TabItem"},(0,t.yg)("p",null,"You need to update all ",(0,t.yg)("inlineCode",{parentName:"p"},"@refinedev/*")," packages to their compatible v5 versions. Use the version table above to find the correct version for each package you're using in your project."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Core packages (required):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"npm i @refinedev/core@^5.0.0 @tanstack/react-query@^5.0.0\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"UI library packages (choose based on what you're using):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"# If using Ant Design\nnpm i @refinedev/antd@^6.0.0\n\n# If using Material-UI\nnpm i @refinedev/mui@^7.0.0\n\n# If using Mantine\nnpm i @refinedev/mantine@^3.0.0\n\n# If using Chakra UI\nnpm i @refinedev/chakra-ui@^3.0.0\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Router packages (choose based on your router):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"# If using React Router\nnpm i @refinedev/react-router@^2.0.0\n\n# If using Next.js\nnpm i @refinedev/nextjs-router@^7.0.0\n\n# If using Remix\nnpm i @refinedev/remix-router@^4.0.0\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Additional packages (if you're using them):")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"# Form handling\nnpm i @refinedev/react-hook-form@^5.0.0\n\n# Table handling\nnpm i @refinedev/react-table@^6.0.0\n\n# Data providers (update the ones you use)\nnpm i @refinedev/simple-rest@^5.0.0\nnpm i @refinedev/graphql@^6.0.0\nnpm i @refinedev/strapi-v4@^5.0.0\nnpm i @refinedev/supabase@^5.0.0\n# ... and others based on your data provider\n")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Example for a complete Ant Design project:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"npm i @refinedev/core@^5.0.0 @refinedev/antd@^6.0.0 @refinedev/react-router@^2.0.0 @refinedev/simple-rest@^5.0.0 @tanstack/react-query@^5.0.0\n")))),(0,t.yg)("p",null,"Once dependencies are updated, proceed with the following breaking changes:"),(0,t.yg)("hr",null)),(0,t.yg)("h2",{id:"2-remove-all-deprecated-apis-from-refine-v4"},"2. Remove All Deprecated APIs from Refine v4"),(0,t.yg)(c,{id:"2-remove-all-deprecated-apis-from-refine-v4",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"All deprecated APIs marked for removal in v4 have been completely removed in v5."),(0,t.yg)(r.A,{wrapContent:!1,defaultValue:"codemod",values:[{label:"\u2728 Refine Codemod (Recommended)",value:"codemod"},{label:"Manual Update",value:"manual"}],mdxType:"Tabs"},(0,t.yg)(o.A,{value:"codemod",mdxType:"TabItem"},(0,t.yg)("h4",null,"\ud83e\ude84 Migrating your project automatically with refine-codemod \u2728 (recommended) "),(0,t.yg)("p",null,"The ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/refinedev/refine/tree/main/packages/codemod"},(0,t.yg)("inlineCode",{parentName:"a"},"@refinedev/codemod"))," package handles the breaking changes for your project and automatically migrates it from ",(0,t.yg)("inlineCode",{parentName:"p"},"4.x.x")," to ",(0,t.yg)("inlineCode",{parentName:"p"},"5.x.x"),"."),(0,t.yg)("p",null,"Simply ",(0,t.yg)("inlineCode",{parentName:"p"},"cd")," into the root folder of your project (where the ",(0,t.yg)("inlineCode",{parentName:"p"},"package.json")," is located) and run this command:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sh"},"npx @refinedev/codemod@latest refine4-to-refine5\n")),(0,t.yg)("blockquote",null,(0,t.yg)("p",{parentName:"blockquote"},"\ud83d\udc49 ",(0,t.yg)("strong",{parentName:"p"},"Hook Return Type Changes"),": The codemod updates most standard cases, but may miss complex destructuring, conditional logic, or custom wrappers. Please review ",(0,t.yg)("a",{parentName:"p",href:"#data--mutation-hooks-return-type-breaking-changes"},"Data & Mutation Hooks: Return Type Breaking Changes")," if you use these patterns.")),(0,t.yg)("h3",null,"\u26a0\ufe0f Changes not handled by the codemod "),(0,t.yg)("p",null,"Unfortunately, the codemod cannot cover every case. While it automates most of the migration, some changes still require manual updates. Below is the list of removed or modified APIs that you'll need to adjust yourself."),(0,t.yg)("h3",null,"useNavigation \u2192 useGo"),(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",null,"Affects:")," Navigation helpers (",(0,t.yg)("code",null,"push"),", ",(0,t.yg)("code",null,"replace"),", ",(0,t.yg)("code",null,"goBack"),")"),(0,t.yg)("p",null,"The return values from ",(0,t.yg)("code",null,"useNavigation")," have been removed. You should now use ",(0,t.yg)("code",null,"useGo")," for navigation:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- import { useNavigation } from "@refinedev/core";\n+ import { useGo } from "@refinedev/core";\n\n- const { replace, push } = useNavigation();\n- replace("/tasks/new");\n+ const go = useGo();\n+ go({ to: "/tasks/new", type: "replace" });\n+ go({ to: "/tasks/new", type: "push" });\n')),(0,t.yg)("p",null,"For backward navigation (",(0,t.yg)("code",null,"goBack"),"), use your router\u2019s native API instead."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- import { useNavigation } from "@refinedev/core";\n+ import { useNavigate } from "react-router";\n\n- const { goBack } = useNavigation();\n+ const navigate = useNavigate();\n- goBack();\n+ navigate(-1);\n')),(0,t.yg)("h3",null,"ITreeMenu \u2192 TreeMenuItem & list field changes"),(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",null,"Affects:")," ",(0,t.yg)("code",null,"useMenu"),", custom sider renderers"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("code",null,"ITreeMenu")," has been removed \u2192 use ",(0,t.yg)("code",null,"TreeMenuItem")," instead (codemod updates this)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("code",null,"list")," is now always a string route.",(0,t.yg)("code",null,"list.path")," is gone and ",(0,t.yg)("code",null,"list")," is no longer a function.")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Why:"),(0,t.yg)("br",{parentName:"p"}),"\n","Previously, you could define a React component in the ",(0,t.yg)("code",null,"<","Refine /",">")," resource as ",(0,t.yg)("code",null,"list"),". This is no longer supported. Routes/components must be defined in your router. Because of this, ",(0,t.yg)("code",null,"list")," is now just a route string, not a function or object with ",(0,t.yg)("code",null,"path"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- const { menuItems, selectedKey } = useMenu();\n- menuItems.map((item: ITreeMenu) => {\n-   const { key, list } = item;\n-   const route =\n-     typeof list === "string"\n-       ? list\n-       : typeof list !== "function"\n-       ? list?.path\n-       : key;\n- });\n+ const { menuItems, selectedKey } = useMenu();\n+ menuItems.map((item: TreeMenuItem) => {\n+   const { list } = item;\n+   const route = list ?? key; // always a string route now\n+ });\n\n'))),(0,t.yg)(o.A,{value:"manual",mdxType:"TabItem"},(0,t.yg)("p",null,"If you\u2019d like to migrate manually, or if the codemod didn\u2019t cover all of your cases, check the ",(0,t.yg)("a",{parentName:"p",href:"#list-of-all-breaking-changes"},"full list of breaking changes")," with before/after examples.")))),(0,t.yg)("h2",{id:"3-refactor-legacy-router-provider-to-use-new-router-provider"},"3. Refactor Legacy Router Provider to use new Router Provider"),(0,t.yg)(c,{id:"3-refactor-legacy-router-provider-to-use-new-router-provider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"If your project is still using the ",(0,t.yg)("inlineCode",{parentName:"p"},"legacyRouterProvider")," provider, you'll need to migrate to the new router system. The new router provider offers greater flexibility and better integration with modern routing patterns."),(0,t.yg)("p",null,"Please refer these guides to refactor your project:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/migration-guide/router-provider/"},"Migrating Router Provider from 3.x.x to 4.x.x")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"/docs/routing/integrations/react-router/migration-guide-v6-to-v7"},"React Router v6 to v7")))),(0,t.yg)("h2",{id:"4-refactor-legacy-auth-provider-to-use-new-auth-provider"},"4. Refactor Legacy Auth Provider to use new Auth Provider"),(0,t.yg)(c,{id:"4-refactor-legacy-auth-provider-to-use-new-auth-provider",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"If your project is still using the legacy auth provider ",(0,t.yg)("inlineCode",{parentName:"p"},"legacyAuthProvider")," or auth hooks with ",(0,t.yg)("inlineCode",{parentName:"p"},"v3LegacyAuthProviderCompatible: true"),", you ",(0,t.yg)("strong",{parentName:"p"},"must")," migrate to the modern auth provider structure because these are completely removed."),(0,t.yg)("p",null,"For complete migration instructions, please refer to the ",(0,t.yg)("a",{parentName:"p",href:"/docs/migration-guide/auth-provider/"},"Auth Provider Migration Guide"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"useLogin({\n-    v3LegacyAuthProviderCompatible: true,\n});\n\n<Refine\n-    legacyAuthProvider={legacyAuthProvider}\n+    authProvider={authProvider}\n/>\n"))),(0,t.yg)("h2",{id:"5-upgrade-tanstack-query-to-v5"},"5. Upgrade TanStack Query to v5"),(0,t.yg)(c,{id:"5-upgrade-tanstack-query-to-v5",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"You'll need to upgrade TanStack Query from v4 to v5. Please refer to the ",(0,t.yg)("a",{parentName:"p",href:"https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5"},"TanStack Query migration guide")," for detailed instructions on this upgrade.")),(0,t.yg)("h2",{id:"6-upgrade-react-to-v19-optional"},"6. Upgrade React to v19 (optional)"),(0,t.yg)(c,{id:"6-upgrade-react-to-v19-optional",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"Refine v5 supports both React 18 and React 19. If you want to take advantage of the latest React features, you can optionally upgrade to React 19. Please refer to the ",(0,t.yg)("a",{parentName:"p",href:"https://react.dev/blog/2024/04/25/react-19"},"React 19 release notes")," for more information about the new features and migration considerations.")),(0,t.yg)("h2",{id:"data--mutation-hooks-return-type-breaking-changes"},"Data & Mutation Hooks: Return Type Breaking Changes"),(0,t.yg)(c,{id:"data--mutation-hooks-return-type-breaking-changes",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",{parentName:"p"},"Affects:")," All data and mutation hooks (",(0,t.yg)("inlineCode",{parentName:"p"},"useList"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useTable"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useInfiniteList"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useOne"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useMany"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useForm"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useCreate"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useUpdate"),", etc.)"),(0,t.yg)("p",null,"Return types of data and mutation hooks were refactored for clarity and consistency. Query state (",(0,t.yg)("inlineCode",{parentName:"p"},"isLoading"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"isError"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"error"),", etc.) and mutation state (",(0,t.yg)("inlineCode",{parentName:"p"},"isPending"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"isError"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"error"),", etc.) are now grouped under ",(0,t.yg)("inlineCode",{parentName:"p"},"query")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"mutation")," objects respectively, while normalized values (",(0,t.yg)("inlineCode",{parentName:"p"},"data"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"total"),", etc.) are returned under a ",(0,t.yg)("inlineCode",{parentName:"p"},"result")," object.\nThis change:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Unifies the shape of return types across all hooks."),(0,t.yg)("li",{parentName:"ul"},"Eliminates nested property access (e.g., ",(0,t.yg)("inlineCode",{parentName:"li"},"data?.data"),")."),(0,t.yg)("li",{parentName:"ul"},"Improves type safety and developer experience."),(0,t.yg)("li",{parentName:"ul"},"Groups all TanStack Query APIs (",(0,t.yg)("inlineCode",{parentName:"li"},"isLoading"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"isError"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"refetch"),", etc.) under the ",(0,t.yg)("inlineCode",{parentName:"li"},"query")," object, making them easier to discover and use consistently.")),(0,t.yg)("p",null,"The following sections show hook-specific breaking changes with before/after usage examples.")),(0,t.yg)("h3",{id:"uselist"},"useList"),(0,t.yg)(c,{id:"uselist",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n-   data,\n-   isLoading,\n-   isError,\n} = useList();\n\n- const posts = data.data\n- const total = data.total\n\nconst {\n+   result,\n+   query: { isLoading, isError },\n} = useList();\n\n+ const posts = result.data;\n+ const total = result.total;\n"))),(0,t.yg)("h3",{id:"useone-usemany-useshow"},"useOne, useMany, useShow"),(0,t.yg)(c,{id:"useone-usemany-useshow",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"All three hooks follow the same ",(0,t.yg)("inlineCode",{parentName:"p"},"query")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"result")," pattern."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'const {\n-   data,\n-   isLoading,\n-   isError,\n} = useOne({\n    resource: "users",\n    id: 1,\n});\n\n- const user = data.data;\n\nconst {\n+   result,\n+   query: { isLoading, isError },\n} = useOne({\n    resource: "users",\n    id: 1,\n});\n\n+ const user = result;\n'))),(0,t.yg)("h3",{id:"usetable-from-refinedevreact-table"},"useTable from @refinedev/react-table"),(0,t.yg)(c,{id:"usetable-from-refinedevreact-table",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",{parentName:"p"},"Affects:")," TanStack Table properties grouping"),(0,t.yg)("p",null,"TanStack Table properties are now grouped under a ",(0,t.yg)("inlineCode",{parentName:"p"},"reactTable")," object for better organization."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n-   getHeaderGroups,\n-   getRowModel,\n-   setOptions,\n-   getState,\n-   setPageIndex,\n    refineCore: { filters, setCurrentPage, setFilters },\n} = useTable({\n    columns,\n});\n\nconst {\n+   reactTable: {\n+       getHeaderGroups,\n+       getRowModel,\n+       setOptions,\n+       getState,\n+       setPageIndex,\n+   },\n    refineCore: { filters, setCurrentPage, setFilters },\n} = useTable({\n    columns,\n});\n"))),(0,t.yg)("h3",{id:"usetable-from-refinedevcore"},"useTable from @refinedev/core"),(0,t.yg)(c,{id:"usetable-from-refinedevcore",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\u2705 There are no breaking changes in ",(0,t.yg)("inlineCode",{parentName:"p"},"useTable"),". However, we introduced a new result property to make data access easier and keep consistency across all hooks."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n    tableQuery,\n+   result: {\n+       data,\n+       total,\n+   },\n} = useTable();\n\n+ const posts = result.data;\n+ const total = result.total;\n"))),(0,t.yg)("h3",{id:"usetable-from-refinedevantd"},"useTable from @refinedev/antd"),(0,t.yg)(c,{id:"usetable-from-refinedevantd",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\u2705 There are no breaking changes in ",(0,t.yg)("inlineCode",{parentName:"p"},"useTable"),". However, we introduced a new ",(0,t.yg)("inlineCode",{parentName:"p"},"result")," property to make data access easier and keep consistency across all hooks."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n    tableProps,\n+   result: {\n+       data,\n+       total,\n+   },\n} = useTable();\n\n+ const posts = result.data;\n+ const total = result.total;\n"))),(0,t.yg)("h3",{id:"usedatagrid-from-refinedevmui"},"useDataGrid from @refinedev/mui"),(0,t.yg)(c,{id:"usedatagrid-from-refinedevmui",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\u2705 There are no breaking changes in ",(0,t.yg)("inlineCode",{parentName:"p"},"useDataGrid"),". However, we introduced a new ",(0,t.yg)("inlineCode",{parentName:"p"},"result")," property to make data access easier and keep consistency across all hooks."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n    tableQuery,\n    dataGridProps,\n+   result: {\n+       data,\n+       total,\n+   },\n} = useDataGrid();\n\n+ const posts = result.data;\n+ const total = result.total;\n"))),(0,t.yg)("h3",{id:"usesimplelist-from-refinedevantd"},"useSimpleList from @refinedev/antd"),(0,t.yg)(c,{id:"usesimplelist-from-refinedevantd",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\u2705 There are no breaking changes in ",(0,t.yg)("inlineCode",{parentName:"p"},"useSimpleList"),". However, we introduced a new ",(0,t.yg)("inlineCode",{parentName:"p"},"result")," property to make data access easier and keep consistency across all hooks."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Migration:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n    listProps,\n    queryResult,\n+   query,\n+   result: {\n+       data,\n+       total,\n+   },\n} = useSimpleList();\n"))),(0,t.yg)("h3",{id:"useinfinitelist"},"useInfiniteList"),(0,t.yg)(c,{id:"useinfinitelist",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'const {\n-  data,\n-  isLoading,\n-  isError,\n-  fetchNextPage,\n-  hasNextPage,\n} = useInfiniteList({\n  resource: "posts",\n});\n\n- const posts = data?.data;\n\nconst {\n+  result,\n+  query: { isLoading, isError, fetchNextPage, hasNextPage },\n} = useInfiniteList({ resource: "posts" });\n\n+ const posts = result.data;\n'))),(0,t.yg)("h3",{id:"authentication-hooks"},"Authentication Hooks"),(0,t.yg)(c,{id:"authentication-hooks",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",{parentName:"p"},"Affects:")," All authentication hooks (",(0,t.yg)("inlineCode",{parentName:"p"},"useLogin"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useLogout"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useRegister"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useForgotPassword"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useUpdatePassword"),")"),(0,t.yg)("p",null,"Authentication hooks now follow the same mutation pattern as other mutation hooks:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n-  isPending,\n-  isError,\n   mutate,\n} = useLogin();\n\nconst {\n+  mutation: { isPending, isError },\n   mutate,\n} = useLogin();\n"))),(0,t.yg)("h3",{id:"mutation-hooks"},"Mutation Hooks"),(0,t.yg)(c,{id:"mutation-hooks",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",{parentName:"p"},"Affects:")," All other mutation hooks (",(0,t.yg)("inlineCode",{parentName:"p"},"useUpdate"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useDelete"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useCreateMany"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useUpdateMany"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useDeleteMany"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"useCustomMutation"),")"),(0,t.yg)("p",null,"All remaining mutation hooks follow the same pattern as ",(0,t.yg)("inlineCode",{parentName:"p"},"useUpdate"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'const {\n-  isPending,\n-  isError,\n   mutate,\n   mutateAsync,\n} = useUpdate({ resource: "posts" });\n\nconst {\n+  mutation: { isPending, isError },\n   mutate,\n   mutateAsync,\n} = useUpdate({ resource: "posts" });\n'))),(0,t.yg)("h2",{id:"list-of-all-breaking-changes"},"List of All Breaking Changes"),(0,t.yg)("h3",{id:"metadata--meta"},"metaData \u2192 meta"),(0,t.yg)(c,{id:"metadata--meta",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: All data hooks, useForm, useTable, useDataGrid, useSelect, etc."),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"metaData")," parameter has been renamed to ",(0,t.yg)("inlineCode",{parentName:"p"},"meta")," across all hooks:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'useList({\n-    metaData: { foo: "bar" },\n+    meta: { foo: "bar" },\n})\n\nuseOne({\n-    metaData: { headers: { "Authorization": "Bearer token" } },\n+    meta: { headers: { "Authorization": "Bearer token" } },\n})\n\nuseCreate({\n-    metaData: { endpoint: "custom" },\n+    meta: { endpoint: "custom" },\n})\n'))),(0,t.yg)("h4",{id:"authbindings--authprovider-type-imports"},"AuthBindings \u2192 AuthProvider (Type Imports)"),(0,t.yg)(c,{id:"authbindings--authprovider-type-imports",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: Type imports from @refinedev/core"),(0,t.yg)("p",null,"Type interfaces have been renamed in @refinedev/core. When importing these types, you'll need to update the import names while preserving usage with aliases:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'// AuthBindings \u2192 AuthProvider\n- import { type AuthBindings } from "@refinedev/core";\n+ import { type AuthProvider  } from "@refinedev/core";\n\n'))),(0,t.yg)("h4",{id:"routerbindings--routerprovider-type-imports"},"RouterBindings \u2192 RouterProvider (Type Imports)"),(0,t.yg)(c,{id:"routerbindings--routerprovider-type-imports",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: Type imports from @refinedev/core"),(0,t.yg)("p",null,"Type interfaces have been renamed in @refinedev/core. When importing these types, you'll need to update the import names while preserving usage with aliases:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'\n- import type { RouterBindings } from "@refinedev/core";\n+ import type { RouterProvider  } from "@refinedev/core";\n'))),(0,t.yg)("h4",{id:"sortersort--sorters"},"sorter/sort \u2192 sorters"),(0,t.yg)(c,{id:"sortersort--sorters",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useList, useInfiniteList, useTable, useDataGrid, useSelect"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"sorter")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"sort")," parameters have been renamed to ",(0,t.yg)("inlineCode",{parentName:"p"},"sorters"),":"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'useList({\n-    sort: [{ field: "title", order: "asc" }],\n+    sorters: [{ field: "title", order: "asc" }],\n})\n\nuseTable({\n-    initialSorter: [{ field: "createdAt", order: "desc" }],\n+    sorters: {\n+        initial: [{ field: "createdAt", order: "desc" }]\n+    },\n})\n'))),(0,t.yg)("h3",{id:"filters-updates"},"filters Updates"),(0,t.yg)(c,{id:"filters-updates",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useList, useTable, useDataGrid, useSelect"),(0,t.yg)("p",null,"Filter configuration has been simplified and moved out of config objects:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'useList({\n-    config: {\n-        filters: [{ field: "status", operator: "eq", value: "published" }],\n-    },\n+    filters: [{ field: "status", operator: "eq", value: "published" }],\n})\n\nuseTable({\n-    initialFilter: [{ field: "category", operator: "eq", value: "tech" }],\n-    permanentFilter: [{ field: "status", operator: "eq", value: "active" }],\n+    filters: {\n+        initial: [{ field: "category", operator: "eq", value: "tech" }],\n+        permanent: [{ field: "status", operator: "eq", value: "active" }]\n+    },\n})\n'))),(0,t.yg)("h3",{id:"pagination-updates"},"pagination Updates"),(0,t.yg)(c,{id:"pagination-updates",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useList, useTable, useDataGrid, useSelect"),(0,t.yg)("p",null,"Pagination configuration has been restructured:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'useList({\n-    hasPagination: false,\n+    pagination: { mode: "off" },\n})\n\nuseTable({\n-    initialCurrent: 1,\n-    initialPageSize: 20,\n-    hasPagination: false,\n+    pagination: { mode: "off", currentPage: 1, pageSize: 20 },\n})\n')),(0,t.yg)("p",null,"###\xa0pagination.current -> pagination.currentPage"),(0,t.yg)("p",null,"\ud83d\udea8 Affects: useTable, useDataGrid, useSimpleList, useSubscription, useList, useCheckboxGroup, useSelect"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"useTable({\n-   pagination: { current: 1 },\n+   pagination: { currentPage: 1 },\n})\n")),(0,t.yg)("p",null,"###\xa0setCurrent -> setCurrentPage"),(0,t.yg)("p",null,"\ud83d\udea8 Affects: useTable, useDataGrid, useSimpleList"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"setCurrent")," function has been renamed to ",(0,t.yg)("inlineCode",{parentName:"p"},"setCurrentPage"),":"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n-    setCurrent,\n-    current,\n+    currentPage,\n+    setCurrentPage,\n} = useTable();\n"))),(0,t.yg)("h3",{id:"resource-options--meta"},"Resource options \u2192 meta"),(0,t.yg)(c,{id:"resource-options--meta",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: Resource definitions in ",(0,t.yg)("inlineCode",{parentName:"p"},"<Refine>")," component"),(0,t.yg)("p",null,"Resource ",(0,t.yg)("inlineCode",{parentName:"p"},"options")," have been renamed to ",(0,t.yg)("inlineCode",{parentName:"p"},"meta"),":"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'<Refine\n    resources={[\n        {\n            name: "posts",\n-            options: { label: "Blog Posts" },\n+            meta: { label: "Blog Posts" },\n        },\n    ]}\n/>\n'))),(0,t.yg)("h3",{id:"resourcenameresourcenameorroutename--resource"},"resourceName/resourceNameOrRouteName \u2192 resource"),(0,t.yg)(c,{id:"resourcenameresourcenameorroutename--resource",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useImport, useExport, All Button components"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'useImport({\n-    resourceName: "posts",\n+    resource: "posts",\n})\n\n<CreateButton\n-    resourceNameOrRouteName="posts"\n+    resource="posts"\n/>\n'))),(0,t.yg)("h3",{id:"config-object-removal"},"config Object Removal"),(0,t.yg)(c,{id:"config-object-removal",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useList, useInfiniteList"),(0,t.yg)("p",null,"The config parameter has been flattened in data hooks:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'useList({\n-    config: {\n-        pagination: { currentPage: 1, pageSize: 10 },\n-        sorters: [{ field: "title", order: "asc" }],\n-        filters: [{ field: "status", operator: "eq", value: "published" }],\n-        hasPagination: false,\n-        sort: [{ field: "title", order: "asc" }],\n-        metaData: { foo: "bar" },\n-    },\n+    pagination: { currentPage: 1, pageSize: 10, mode: "off" },\n+    sorters: [{ field: "title", order: "asc" }],\n+    filters: [{ field: "status", operator: "eq", value: "published" }],\n+    meta: { foo: "bar" },\n})\n'))),(0,t.yg)("h3",{id:"usetable-hook-restructuring"},"useTable Hook Restructuring"),(0,t.yg)(c,{id:"usetable-hook-restructuring",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useTable, useSimpleList, useDataGrid"),(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"useTable")," hook and its UI variants (",(0,t.yg)("inlineCode",{parentName:"p"},"useDataGrid")," from @refinedev/mui, ",(0,t.yg)("inlineCode",{parentName:"p"},"useSimpleList"),") have been significantly restructured:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'useTable({\n-    initialCurrent: 1,\n-    initialPageSize: 10,\n-    hasPagination: false,\n+    pagination: { currentPage: 1, pageSize: 10 , mode: "off" },\n-    setCurrent,\n+    setCurrentPage,\n\n-    initialSorter: [{ field: "title", order: "asc" }],\n-    permanentSorter: [{ field: "status", order: "asc" }],\n+    sorters: {\n+        initial: [{ field: "title", order: "asc" }],\n+        permanent: [{ field: "status", order: "asc" }]\n+    },\n\n-    initialFilter: [{ field: "status", operator: "eq", value: "published" }],\n-    permanentFilter: [{ field: "category", operator: "eq", value: "tech" }],\n-    defaultSetFilterBehavior: "replace",\n+    filters: {\n+        initial: [{ field: "status", operator: "eq", value: "published" }],\n+        permanent: [{ field: "category", operator: "eq", value: "tech" }],\n+        defaultBehavior: "replace"\n+    },\n\n})\n\n// Return values also changed\nconst {\n-    sorter,\n-    setSorter,\n-    tableQueryResult,\n-    current,\n+    currentPage,\n+    sorters,\n+    setSorters,\n+    tableQuery,\n} = useTable();\n'))),(0,t.yg)("h3",{id:"queryresult--query"},"queryResult \u2192 query"),(0,t.yg)(c,{id:"queryresult--query",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useForm, useSelect, useShow, useSimpleList, useMany"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n-    queryResult,\n+    query,\n} = useShow();\n\nconst {\n-    queryResult,\n+    query,\n} = useForm();\n\n"))),(0,t.yg)("h3",{id:"defaultvaluequeryresult--defaultvaluequery"},"defaultValueQueryResult \u2192 defaultValueQuery"),(0,t.yg)(c,{id:"defaultvaluequeryresult--defaultvaluequery",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useSelect"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n-    defaultValueQueryResult,\n+    defaultValueQuery,\n} = useSelect();\n"))),(0,t.yg)("h3",{id:"tablequeryresult--tablequery"},"tableQueryResult \u2192 tableQuery"),(0,t.yg)(c,{id:"tablequeryresult--tablequery",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useTable, useDataGrid"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const {\n-    tableQueryResult,\n+    tableQuery,\n} = useTable();\n"))),(0,t.yg)("h3",{id:"mutationresult--mutation"},"mutationResult \u2192 mutation"),(0,t.yg)(c,{id:"mutationresult--mutation",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useCreate, useUpdate, useDelete, useCreateMany, useUpdateMany, useDeleteMany, useCustomMutation"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"\nconst {\n-    mutationResult,\n+    mutation,\n} = useForm();\n\n"))),(0,t.yg)("h3",{id:"isloading--ispending"},"isLoading \u2192 isPending"),(0,t.yg)(c,{id:"isloading--ispending",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: useCreate, useUpdate, useDelete, useCreateMany, useUpdateMany, useDeleteMany, useCustomMutation"),(0,t.yg)("p",null,"For mutation hooks, the loading state property has been updated:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},"const { mutate, mutation: { isPending } } = useCreate();\n\n- if (isLoading) return <Spinner />;\n+ if (isPending) return <Spinner />;\n"))),(0,t.yg)("h3",{id:"usenavigation--usego-useback"},"useNavigation \u2192 useGo, useBack"),(0,t.yg)(c,{id:"usenavigation--usego-useback",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"useNavigation")," hook has been replaced with individual hooks:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- import { useNavigation } from "@refinedev/core";\n+ import { useGo, useBack } from "@refinedev/core";\n\nconst MyComponent = () => {\n-   const { push, goBack, replace } = useNavigation();\n+   const go = useGo();\n+   const back = useBack();\n\n-   push("/posts");\n+   go({ to: "/posts" });\n\n-   goBack();\n+   back();\n\n-   replace("/posts");\n+   go({ to: "/posts", type: "replace" });\n};\n'))),(0,t.yg)("h4",{id:"useresource--useresourceparams"},"useResource \u2192 useResourceParams"),(0,t.yg)(c,{id:"useresource--useresourceparams",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"useResource")," hook has been removed in favor of ",(0,t.yg)("inlineCode",{parentName:"p"},"useResourceParams"),". The new ",(0,t.yg)("inlineCode",{parentName:"p"},"useResourceParams")," hook offers the same functionality as ",(0,t.yg)("inlineCode",{parentName:"p"},"useResource"),", while introducing additional features and a more streamlined API. To reduce confusion and improve consistency, all resource-related logic should now use ",(0,t.yg)("inlineCode",{parentName:"p"},"useResourceParams")," exclusively."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- import { useResource } from "@refinedev/core";\n+ import { useResourceParams } from "@refinedev/core";\n\n\n- useResource("posts");\n+ useResourceParams({ resource: "posts" });\n'))),(0,t.yg)("h4",{id:"ignoreaccesscontrolprovider--accesscontrol"},"ignoreAccessControlProvider \u2192 accessControl"),(0,t.yg)(c,{id:"ignoreaccesscontrolprovider--accesscontrol",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'<CreateButton\n-    ignoreAccessControlProvider\n+    accessControl={{ enabled: false }}\n-    resourceNameOrRouteName="posts"\n+    resource="posts"\n/>\n'))),(0,t.yg)("h3",{id:"resource-options--meta-1"},"Resource options \u2192 meta"),(0,t.yg)(c,{id:"resource-options--meta-1",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"options")," prop has been moved to ",(0,t.yg)("inlineCode",{parentName:"p"},"meta"),":"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'<Refine\n  resources={[\n    {\n        name: "posts",\n-       options: {\n-           label: "Blog Posts",\n-           icon: <PostIcon />,\n-           route: "my-posts",\n-           auditLog: {\n-               permissions: ["list", "create"],\n-           },\n-           hide: false,\n-           dataProviderName: "default",\n-       },\n-       canDelete: true,\n+       meta: {\n+           label: "Blog Posts",\n+           icon: <PostIcon />,\n+           parent: "categories",\n+           canDelete: true,\n+           audit: ["list", "create"],\n+           hide: false,\n+           dataProviderName: "default",\n+       },\n    },\n]}\n/>\n'))),(0,t.yg)("h3",{id:"dataprovider-getlist-and-custom-method-updates"},"DataProvider getList and custom Method Updates"),(0,t.yg)(c,{id:"dataprovider-getlist-and-custom-method-updates",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'export const dataProvider = {\n    getList: ({\n        resource,\n        pagination: {\n+            mode: "off" | "server" | "client",\n        },\n-        hasPagination,\n+        sorters,\n-        sort,\n        filters,\n+        meta,\n-        metaData,\n    }) => {\n        // ...\n    },\n\n    custom: ({\n        // ...\n+        sorters,\n-        sort,\n    }) => {\n        // ...\n    },\n};\n'))),(0,t.yg)("h3",{id:"useimport-and-useexport-hook-updates"},"useImport and useExport Hook Updates"),(0,t.yg)(c,{id:"useimport-and-useexport-hook-updates",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"The ",(0,t.yg)("inlineCode",{parentName:"p"},"useImport")," and ",(0,t.yg)("inlineCode",{parentName:"p"},"useExport")," hooks have additional parameter updates:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'useImport({\n-    resourceName: "posts",\n+    resource: "posts",\n-    metaData: { foo: "bar" },\n+    meta: { foo: "bar" },\n    // These are now used as direct props instead of nested config\n-    mapData: (item) => item,\n-    paparseConfig: {},\n-    batchSize: 1000,\n+    mapData: (item) => item,\n+    paparseConfig: {},\n+    batchSize: 1000,\n})\n\nuseExport({\n-    resourceName: "posts",\n+    resource: "posts",\n-    sorter: [{ field: "title", order: "asc" }],\n+    sorters: [{ field: "title", order: "asc" }],\n-    metaData: { foo: "bar" },\n+    meta: { foo: "bar" },\n-    exportOptions: {},\n+    unparseConfig: {},\n    // These are now used as direct props\n-    mapData: (item) => item,\n-    maxItemCount: 1000,\n-    pageSize: 20,\n+    mapData: (item) => item,\n+    maxItemCount: 1000,\n+    pageSize: 20,\n})\n'))),(0,t.yg)("h3",{id:"querykeys---keys"},"queryKeys -> keys"),(0,t.yg)(c,{id:"querykeys---keys",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 Affects: Custom implementations using Refine helpers"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'// queryKeys helper updates\n- import { queryKeys } from "@refinedev/core";\n+ import { keys } from "@refinedev/core";\n\n// Usage updates\n- queryKeys.data().resource("posts").action("list").get();\n+ keys().data().resource("posts").action("list").get();\n'))),(0,t.yg)("h3",{id:"usenavigation--usego"},"useNavigation \u2192 useGo"),(0,t.yg)(c,{id:"usenavigation--usego",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",null,"Affects:")," Navigation helpers (",(0,t.yg)("code",null,"push"),", ",(0,t.yg)("code",null,"replace"),", ",(0,t.yg)("code",null,"goBack"),")"),(0,t.yg)("p",null,"The return values from ",(0,t.yg)("code",null,"useNavigation")," have been removed. You should now use ",(0,t.yg)("code",null,"useGo")," for navigation:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- import { useNavigation } from "@refinedev/core";\n+ import { useGo } from "@refinedev/core";\n\n- const { replace, push } = useNavigation();\n- replace("/tasks/new");\n+ const go = useGo();\n+ go({ to: "/tasks/new", type: "replace" });\n+ go({ to: "/tasks/new", type: "push" });\n')),(0,t.yg)("p",null,"For backward navigation (",(0,t.yg)("code",null,"goBack"),"), use your router\u2019s native API instead."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- import { useNavigation } from "@refinedev/core";\n+ import { useNavigate } from "react-router";\n\n- const { goBack } = useNavigation();\n+ const navigate = useNavigate();\n- goBack();\n+ navigate(-1);\n'))),(0,t.yg)("h3",{id:"itreemenu--treemenuitem--list-field-changes"},"ITreeMenu \u2192 TreeMenuItem & list field changes"),(0,t.yg)(c,{id:"itreemenu--treemenuitem--list-field-changes",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",null,"Affects:")," ",(0,t.yg)("code",null,"useMenu"),", custom sider renderers"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("code",null,"ITreeMenu")," has been removed \u2192 use ",(0,t.yg)("code",null,"TreeMenuItem")," instead (codemod updates this)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("code",null,"list")," is now always a string route.",(0,t.yg)("code",null,"list.path")," is gone and ",(0,t.yg)("code",null,"list")," is no longer a function.")),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Why:"),(0,t.yg)("br",{parentName:"p"}),"\n","Previously, you could define a React component in the ",(0,t.yg)("code",null,"<","Refine /",">")," resource as ",(0,t.yg)("code",null,"list"),". This is no longer supported. Routes/components must be defined in your router. Because of this, ",(0,t.yg)("code",null,"list")," is now just a route string, not a function or object with ",(0,t.yg)("code",null,"path"),"."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- const { menuItems, selectedKey } = useMenu();\n- menuItems.map((item: ITreeMenu) => {\n-   const { key, list } = item;\n-   const route =\n-     typeof list === "string"\n-       ? list\n-       : typeof list !== "function"\n-       ? list?.path\n-       : key;\n- });\n+ const { menuItems, selectedKey } = useMenu();\n+ menuItems.map((item: TreeMenuItem) => {\n+   const { list } = item;\n+   const route = list ?? key; // always a string route now\n+ });\n\n'))),(0,t.yg)("h3",{id:"themedlayoutv2--themedlayout"},"ThemedLayoutV2 \u2192 ThemedLayout"),(0,t.yg)(c,{id:"themedlayoutv2--themedlayout",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,t.yg)("p",null,"\ud83d\udea8 ",(0,t.yg)("strong",{parentName:"p"},"Affects:")," Layout components across all UI packages"),(0,t.yg)("p",null,"The V2 layout components have been renamed to remove the V2 suffix across all UI packages (",(0,t.yg)("inlineCode",{parentName:"p"},"@refinedev/antd"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"@refinedev/mui"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"@refinedev/mantine"),", ",(0,t.yg)("inlineCode",{parentName:"p"},"@refinedev/chakra-ui"),")."),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Components affected:")),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ThemedLayoutV2")," \u2192 ",(0,t.yg)("inlineCode",{parentName:"li"},"ThemedLayout")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ThemedTitleV2")," \u2192 ",(0,t.yg)("inlineCode",{parentName:"li"},"ThemedTitle")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ThemedSiderV2")," \u2192 ",(0,t.yg)("inlineCode",{parentName:"li"},"ThemedSider")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ThemedHeaderV2")," \u2192 ",(0,t.yg)("inlineCode",{parentName:"li"},"ThemedHeader"))),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-diff"},'- import { ThemedLayoutV2, ThemedTitleV2, ThemedSiderV2, ThemedHeaderV2 } from "@refinedev/antd";\n+ import { ThemedLayout, ThemedTitle, ThemedSider, ThemedHeader } from "@refinedev/antd";\n\n'))))}v.isMDXComponent=!0}}]);