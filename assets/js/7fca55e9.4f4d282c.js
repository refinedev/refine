"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[72560],{88123:(e,n,t)=>{t.d(n,{O:()=>p});var r=t(68835),o=t(37953),a=t(86743),i=t(59451),s=t(62201);const l=({horizontalSize:e,onMouseDown:n})=>o.createElement("div",{className:(0,r.A)("resize-handler","hidden","md:block","absolute","z-[3]","top-0","bottom-0","w-2.5","cursor-ew-resize"),"data-direction":"horizontal",onMouseDown:n,style:{left:`calc(${e}% - 5px)`}});function d(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){d(e,n,t[n])}))}return e}function u(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function m(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const p=e=>"nextjs"===(null==e?void 0:e.template)?o.createElement(y,e):o.createElement(g,e),g=e=>{var n,t,d,p,g,f,{startRoute:y,showNavigator:b,showLineNumbers:A,showOpenInCodeSandbox:x,initialPercentage:v=50,dependencies:w,showReadOnly:E,options:k={showTabs:!0,initMode:"lazy",classes:{"sp-bridge-frame":"!hidden","sp-layout":"!rounded-lg !border-gray-300 dark:!border-gray-700","sp-editor":"!gap-0 border-r !border-r-gray-300 dark:!border-r-gray-700","sp-tabs":"!border-b-gray-300 dark:!border-b-gray-700 !bg-gray-0 dark:!bg-gray-800","sp-tabs-scrollable-container":"!min-h-[32px]","sp-input":"!text-gray-800 dark:!text-gray-100","sp-cm":(0,r.A)("p-0 bg-transparent","[&>.cm-editor]:!bg-refine-react-light-code","[&>.cm-editor]:dark:!bg-refine-react-dark-code","[&_.cm-activeLine]:!bg-gray-100 [&_.cm-activeLine]:dark:!bg-gray-800"),"sp-icon-standalone":"!bg-gray-300 dark:!bg-gray-700 !text-gray-400 dark:!text-gray-500","sp-file-explorer":"border-r !border-r-gray-300 dark:!border-r-gray-700","sp-console":(0,r.A)("not-prose","!border-t-0 !border !border-solid !border-t-none","!border-gray-300 dark:!border-gray-700","!rounded-bl-lg !rounded-br-lg","!bg-refine-react-light-code","dark:!bg-refine-react-dark-code"),"sp-console-header":(0,r.A)("!bg-gray-0 dark:!bg-gray-800","border-b border-solid !border-b-gray-300 dark:!border-b-gray-700","!h-[32px] !min-h-[32px]"),"sp-console-header-actions":(0,r.A)("h-full","!gap-0"),"sp-console-header-button":(0,r.A)("!bg-transparent","!border !border-solid !border-b-0 !border-x-gray-300 dark:!border-x-gray-700","!border-t-2 !border-t-transparent [&[data-active='true']]:!border-t-refine-react-light-link dark:[&[data-active='true']]:!border-t-refine-react-dark-link","h-full","!text-gray-800 dark:!text-gray-100","!rounded-none","-ml-px"),"sp-console-list":(0,r.A)("!bg-refine-react-light-code","dark:!bg-refine-react-dark-code","[&>code]:!bg-transparent"),"sp-tab-button":(0,r.A)("!h-8","!px-2 !pb-2 !pt-1.5","!text-gray-800 dark:!text-gray-100","!border !border-solid !border-b-0 !border-x-gray-300 dark:!border-x-gray-700","-ml-px first:ml-0","!border-t-2 !border-t-transparent [&[data-active='true']]:!border-t-refine-react-light-link dark:[&[data-active='true']]:!border-t-refine-react-dark-link")}},template:T="react-ts",customSetup:B,files:N,previewOnly:C,layout:R,height:O=420,wrapperClassName:S,className:D,showFiles:P=!1,showConsole:L=!1,hidePreview:G=!1}=e,I=m(e,["startRoute","showNavigator","showLineNumbers","showOpenInCodeSandbox","initialPercentage","dependencies","showReadOnly","options","template","customSetup","files","previewOnly","layout","height","wrapperClassName","className","showFiles","showConsole","hidePreview"]);const[Y,W]=o.useState(!1);o.useEffect((()=>{W(!0)}),[]);const{colorMode:j}=(0,s.G)();var H,M;null!=k||(k={}),null!==(H=(g=k).resizablePanels)&&void 0!==H||(g.resizablePanels=!0),null!==(M=(f=k).editorWidthPercentage)&&void 0!==M||(f.editorWidthPercentage=null!=v?v:50);const Q={showTabs:k.showTabs,showLineNumbers:k.showLineNumbers,showInlineErrors:k.showInlineErrors,wrapContent:k.wrapContent,closableTabs:k.closableTabs,initMode:k.initMode,extensions:null===(n=k.codeEditor)||void 0===n?void 0:n.extensions,extensionsKeymap:null===(t=k.codeEditor)||void 0===t?void 0:t.extensionsKeymap,readOnly:k.readOnly,showReadOnly:null!=E?E:k.showReadOnly,additionalLanguages:null===(d=k.codeEditor)||void 0===d?void 0:d.additionalLanguages},F={activeFile:k.activeFile,visibleFiles:k.visibleFiles,recompileMode:k.recompileMode,recompileDelay:k.recompileDelay,autorun:k.autorun,autoReload:k.autoReload,bundlerURL:k.bundlerURL,startRoute:k.startRoute,skipEval:k.skipEval,fileResolver:k.fileResolver,initMode:k.initMode,initModeObserverOptions:k.initModeObserverOptions,externalResources:k.externalResources,logLevel:k.logLevel,classes:k.classes},[U,J]=o.useState(!1),{onHandleMouseDown:Z,horizontalSize:K}=(({initialSize:e=50})=>{const[n,t]=o.useState(e),r=o.useRef(null),a=e=>{if(!r.current)return;const n=r.current.parentElement;if(!n)return;const{left:o,width:a}=n.getBoundingClientRect(),i=(e.clientX-o)/a*100,s=Math.min(Math.max(i,25),75);t(s),n.querySelectorAll(".sp-stack").forEach((e=>{e.style.pointerEvents="none"}))},i=()=>{var e;const n=null===(e=r.current)||void 0===e?void 0:e.parentElement;n&&(n.querySelectorAll(".sp-stack").forEach((e=>{e.style.pointerEvents=""})),r.current=null)};return o.useEffect((()=>(document.body.addEventListener("mousemove",a),document.body.addEventListener("mouseup",i),()=>{document.body.removeEventListener("mousemove",a),document.body.removeEventListener("mouseup",i)})),[]),{horizontalSize:n,onHandleMouseDown:o.useCallback((e=>{r.current=e.target}),[])}})({initialSize:k.editorWidthPercentage}),q=!C&&!(null==R?void 0:R.includes("col"));var V,z,X,_,$;return o.createElement(o.Fragment,null,o.createElement("div",{className:(0,r.A)("pb-6","refine-sandpack-wrapper",S)},o.createElement("div",{className:(0,r.A)("absolute","left-0","right-0","w-full","px-2","md:px-4","xl:px-6","max-w-screen-xl","mx-auto",D)},o.createElement(i.l5,c({key:`${T}-${j}-${Y}`,customSetup:c({dependencies:w},B),files:N,options:u(c({},F),{classes:u(c({},F.classes),{"sp-layout":(0,r.A)(null===(p=F.classes)||void 0===p?void 0:p["sp-layout"],L&&"!rounded-bl-none !rounded-br-none")})}),template:T,theme:"light"===j?u(c({},a.Zw),{colors:u(c({},a.Zw.colors),{accent:"#1D1E30",surface1:"transparent",surface2:"transparent",surface3:"transparent"})}):u(c({},a.hc),{colors:u(c({},a.hc.colors),{surface1:"transparent",surface2:"transparent",surface3:"transparent"})}),className:(0,r.A)("not-prose sandpack-container","max-w-screen-xl","animate-reveal")},I),o.createElement(i.am,{className:(0,r.A)("col"===R&&"!flex-col","col-reverse"===R&&"!flex-col-reverse")},P&&o.createElement(i.Lm,{autoHiddenFiles:!0,style:{height:null!==(V=k.editorHeight)&&void 0!==V?V:O}}),!C&&o.createElement(i.cW,u(c({},Q),{showLineNumbers:A,closableTabs:P,initMode:"lazy",style:u(c({height:null!==(z=k.editorHeight)&&void 0!==z?z:O},(null==R?void 0:R.includes("col"))?{flex:"initial"}:{flexGrow:K,flexShrink:K,flexBasis:0}),{overflow:"hidden"})})),q?o.createElement(l,{onMouseDown:Z,horizontalSize:K}):null,G?null:o.createElement(o.Fragment,null,o.createElement(i.G5,{showOpenInCodeSandbox:x,startRoute:y,showNavigator:null!=b?b:k.showNavigator,showRefreshButton:k.showRefreshButton,style:u(c({display:G?"none":"flex"},(null==R?void 0:R.includes("col"))?{flex:"initial",width:"100%"}:{flexGrow:100-K,flexShrink:100-K,flexBasis:0,width:C?"100%":100-K+"%"}),{gap:0,height:null!==(X=k.editorHeight)&&void 0!==X?X:O})},o.createElement("div",{className:"sp-custom-loading"},o.createElement("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/spinner.gif",className:(0,r.A)("w-12","h-12","rounded-full")}))))),L?o.createElement(i.X2,{style:u(c({height:200},(null==R?void 0:R.includes("col"))?{flex:"initial"}:{flexGrow:K,flexShrink:K,flexBasis:0}),{overflow:"hidden"})}):null)),o.createElement("div",{className:(0,r.A)(""),style:{height:Number(null!==(_=k.editorHeight)&&void 0!==_?_:O)+2}}),o.createElement("div",{className:(0,r.A)((null==R?void 0:R.includes("col"))?"block":"block md:hidden"),style:{height:Number(null!==($=k.editorHeight)&&void 0!==$?$:O)+2}}),o.createElement("div",{className:(0,r.A)(L?"block":"hidden","h-[200px]")})),o.createElement(h,{files:N,dependencies:w}))},h=({files:e,dependencies:n})=>{Object.keys(null!=n?n:{}).map((e=>`${e}@${n[e]}`)).join(", ");const t=Object.keys(null!=e?e:{}).filter((n=>"string"==typeof e[n]||"object"==typeof e[n]&&!0!==e[n].hidden));return o.createElement("section",{className:"hidden max-w-0 max-h-0"},o.createElement("h6",null,"Code Example"),t.map((n=>o.createElement("div",{"data-filename":n,key:n},o.createElement("pre",null,`// file: ${n} \n`,f(e[n]))))))},f=e=>"string"==typeof e?e:"code"in e?e.code:"",y=e=>{const n={hidePreview:!0,showConsole:!1};return o.createElement(g,u(c({},n,e),{template:"react-ts"}))}},80874:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>O,contentTitle:()=>C,default:()=>I,frontMatter:()=>N,metadata:()=>R,toc:()=>S});var r=t(37953),o=t(58860),a=t(68835);const i=()=>r.createElement("div",{className:(0,a.A)("pb-6")},r.createElement("div",{className:(0,a.A)("h-[600px]","mx-auto","max-w-screen-xl","w-full","px-2","md:px-4","xl:px-6","absolute","left-0","right-0")},r.createElement("div",{className:(0,a.A)("border border-gray-200 dark:border-gray-600","relative","overflow-hidden","rounded-xl","landing-xl:rounded-2xl","overflow-hidden","w-full","h-full")},r.createElement("iframe",{title:"MUI Example",className:(0,a.A)("h-full","w-full"),src:"https://cloud2.refine.dev/.refine/preview/JYWwDg9gTgLgBAJQKYEMDGMAkBGANHAbzjSlRiQGEIA7cgDxnwFcBnJAZRhXObYFEAZgKQZelGvXgBfOAKgQQcAOSl0MJQG4AUKEixCxVeQQQI02fMUrUGALQATBQHo0AG2BJamneGjwirEgA4kgwAJL2njDAMACeYgCyKNTxcIHsABYQAO5iAPLUSPhBMQASTABGAELJhVD4yALAhXAycgrKAAKkTYWRAG4u0Ejeun4GACJI-TCmriwACvL9wJH1cFMzc4vJSK6tFh1K3Ui9SANOA7MQ86O++kSNzUgA0hUoUEsQK2sNp89vD4HdpWE5nC4Aa3eUDuen8iH+hQAKhkkCAkCx8KUUCAKkwoABzJBQBKeJhiACCTFmaAUYFcoSKcAoRiZfHsMTEE24KCCUFW+G55AAYh5XPZ8OyYlVqbNqPhMjkZTA5YK9ozlaq4AAZYAsRhwRW5OBIpAMUV7exUXyFWj4JJQCGObLUC3iv5ndjUdBQj5fH7EsQAOTMwCaaG4wBo-tWgZNqPR9m1KFiEGpADUAEySqDyKDWyC28wgro9Z4XEBMYCw8YUFgsGpsdwtEvHSvAJwgbjE4AoVxOOsNlBN541-RBVwQd6uTixBksQ6g9ud7v8vtOCdTvuz+dj+DyanEqrNDnUAmYgxBlArAndpEQZAsNNQNBMgCq1BY1-OFAyySJLAhtETRxhMEBoEw6K0EiMQMti1D2AyUDApYpaIuc0xOKodgHuQMLaGM+j2DyMZrIuaHgphLC6AytikPqe4GFU8jZGwUAmIe6wceQF7cUyeTUgyxaodYah0WmeGMdyjoJBAkQCTAzbnORbZVk4wC0p+thdnhvb9tJEKyfJgnloxuoEhkMBGUgClKfYKmdMuGk0Cw2mrnpTjmZZ1m2aZBH3PAFJgGANTIa2jlqTpPbrkFIUfIxFL9DyYUiRFHZRWu-aJcljFhJpmo0A5y4ZR5eU0AV1CMZwPpFZF7nrtVaAQox943NCtXpfV-ata40ItbEkAElAKBgBksQdSuunrkiA0QENI1jYxRAomiSCkcSKFHGlk3Rf2+pzhiS1wFUEB0PgprmmKEpwFSNJ0kJTLsOqohwKS1BMGE5AgOds3zaN43Diav3Df9OAKlwTVwIDjUQjgm1LnVU2uEdgTCtAihtKlZZ9Jh2EwLYWQQBCtgCOjR1ULQ8iuEh8PKHjBOmMTpNQCAjFvR9X1w+FxVdU47OfWiR1Cry-L2ZjW3LnQDg8rYQ2rN4WiafqcAAPoAFYsHQooMle6KYGgcAALxwAARE4I1gE4MDgE4FQQMASH0t2LBOAArNg2AAAzYGgACcABstjYAA7NggcACwCJHtgABwAMzh5mDhoEIFSZmgKcoBUntYehthgPIasiDATgsC+Qw2lELsW7YznUOpCFmgAdDAmsm9oSuBcFZXUEbcAABQAJRGwAfIQWhwHApAwPivf9xPk8ImoOBNyQZBIHwDJQTA-dKCw-QEko+AEAvi9wHQICuJ+ABcpuWTAYDX04TjZK-TfZHHTfQASTiZp7-+lwPibXAp9F7ZFWDADIt8TaZnDsA0Bk9UTAAsjAaBsD4Fn0nisJA2QTp0GgZ7OAhDYFwHQYvEBmDZAO1cNA6gNAkDANVirJsAhb5MEbuCfAKtmHPlfLfAgTQdY4iQLfdWmttZIF1kgfW+AlJBkghUYkt9XZSCkFoBBcA-jL2wKvVkm9Vq0F3mAbgGQj7j0oZPQRNDTYQVzFEKgk4oAYIsUoKxdEmAMiUNA6Yng5L2GcZQ+w0CEjYE-sHGOvsm6J0zCgcOcA4mEMSbYT+rtwlENcLHeJFI4kJKIXkwhMd+gx1ifE-JeTMxN0zB7OAKTwmuBjvEkpuTEk1Kbqkhpnt6m2HDtk0pLTiFxLDumYpOSyme1sBUqp2BkltLqbHbpAAtBIDSRl9LgNgdZcAOlFKaWU6ZHThkLJNhYk5pyznnMnhQlxbhgBgHcZ47x-RfH2H8Vw5hexWFpA4eWN5T58R8MIIIyRwjREay1g7YFes0CyOePI3ESj1mZlURoweGitEYBXmvbs+jt5GJMWYogVjoG2NILQBx0BGFBNNiEuJxTMykLyRs6ZuT6X0paRshJRyLmaKYSwth3y+i-N4SIwFEKpGgvEWK4RMi4ByIUQi7AMdVFwFRWfVVKrtBSG0IrFy8AxHgqEXrCofczYWytjbO2EKoBOx4m7D23s-aBxDmHbpUcBCxwTknewKcBBpwzgILOOdsZIHzoXYupdy6aUkC7WkjjtJySQA3SIdAW5tw0LIdhGAoy9xVhAMA0QaB9l-CgZomAY79zzSwYeRAhKyuHDACkGcMQsG1KUdgfd2GRHBOm2tSVXBMCQH3StABtT2ABdHtoQ4DAD7tgdN2QMgQoHjOgAPHAStTcGRnkgdW4gur11gCHWAFgw7gATr3Z+eAAhe7GxHTOgA1Os89D7jaZnTWGAeFbD2Gx-coPNBbvSuEba+esSg4AAB9wMHqNr+pQ-7s1Fr7MjYeAAyFDcA+0Dpg3Ad61Nd3T1nl8rt5Z00yA-V+mDxslDoBAywMDkHoM-qo-BwtQGm2gd3a4etwHm2tvbcbTDSB02Cb7te-ugnB6kbgHsNg06BADzzZR5QEZqb0ag4ppjf780IdcBQJDShd0ieNmJ-uTczMfHPMPQ2Y9BOryQ-3Lj+oeP1j4-gMzTcLNVsk3Wpz7GW1to7QK84UmZAEagL3QTpH1HRZ1Ze5kNxoDWQppIPuWLyDJbNDvBeBAZBaEk+ozu8XHFJYkJl9ayFjb9xPpPNAi7xSkpAVIKzY9qsXuVrGxLCbhSWG1OBbcsxhpEj7pOFTnBoAoCJE3Ik4Qvr9xNh1kkCaTb5Zq-uvU7BYj6jREsU4xJPCvgMn3XN2nWPFtLeW4d4CEI5HwHBk7gHnN0a4aPVWTcdK1dJByFAt2VPIy4fS6zqtMzzzPibfuBddtQFcgt2wLBaurVvsRR0g8TYL0HrdmjzazEqzji9nHb3uDw5YGO-LC9CssE219HbwhSWvj7utyn22eh7eoAdj4EI4AAH5TZI4hMc6B7gUHtzJ-u4dIAE34DYFZBNY6O1sGquQEHi8FvWW6woXro2BsTcHQxinW2QDU5Z6+NH2rJ6BEEMIDA-ch4vda5PK7zpN19ZnFrybUuBYgDmyrpb+BxeRBW60fAYuZek9W3FqX5LFuRD7jbwHdu5MDz94OzTJtBeWWW+YzBUvrJzd58t7QZ8ZAycHfHye2eE1zbTzAfPoC1GTy1eoyeYW56gOQNo3R68cVRH7pHkrtBMtN3K8fDRgn+EaLL6Eayt8I8Jaj0UcfcAk9XML78j5-LiOCt5cK-hQLxWqzBRIqRmAKgwsKHCxRUBb7hxUWotFS8MU6LSxvLe3eVroiH5nyhz84CpiYMQZIxAf4Z4g6kCIBCYg6C2C4qIpATc0mdAOI9IIqSeSmqeyC6eXOCIZwb+GITcSQRItAKAcAt8TwyI4BLAuB2uBBBkC+oB6It8yBKeVexy3OJBSA2B5BVQ-ag6xB6E7BTcnBA6Bkq+rgnyna6E103CfyL4IqAiUqdB++kqhq0iJ+sqsK8ql+cA7syKC++AtWDs9gpKKKoC6q+WDesWys+qh+0qhBxspqwU5qlslqjsXGtq7sXsPsAcQcocEcbqHqicycqc6cmc2cucZwoaEARcGAEaaAFchYVcTgqIKAawSazcrcdA7cGarOAGqsLGgGZ21AmAwcX6VaBgtajmDafmfGgWG+wWsqU6RmB6J646k68AM6xsc6cAC6S6-cq6jRm6ngBIO6BghWGmjRp656hW16R6J6D6T676cA96r6768m1uGmsGuRfYj2amjG6x92iGqmqG6GRmxsuGrg+GoQhGYh3aBw5GaxVGmOoGEG6m36uxAGmxfmBmpR3GlRAWAmfYA6wm-xyesg1A4mQJ3mRe8wg6txLxVGv22xdxWmbxum+mhmQJomoJpm5mhIJRgOtmv2Dm3xtGrmcA7mnmg83m5Rj2VRxsVxJGBwoWFx4WGGQJUWMWBW+6pQqAZElWrW+oGkEI40xsMAUAA6jWzWmehWRAS+cA5e0eMgtJbAGWDAPes+fekgoebW8IxEXAbCbEBwipwQoQEQUQMQsQQ8puU8TJLeZ8beD+He2KL+hisUoUx8cAkA1EAG0+0QTU403OJs-Jvp-OpspALhwATyjCkha+RG4hQq-yMhu+IKChBqkK0i32qhZ+6ht8mYSqdemC6KWAj+eiTpO8PU0Ix8UZIh6+sZW+8ZO+chIqlhDZmA6Zcq8KGhmYvsyKJyBZmKxZBiO8MMw+ZyHIpAWaNA0CLEASFi4C9gkC0CXsnsAApNOZQmrKwMBLEBlrQNAgIAyFLJ4K8gvpPH2MgtQB7iwMSlEMSJGe8lWTGZwrWdIfWUoRKimUfq2Woe2bfHHJ7NoWcr2UWZ3iWf3NiLiPiESCSGSBWXeaIUFhITwnWaKq+cmVYXrJ+Zmd+TUv7Mquqj2ffoWQ6eQF3oYkOZ-qcqOcXNmpOTkKuTORAlAqbIuSucvqcuufyQIFuaVjuabHuWaLYIeXRZQqeQSOeV9JeTYteU4sIXBTUQhVIQCrIShU2UoS2afpIlmTUsHP+ecoBURc-gOf3D3BVMOdygttAs0NATEEJRYjQBQO4E1LfLHi1seRYnKUgBaa5SvrytGXSZvpIdvshamW+WhWmepefgiuHHHDpRcr7gmigXnhgXaYRU-iRTvF5NLsZIpD8oQJWbJTWQFUhUpcFahc2RhRpVheHF2TIMPDwe3qlSBQZD5CZJvgQHldWY+YVc+UFXvipamWpRmRVRflftVSql5WNeNfgP3MdsifkYUf3MOoEOsHdsiVsc9oDirB5klFwFACTk8TkXsbpn+KWkUYtWxLdhsWxrRtjgDmPCrBUt6OiCTocQPONZPMlX2cBYZWRaXucpReOdQDRdkDZScreI-Exf7GAOkaxRciJWJWiBJfNlJSDRYuxZuduagpJf3tJT5feX5ecHGd1cVb1QfmVeFZpa7NFbftyuQgdbNcdQUadUtRdYdWtarLjhtZ-I9UgHtWhq9TTbaTYClf2bijNINCDGNKZQLYvJrGPtLYEnqE7LEHLfLZQnQIjXQoUCjTTSwCABZdQEpLYBUCNnzjDfLVIGbTTRbW9RYklGuDxQGZUNEIpEgJmLeXyg+TlV1YpYmfIX1R+eTVhf7H+dTarTyjNTpnNUzedUiTpmzSrHEhteHE3NzSTjbWqunWNdLXpQ1YZdlDtW6WXGgKIpdVHQtczbHaxvHa7Hjq7FtclCTvgH2JjRHadgzfNWdXGCtXHR8Vwv7Hjv7CncIo3bjflZ1YhUTb7Y2aTapeVRFRocHEijVTbXhacqvZQuvYvJvavSYZqtqoVv7dKr7CaubPYdbI4fbM4c7Hau4Y6l4S6pHNHPHP4d6oEf6oGqEc8OEZESXEXU4MYgBLbJOASPnBAPqDGqyKmukemgIJmtkSrKcXqBkFQH2BiK+JgMDq4BkBeFANg8KNQLuuRlgwuAAIQnEeJnEGDN6yrYNSbF5UPWlTx4OgkQnAhwPZp02R3t3+zFGcZTpUk-H8ae19AtEslcHTGjrnq1ptHrLzp1aDo9FwBrobpbqDEZC7ojHfpjFnrpqTE3raMLFzHToLFLEJ6rGwmV0PYfH7WInd2naolwB83HE4YUPnEzzMn432BSYwlKbUbWMMa2OXVbGcZEm8a-FiMAkRPAliYSZ0NQlmO2Pwk2MWN2N5EONEANEmZkk4kSn4n2YCPEltpubYmWaUmhMubhOeMhZWnuMRasmtDmHwCcFzQLBgMwAsjrwx4SmtZSmgJfhPIVRfDHqsXBpUCkD8KyDoy9ZJHNAEiB6gKkAEh6h4SsVRpUysXMwgAK4yHSa5jQALjW315y5IBowsxVZNaWlSlQzUjgT3SMhDMSURjkAEjQCxC3S3PgAPQPMGlpBsDvO0ifOMhVYLMYiBXzbdgvP8gYjOIXON41OEZK7vVC36VpU96shul6jTOngEi3ybNYuzOS7fiDPyDHrT5EuyjRgksXjtXCME1Pk+0NkhXNm+yB3DWkIh137JUosgV4JS2YIAtxEO2bM2Wy0GAcgsBK27n7mMJ8V0ATDABjlek2I3CQTUDHKHMWIoA3MFgPTQIQBCDu2+XwWE0MvKUz39UsuDXz3ZnYAxX5kEXcuGUXQwBujXS-VnzuaLPLPEhzbO0MiMLuuYKkAACOVYpAVKJsKIeoVClo06C4IbYb5wKNTWlti8xIeYt8JDJDrdeR3DC1-c6b+zKqLNq1vdQOeOFSfrPN6OrlqIrgYAxIzrJdh1c1PDw6BbezUOxblj7x11XCHNd1n8VbJbPdfbqsidd1yd6I9Y2ujdrlXYhIzQtC6MfYKNsD1MAA6gxbfCKWKa5WENQGANSMmIoq4A8xMywBkPyNQBCDu6KYOhqycnEA29ApICjVxqe9AjBC7Sjdza+7BAwjJR1V7RPaayVYfXrJa22Wy5mDhXmRvToQ67naLZlq63y5Qp60gEs1tlAF7txdXuhxYgmwq+cF+4uguCBOKHG1aaGyR0eWcim65YWxoVmzm0Wnm+28xwuOjj21dVjlwjXRtXXVGlEHO2cnWw21AE25w23SWgUW2x23mNxyO1XWWyrP3RtYPSJ3aLx-HcHHjsHG9s2rOzW2cgu0s4DabHQizKu6m5YhQ1u3OYxbu-Pmcge0ezACe3sOewYJe9e7e3AC5-M2Zx4tEEpHe3u2ch+3sNAhjb+0mfNvh4a3jca-SwmYy6VapVB1+Wy3HNVQvpvZckhyLd3sllTEhIR2fGszcLfNV64HZzhgl081h6803KsCjaKfOBM8R+G2R9G5R-ZNGz10m8F6ct-hiM2PjOK1nLRIUAwLYEpK5V2lq64DAOmECbfKcZoq5aSmsE5YSldK0BKYi6cly8h93v83czwORWcu5s15C28zcwK181Sw1x62ZgN294vHZUAUSE5SrPgBJrbpnQN1-NQMWsAWCVwW1-YAHhco++ctNnkPdl59Yj0V9N05ndQydzTQgxQ0gyg-OOg8Dmx0dXJ5gG2-d685d4C+QA8yp1Y2OyrA0htTHF-PdheKk72-x6rMfRtZEr0NdEoPCVwl7Hjl7NbmAJj2HVqdOl9BEEbJnZQs+0gPq3L2iCgVOD-ajjL2fNzqT62wtTEGiAz9z6BqLxshtR7DD6b3x+b6rNgLdQ75WxAJwNewSD9vpqLwOw73HEPGnbr4vM2-TeT228b99Lp2p9gBOw78nbMG7wS8pl7w74J3ddgK7P73D-LYVmAAr8bAbxx2ALb-HWHOL4PQKJH0zyHOL4Z-HyKYn8L8nyrIquL+WoPCTgXmHdQ+H3n7+rn140r0d8X1H3z2n5ElWyPc5QPKbMtoV2vZ3-D195PHqMjwBnwKG32PeOt1wU5bkYD+CcD9LZowBnnzJ7m6HwtXv5Xzz-dYQhtX-Db9f-b-dZb3dVUi3K7-X2eJ76pv9k7-dcDnb5Z8LkhWQTHn0H4q81exxWwlr2Lg68w6+vUuhx0EzD8memYH3vdU-gV8uedvJ7EDhj73U4+n-d3j-z+xA5U+5AzPoP0njB8uGF-YdCgKf54D7qGnN-oPTr4kCk+v-IHPp3v5FEgBC-blNQ2gG0t7IATe7L3z+JcEIggghjkvytKNwoA7nakE5WMTDQQAuJMeDj3ORncSuhiZ1mhxu7cp3MagnEJiEH7RdrEJsPTM81eba0LE5nJdlZxXauB7BlCO2r2AdoSQ7IbgzBMx0zbZskB9AxTkWx444D46OZCtmzyp5QBUg4QtTp2QraRJVgYneWhJ0baZZaBsnUtApy47dt4hTPX8njl-J2ZbBsQ1ATfzjiv92aOibAUEzU5xx-+jQozjOyJCpDpaw3KlC5yA6iCTW6XM1ooQtassEUMcODpnTn4b0ehnjPoS+XA7msj82XTCmy1dj5cLkEw7tjS2mFpdZhJNQYQsOGEaFXYS9Aroh10FfVcUZXG4BVyMFnw-2psfUNwFYAo06utXCQOsx26HkEUVWGNlRyayH9zk2PG2mcMdLfVnoBoQNicncyfdM6o+M-ux3oGfcmB2OOOBgJRFNxBMe1BjCbAMIoABABHTOpYOgQK4nhUw1Lt7X6FzC9hR9A4bfC9jhw7WsVYrucO7z8wvobpWEdiOGh4jkuY9EDgpQpG7D3y1Iq1ppS9jVV8AJsCYFyOrzrDKEBZR1rilZEm8DAHIo9sbSQZJtSRclGYT1STIQdpEiwoagqi9iqIJRCwSoO4EvZJtZR9rYEcRRApKiI+GTDbiGSQA-1NRo9YDv5VA4Ci9R8w4UdB2NG2sLapsZAO6P8Q2jJ4No4AZghDGbCyRPonYX6KpGQcaRcAX2KsIsTb1jCJuLQGYQPr+i9YLPU2KfUtjn1bYl9YkDagxA30HUnhZ1D4SfqeoAivqIIgGhCLBpv64aP+gAxrHG05ooDcBk4HOAxAoGGRWBlkQ4Z49qYBPCAKgzhzSJsADmbBvgFwYsB8GhDFYsQzgBkMXGeGBhrUxoYsA4msmIgNQzXH4MLSDJTIgDThFk9S0GfStHw3gAFMwmQjKpnUXgANER0zRT8cY3aJyNuivRFRgMSGJEBNGEjHRrLymK3pj0p6QxtgGfQmNSEyxT9IE1Zr+NnivjUug4ycbolf0pxNxpcXgreMVitjB4nRmSbYSMJ11EJr5kKZCNIsUTDElDwHSsN6GPjTTI31UxUSuJOEg4iqPwkglrc2TSzC9jybUxCS9Et8cUw8w5Mym0kipu+JInXjhB9TNRIVmaYEhWm+oKUPAEqzS9Ze8efpkgGJaVoRm6EMZjs1DbEhYgj4ULvgDxZzjsWo3JvFh29b1BQEdXDZujG2YTM8hGrBUr8xOboxzmmpQrP2O0ltMWAwsI7EEIfELUbJsQ+yatwqHP9-+FSHUumQKGVDihTcLKR3zhZXMtWd0WnmtCpa1cIW1PJ7ld3KmVofmgQGnogUVzx56IYLGIR4BYDTlluoXbfgOiyHn8Epw6SKTpNbjCw0pzAggcnRiFxD6hTPCgSrDropDTOR3S0oCMFpqAFR3ePSRixbTOTZmuLKZvtO-6ylyWKoSlpWjJYDMKW1Aenp6N6HbDdRftQsdIhjhpjYE3ZW0ci3O6GJeWNwvdJXCFbowRW+CMVorS4zK1eK0rRyfuXlaKtqKyrftCADVauTMEJUiADq0ZB6sDWWogqomKenT0Uxr096TfjhZyimRIIlDpdEtCVdF4mHbDnhF9YAcA241ToX1wo6HchuSAWjuG2TYrSTk-gncYEJbbt0M+nHTtspyRF90B6LcADu0IsTpCpOmQu8XNTFkhCu2YQuaTf14F3Va+AHCadjhZ53U2e07L8G0P5kOCLMTgk2NZy7CuCGu67VwI53nKBd72DXZQZ5yzjecKpvnK9s0AC5BcEeyvAaCKhNhvsGuhI02N+39YNc7hYc5mbjPHr8ikxz0omWWjTG-lPpCHfCnaIMpUyXWV0WmZPHpkeS8O-eWgCzIuRsyo55HH4YN3jbczE29HU5IxzOSCzWO8UgomrLyGayaJN-Ufrz1Xj4d5ZlCRWdJwL7k9u5Es-IVrOf5i8rensIeeXINA5S551Q5vjolNkmcGujgyzjbJcFrsHO27V2ZF1OQezUePnIgH539kRcH2O80Lg7GeC3yI5XsqwXF1jlNckuDXFiBJXDiJy+RgVYmsmKFFFi0xUVLOZgjn7yifpO8S4dTDjAQiL0IpGrkgveFnI45M0mHh1w8QYhuujcujuzLrnUdOh6rBruNxYCTcHAeoGbiGjm74xFuI5U4CtzW4uitu38z4RoW+EDcjuL2bQZQlzmosmpD0IuZgju5VTYhQi+5q9xtpQjC5NtH7v+BFTTV9+XBQyTTVB4KLIetmVYDGJORBzTkSPFHq-Kcrh81FQgxhnwvOTTjLRyDOcUT0XHTVO5mAMWTNMkV09XuUs53uLwqS5FOes85gaEnF6fxBepA7HNH3F7hxJeZio-mtnl72RDY1AxeJAPkzh9NeFQbXokr14qzRZRvNkZ4ub4LT0+j-VeQEtYEO92BxAhviLwd46yalVAwPjQOyWTzclyokpWEqNkO82eHAqpU32wADzm+vsTPrIIFo59T+E8oaUX3yV-wK2i8uoX3PSnrz3+3Sk6dxLIEACK2gAwqTL275xKlM-fYZfD17mls0BGA9AbLJdqT9juM-CkuMIOUWJ9FJyFfvdnX5MBN+EAPqUoqv5A848mdY-tmjGVOKxZV-Npf9gIGwJil-im6gtMzB11llHvLgWstg4VseGAg35fujAHxKIBIcqAfhN-QmxYBGAeAarUQEizmlDAoEgbP+y1L7qhnOZccpv6RD7+XSypSsuqX3V+lnZepWHQGnwihpjAkFezTv6DtF5cK0Jf23XlVChlWPRhiIM8bJMT+8S39BiruWUIHlRHDhR7NUEfAzBx3TOgIpAoGDC5-027mZlMEaD5BZ8SOdYPEWxBfBZ8Xecuxs72zB+Hg5IJjXxUtVNRg-ducLJD5DT1ZksgVTjiaEVIZplK9mqiKwH2AR53KMecrPGVdz82Pc8NTjgIEJxShLXcofkrjgLSc1EK+ZcwLjhlKccg9LeebItWLxq53Q+6VsPJEpzCZIC4mSKKwq+xgx4wlev-O9HJyCZTLVSm9ObVst-Y9I+DmvVco8d4x2ox6UAtTmNr05A6hFKkggUZ0c530vQbAreFXCEFrlOOQ8JnhdSGuLw1BTcHYWKD9uRCv4T8qrkWKgRq65kaRTBEiKMOH3ORdLVhEJrnFC1REUGrjjUqf16IoEpiKgycjcR+I6WlauJH7qa1CY7tdOobWhU51gYjQmKIZG6UKZ9owyo6LBiCSd+POaUTyK9F0s61PazLv1X7WIbaR0fU0abClEgblsmdaBWuv7iYa8A2G-qabDVE2KPRE6vGTBqnq9rSNaYj2DfjNEWiNREY+jWhrzksiyQHuLDc6Jw0mxSA4Y-DQ9KI2wb+NR+MjTl2NFwcJRYY4uNaJXrjVdFi8OMbBQI3yVAFfGkjZpsE2exh1Jw7OVvVzH5j90+owoifTNTlinCVYlwjWLcJ1inU3hV1E2Jfo+o-UwRINHnALgRFux5cXsS7EimDjW4TgS0TADHEwN2GhUaxbOPnGvhlxODZhpuIHjbjdxhEg8YRmIYniS88LZkheJYbVMJxt499ZEqfGlF+G5TfzMpLkqiNvxcE38dI1nSASGQy6JRn0VUZgTZeoxO9BMX3QwSDGj6RCfMUWIoSzGFGPiQWoRIpN+JyGRxkcVxV7jKGZ4xhh+LIxkSUmFErbdRPpUcYviikrrX3CYmZNQSsTA4BxPO2+Mkm4g67ZHXSbMTjMmJUSZoKiZ2ZJJr4pSbJPJIKSKiDE6ouIWqZqSuCUWTScA1Gm6hlYBk-4Vcyyl8hVg3zIKYEGFi477AYUy5vuiIBZTKpZQ2IONLjb4szwVOzNbEDCB7SZmZ4BqWwCSApBgWZ8NqUhXBZlDOp05VYJeQ0Q5bL2hPNBh5Ra0LUcdosO6UGoylNwf5WgFNaiIJyTLVl2OKadblMV44nFkS09HkqDULThONqlNcWvL7RqblGONTtSsM6CIVmCKw2XjnLQnQbgqAAhpct4VwBh0z1ViklNiCr9s0ElX6p4BoVUoO5pK0tIbrl146PFQa-pZEh-nyzAp4U-dLGlVYLhjYH1HRIEFJDi4TuU-YdBokDYDcLKzc0edyWJB74TYYQCYDZRV60J1CNlEAM0GdmMVXYnsVNuK0lZQyzQNlOGgLlOCgaFZ1eqABSEFx7yGQ3Is2vorL1XR-2P7VNokTWC17o5gHBfG3uoAd7sy-8HveDJTBSsB9c+s2gvstDEov5C+WVrSJX3j7a978rfe3uPkwru9C+XvRDOP3Q0F8u3YkBQD2DWImt2RX-bh3k1YY-hiC8jCQyB7UMTYtgYXGcnWk6Chan1Sma-mBgLRYgcmm2gK3oQO0wAvgrouQHYDGIAUJsCHL4O+DEg9yOQaBIuheSeBfBkgPIE8igA0Hsg3iGccej1AqbIEeoHUepps3Spg4aY12A5ptoqKB0xmsdXcv0Xz7r9i+mxDapsqr6a9CXGwUztb3P6nOtI4Ogfolaf7+93+k5IJhCAqgvhAPKeDkGiX8t0VQkmXcOhYgpr55afReTNK2WnJEdAJBfGqpAP-7qYuLLLb3BAPfCRMEBj4YeJmks76dczbnJYo2n2kYF-cXPU3G6wTZt4+AU4hKJiPuY6NZyWqvzSsUG6FqM02nUGuqRW8dEWU5w--0d5NwQlzu73kEt10Y8Xs4fGHkpgcP8rIVovAgdHxh7+78l6fcXrCrlnrCTNchs-QoYv33CuAe6lQ-foS4QatDO+4+THDf0nIP9R+ow3RXkMnJy9NiVkPYApCj6q9SRNQ-IWsFHGoYpxzBNvt32IoNjFiLY5DJNiysbKfhgA4EcnGFQQjYBh9tWgiOEYUjSRoUCcyNX-Hb4jAmlnwepb4zBD7mkQ-Oo0K+xh1GqHw6ftL3THxQ0CNQCHoWPnGoAtextABn3UL4h9IZNArcbPiqGJ9U+yclSZWMPHHeTxyhE+FgA0LcWfYNgPob71vHoZP+jhf4cANBGFBawb4SxB4WIKkDZyEE4xpSNpGCQGRw7RIYIqoH0NuKPSSZQMD0G2Cys6tWOWgD2APcEQW+CxEf4wnyOAh6zYibs25ks63KHOoxqNDamiAup6TgaZEBGmTTVKc0xX0tP8Gp1Npl6YUTs2jVIxPKOU3ep3hTAHorpuAO6f1NuyrStIKAMabiVmmcgFp8zYFytNBmMutp5ExRpDoOn8jMhjExogR5jpWKw6UozyF0I2rojx0gkGOlzELwZTapoCmgcMTo7wR3GpOVZoLMhmkT5Gx40usjMoGuzGp7vETtFhul3Mce+wHdMz3IzHmKrVc52sI3wngzackc9pqQ1VJcKOYqMXvQ5JxZ3NGnEsV5otSVjrUfml2AFo8JBaH6vhZ+l6nC1tiP6nYmLT-WiL-1tciW4BslpdiXsszaRccaKffV+82tNaDrfdppKiDetQkn8VIynQyMOiXREbYo2UbHp+i26dRsMX3TTa4JUEvRpBIQlISVtb6NbehJu2UTvtG22arhP23iMCJrjCrR4xUlnaFMF2zCTsWYyba6JMOt8Y9vqbPbWJSAdifE04mwYvtWExi79oEn-GWJWJOSWJLxJAlQdrgKScJYh2kkSmXmHtJ1oQunaDgXhoTA0xR0tM2mRoLpljvJ1wBA9HOjgFkGyCk6ipDl6o3TubM-NA9ZOuLIabTNxTo9BRP3sOi8tBq8c+UnkIVJFxxYKdPIRnQ91p2YtmzSV15k2bZ1zMCdbAAoB5Vamgt+dHU6FqxVWA8r7xoVhaoFaF49Hy29-DNQ9zV15Tlp+1E2NOUD3B6XIKtM+OHuNqkchZ1V1imnrWnXqEj6WpI0aF2kxHb4qVrK5ucs1FUdzs6-2O9LGHkz9V31CGLDBY1EAwat+qDZOrU1LX4NK1os6Qm0ojqz4DG6M-3DFpzQJaWBnayyXtruq7Y9gWINgBlYSAN2SAKk9AjtjigVNta7c0ObTmnXRzOZcc1ddNj16iVkC04beu7OllUOV0AsHgfBFRNyrc1MK4NfyVTSBj46nM8Dd42g3lrGc4MRNRXWbSkjd1v6GNDk3PXPBr1uSB9a+u0Afrf102ADdeQHWeNg5gYWTbOsoiobtNSNszMc0WJrrSN26yjctBo2iw7Il0VBaqtem0zKa03ecoZAj1+zACxa6TZOsZy4OlNyW5JtRa02HrDN11Q7Teus3HJ3136ygn+s3AebOtrtfzcpGC3RzccXMq5QlFxcJb61xG9OcMQOgnQOQV0BCcxtNLS0ON1WzVc23SzNOS88gLQG1tE3oN7twUQbbOvhwKbqKBG9TcY3m3MDltj4EzadvvXPrdt9mw7cshO3Ab8160-rebLg39zV+Kmr7dNgaGHucN5dSbaiOs6XJLBIO1JsMRctFTyprI6bByNmYM8dVDAFtLHvIsJ7UQTIxQy4ROKwrdZrgCmvt3RWd7+Sjpcz01vVsoFptg1RgdBhPWrbzNyu2zZgAc3HbXN520DYzt62Bb2d0c+HAuud2TYyxgO19MLs3XDVctukOjcVs4blbjhuOymqT1Nxd1rANOx7WJuZ3gFn9tu5oRLNn2NrotS+-Tevtl23VFd225Mxruc2TY3N1+4dZBsf2W7ohttQBS7tHGTjvd5zVTYXugnuwhgyE9HcqvQPUz8dui2EqFUO83DzDmAEg6NbUOSbtD1Sq3aWELq0T2Yvu6YX3puaQzgnK82fRvNWpqxD5+1E+fvqNj3Ub5lsRFvbFRawiP5uLTEQS0uBxFnUlwJA3AuZafjOaJxcDhgt-jwdD22kipN7TIX+tqF1okNs6LyNRtOF8ghNoIvgSiLWjGbbozm36M70FF5baY3IzrbXio7LHLxKyf2MBJeE1i+Q33HHbDxplmS-cT4u0Xsnt2mtMZfCZPahJMTcEtVoSYpM5L-F3jnpiUv-bhJql8kuJM0sEkfHJJIHRSSMvwXKmXFsyzKvUmNNmQNqjpt2DsuXqjJfTM6XKHp4gszgVkiZk5KyuoyvWOHHySzD8kGAApVyHKyFLOY5ZNSHZnB6V3RYGBZr2LQ6SzBiOEtrp5026T7JMlmThmvNgc+-Y9vwbXYgmhzYHaAfS2-pgbXA0WF3LAzU2orCnYftePvGYZZoOGVRQnKIzVWpC8k9q1qnYyBAVDvm8C6zvNkwXZ19PihqK4PP9Bst90Mav0vK73JOHJmcvuZduSeZ-VyNrXO4VcyeXle+5RbMoQ+r31wOcWUpxnkJ3VYUVifqK8wRxqGAWN9upK4DUyuhH-2Ctifaauc0WhZs6tjvKtl7zbZtnVyo7IePdD92h7Y9q-Mvmyk-ZN7W+ajODkvtTY4c1ylao33xdLjVbUl0C8nrN3VKVLiGxyxOTKO2H6J1zeeZDOJ0tHZYnR1fVcIGO76DYkLSY+bGv1Wx79DsdFrDRREexAF+x4LprEjj0tLjm8fAycVLivHZRep91vh1-i+tTRYJ-+NkZhOgJY2kCfhY0ZxPIJs2uLPNpSeLbKL6TlYpk4EtCPcnU7xS7tsKdYY2LJT2rb3HKcfauJl2md0iKEvUkGnYlppy9padvbpL672S-pi3c4Dunu25SwDpEkGXcmQz-Jg28h3ySJnul3x4hdUmzOkdll-dN3deZ6SVnLlMPMrGMkbOLpwzEFgzMDCgJNmZzogBc4XhXPTmnuW5yNcPEnd6XO8Hab53A8-PLpp0r55s48Wu2tzMjkF82T-nUuO7kLjh4xphcL44XUQBFyzBBkTMXjX+mVrDJI4A1L9SMlGWqvRmYzyAxLgN7raDeyP+qVH0c5RtDq0fxrRdxl261colz2X8czl4gu5dNzCFArhuUK75kNdxXNbpNdPKOU1PmB8rsYw12Vct1jPUr0ISmqV3Dts1eUstUa-nYmvHVdsw+Zu2PnWu3Otrz2aewdfXznXJ8u+a5Sb0evMs77YxVHITnbqEu-rxu-mck9H5pPGDvpSLcjdRiXNaj2N2nI5oJuHCFY3R-edrGGP03j9TN2FrfqRbP6hQLsYW-i3FvirLsNLRlvmf-vYhvZoD5KU8s8hid+O45rOdWDuW4r7Wdc5+D7gpH89aICAEXolIl7KE5+nE6bHa537CTte2G6myi82yW9qbe48fK728nDD-Jk-eSfpOmwZ91JxeLScn1nlh9s+ys1Mf2OKH1PMc6-fuVv0L5aT6+hLyciO86H2WrJzBBx52OYmVv2JiNniZcgEm19CXEk-idTYUnFNjJzb2sAe+iUGTQuQ79oZdksmkXfgTk7IG5OudnjqLzj6m0+MBGq3HDP41YeyBSmgTzJeI4vCjPS2FTg2SexQ1VMc-g72HjkDAHjOJmVX4X1cXHZ9OZnsg2Zj2rCabtpfpUccMBVTVLOob+fo9wcq5ZF+xgPTyZ6q1L8Z+y-oy8v1LxR9UrK+c7Sjvn5OcXsxn1Q5AHX5ED19ikUz3pjM0b-9M5nTfR14N-1Ut9f2b8aviN+Wb0WQ-F41Z0BH7rbNuSMPreW30kd7MwVkHb9iT+b-9+iHSZ8n9U5r-7ije3WLLxc8uam9rn+PcJlP9I9Qczr4NAfjB67CNs708vZ5iwiGYBzFfvNt5vRxV7TfBbqvfhd83V4scNeQ01j5r7Y9a8OOaxoFmX5W6ANTjO5vDdrS+Ibdw7riAT1i2MQG1oXQnmFhRsBNwvRO+3cWYizMUHfKxh3JF1J8YyouoTzGP21TtdQvc7bPiC75PMU6O0rvP33Fyd8oE3cMW8njPFjg7ugjKJY-u4lq9qQksmBU7O6T-i2x-a4lv045MgztDzDOz7iy5Q6b7ru6Nu1xDICMkh4kxIaSf7jaq2WmOqs5XMTllc5Gg7liB7ak9Zt5YHOQUn5YeWAVnHbBWfqqCThWdAZFYbU+9igCxWsfgizx+ULgL79wk1s86D2B0vQHYsKXr76K+esNmDUuxwvJ52+ogVtYM2e1usgyBNDun5H4CgTJ40eJtlh63WeDo9aK2L1sQ5V2pDg-a12zNg3aAu4nmBwUuqlHoGZeELqcgSisNgA7Q2RgSA7ig8tqvasajZAv78ORpo546uy0loHkeTgf1QuBCjkhoXWwfrTQ+BJgaXbmBz9nfbV21geQ6UOkQVX5wazZLEFGiSGj7aMOYtj+xeBSQSPZm2Snv4E6cPDgmoq2Ajnq6DsJ9pI4pclfuS5oOBQe9J52RhCo6nm8zu5qW87fkm6+a19I+Y9+L5qFoD+ObvV7fmBbr-TlwsUJ15z+hULFA24rWPc5VBPLD-LEgfEOsBtU3vnmayBOgdKgsaXtpmLeB2wYZQlAMAOUDVAtQAgoBm5fnkEaaZwWApYOnLNcG4orBICCfAywLGAHBzwQr6nBesOcEYOudiLZS2Igb3gJoypDAAf4hwXL7HB2gdEFH44IXEFX4Sge4Hn2hlIOCNgewM8DJ+JviiFRBXQapQYhRQe3ZHmjDkYGbg04DuAYghdHEBdcOptbDWIRAD9YVAEIDEBowtAOwDi4ZgIugM6psOjLqsgePdI++qIeSH9UlIdazxI1vrSHfB3eKwRegPoNCCIhwIWb5oh7wTnZZ+6vsqGGImwNcDzAmoUcGBmJwTqFghYCmtaOmuIT8HoQj6mD4kQAIXtxwAWUuVhzY98KSzPwI0MAD1GKABCAho9EOlrBo+UtMDLYFanQjAQGkJGAXSAYBoSBAQEGGCxhAGEPhY8EkMSDlYmZpxDHgCELMzmCHQoVbSEElMt7y0mnqchxykUirAekrcHaqYIaWtAhAMA4rWFkmMvE-hNhSWq2FOO68PWE9WQvp2FAW3YeW5OA18Bt6JK0-oOEth0UqXCuWo4eOEy86ILqRcu5yBGDUAsZljLi+iSmqpyCg-BWEnIGCpP5thYdI2ElibXn2HK4rIE2FtePYd2AXhk8OW7XhR4cOJC+84cK7S0k4WeHPh0-m+H3hi+KEAoA3VmHRrhG4SJ5bhMvDuEtyFapH7S0vikBE60sQKzhbskCBrhxhlnP57y02QB8A76qINQAfgJklaC-cuCuBHy0SYTggAAigOixCLwEgCbYz8oPyj+4QBGwJACyJ5yuASILYAIACyMkDYA6YLYBVAQYHwBoAwADHAXhVbBMySA0CKwRwAXwNrz4AdcPPYKeN1rFA9wxIfeRShZIdX7NkcoZpThIuFK67nIZmsiEWh0oVpEUhYCj-YSaRgXxAXgSISSEmRmkfkHmRZ1jHAMO8tNCG5+fEE6ECyJZLfCZK9oa-jgESYCmASQWYG6RckhJk5QSkRgRFG-AvnD6SCkz8pKGkhrwUIbWhLkUo49CGkalFDBaYjHBuBgfB5GostkKEBqRnyNlGdBZkbKF5RQfhGYh+MvFlEpRlUU5HVRLkccKJKRUSBReRK4WcgngZoPRGB86oNvCKRKgVeA3gd4A+DFhr4G6R863VBQ7AMNYdFK8GTUWn5Whi4mmKtquFI1EOROUSGY6RWFBEgi2awh1EBRY9pmFukxiC7JmwXYUtHbRLwc1FvB6UaOa+wBgQ1GnRO8N1FEAfUaDLVqQ0cx7vR-cFpJo6yzGVE7sK0Y4Eyh6IRtGZRyUTtEPRaUetFnWqJjSG68nUYZSfR7pCYjEorIIwh-RPFEYFAxbTEs7XcdkepHgxvolVFQxSMbVF3RIIWtFYaz0bVH+RaMT8HnRBgJdGMUJsCOFjhPNnjGY0BMajptMOHqTHlR5MfWqPRiMc9EN+tMdqGQxuoVLEoxb0dZFsxRABzHQIP4TzG4xvkQDGEx+oGIEixYMXDGrRcsU9EYOvsAkGE2xkfdHGxlMfLFmxFsYkp1RgDnR43WGMWrFfhpbpBpahloSbGSxZsZcFh0LMSqEqx06I3A-RyZnzEjRSRt16xASfrlTmh1sRDG2xpsZiHrI-8FtGwxicRTEtRVMTJ7pxy9IVEAxbsVjGHGvYfgCRxAMTHHExTIAbG5mRsUnE5xdsanHuEGcd7GmRjcSnFUhacb0GFxysYeAXRJcVzGvhmseXHaxRgTHHCxbcY5ESxDMZl6ewS9BsIJxdMb7GzxzcfPGKxgcUXEhx7sQGRzhI8dJhjxhobArEBrlqDF1xWceLEIxq8V3FewqvpbH2RF8cRq5R1Lp7B3xjsSdF9xJMZjFXRAAFRaxA5FHGMafAJ2y1BfZkvGyxycX7FrxNMZnHLxkCdfHyhXsEzGq0TsfnbZ0RcehB-BZ8RVE2xHcVAk3xnsOGZWRR8f3D4R34IRGKKgEKGAgQQIeAk+x8CftFss9qBvGMiRgWBAQQ28BvrwQiEE8F0J7cTPGMJQYiwmjqNNEHFGh0wCaE7AhQPVzxxVsXAl4JCCaKKhIwiU5r1RWYn0FRuphM356oL0p5raOF9GV7jBqbvWK9+r5lm4fmubpY5f0jEX+bfRnXoVhRocnBtDGwjgBwlRAU2KEBpUVQMzok6imqYAyicAB3D7o8gGYCpYrICYBmA-cI4nPAUAKTghJoYRwpK4GvqiwpGCfBgDWQZ8Sg7wx+onZoQKTpspHBQmSan4NxEsYJo9xY1HEmJJK6LFBwATgCPCDwQAA"}))),r.createElement("div",{className:(0,a.A)("h-[600px]")}));var s=t(88123);function l(){return r.createElement(s.O,{hidePreview:!0,showFiles:!0,files:{"/App.tsx":{code:d.trim()},"/authProvider.ts":{code:c.trim()},"/i18n.ts":{code:u.trim()},"/context/color-mode.tsx":{code:m.trim()},"/components/header.tsx":{code:p.trim()},"/pages/categories/create.tsx":{code:A.trim()},"/pages/categories/edit.tsx":{code:x.trim()},"/pages/categories/list.tsx":{code:v.trim()},"/pages/categories/show.tsx":{code:w.trim()},"/pages/categories/types.ts":{code:E.trim()},"/pages/products/create.tsx":{code:g.trim()},"/pages/products/edit.tsx":{code:h.trim()},"/pages/products/list.tsx":{code:f.trim()},"/pages/products/show.tsx":{code:y.trim()},"/pages/products/types.ts":{code:b.trim()}}})}const d='\nimport { Authenticated, type I18nProvider, Refine } from "@refinedev/core";\nimport dataProvider from "@refinedev/simple-rest";\n\nimport routerProvider, {\n  CatchAllNavigate,\n  NavigateToResource,\n} from "@refinedev/react-router";\nimport { BrowserRouter, Outlet, Route, Routes } from "react-router";\n\nimport CssBaseline from "@mui/material/CssBaseline";\nimport GlobalStyles from "@mui/material/GlobalStyles";\nimport {\n  AuthPage,\n  ErrorComponent,\n  RefineSnackbarProvider,\n  ThemedLayoutV2,\n  useNotificationProvider,\n} from "@refinedev/mui";\n\nimport { useTranslation } from "react-i18next";\n\nimport { authProvider } from "./authProvider";\nimport { Header } from "./components/header";\nimport { ColorModeContextProvider } from "./contexts/color-mode";\n\nimport {\n  CategoryCreate,\n  CategoryEdit,\n  CategoryList,\n  CategoryShow,\n} from "@/pages/categories";\nimport {\n  ProductCreate,\n  ProductEdit,\n  ProductList,\n  ProductShow,\n} from "@/pages/products";\n\nfunction App() {\n  const { t, i18n } = useTranslation();\n\n  const i18nProvider: I18nProvider = {\n    translate: (key, params) => t(key, params).toString(),\n    changeLocale: (lang: string | undefined) => i18n.changeLanguage(lang),\n    getLocale: () => i18n.language,\n  };\n\n  return (\n    <BrowserRouter>\n      <ColorModeContextProvider>\n        <CssBaseline />\n        <GlobalStyles styles={{ html: { WebkitFontSmoothing: "auto" } }} />\n        <RefineSnackbarProvider>\n          <Refine\n            dataProvider={dataProvider("https://api.fake-rest.refine.dev")}\n            notificationProvider={useNotificationProvider}\n            routerProvider={routerProvider}\n            authProvider={authProvider}\n            i18nProvider={i18nProvider}\n            resources={[\n              {\n                name: "products",\n                list: "/products",\n                create: "/products/new",\n                edit: "/products/:id/edit",\n                show: "/products/:id",\n              },\n              {\n                name: "categories",\n                list: "/categories",\n                create: "/categories/new",\n                edit: "/categories/:id/edit",\n                show: "/categories/:id",\n                meta: {\n                  canDelete: true,\n                },\n              },\n            ]}\n          >\n            <Routes>\n              <Route\n                element={\n                  <Authenticated\n                    key="authenticated-inner"\n                    fallback={<CatchAllNavigate to="/login" />}\n                  >\n                    <ThemedLayoutV2 Header={() => <Header sticky />}>\n                      <Outlet />\n                    </ThemedLayoutV2>\n                  </Authenticated>\n                }\n              >\n                <Route\n                  index\n                  element={<NavigateToResource resource="products" />}\n                />\n                <Route path="/products">\n                  <Route index element={<ProductList />} />\n                  <Route path="new" element={<ProductCreate />} />\n                  <Route path=":id" element={<ProductShow />} />\n                  <Route path=":id/edit" element={<ProductEdit />} />\n                </Route>\n                <Route path="/categories">\n                  <Route index element={<CategoryList />} />\n                  <Route path="new" element={<CategoryCreate />} />\n                  <Route path=":id" element={<CategoryShow />} />\n                  <Route path=":id/edit" element={<CategoryEdit />} />\n                </Route>\n                <Route path="*" element={<ErrorComponent />} />\n              </Route>\n              <Route\n                element={\n                  <Authenticated\n                    key="authenticated-outer"\n                    fallback={<Outlet />}\n                  >\n                    <NavigateToResource />\n                  </Authenticated>\n                }\n              >\n                <Route\n                  path="/login"\n                  element={\n                    <AuthPage\n                      type="login"\n                      formProps={{\n                        defaultValues: {\n                          email: "demo@refine.dev",\n                          password: "demodemo",\n                        },\n                      }}\n                    />\n                  }\n                />\n                <Route\n                  path="/register"\n                  element={<AuthPage type="register" />}\n                />\n                <Route\n                  path="/forgot-password"\n                  element={<AuthPage type="forgotPassword" />}\n                />\n                <Route\n                  path="/update-password"\n                  element={<AuthPage type="updatePassword" />}\n                />\n              </Route>\n            </Routes>\n          </Refine>\n        </RefineSnackbarProvider>\n      </ColorModeContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n',c='\nimport type { AuthBindings } from "@refinedev/core";\n\nexport const TOKEN_KEY = "refine-auth";\n\nexport const authProvider: AuthBindings = {\n  login: async ({ username, email, password }) => {\n    if ((username || email) && password) {\n      localStorage.setItem(TOKEN_KEY, username);\n      return {\n        success: true,\n        redirectTo: "/",\n      };\n    }\n\n    return {\n      success: false,\n      error: {\n        name: "LoginError",\n        message: "Invalid username or password",\n      },\n    };\n  },\n  logout: async () => {\n    localStorage.removeItem(TOKEN_KEY);\n    return {\n      success: true,\n      redirectTo: "/login",\n    };\n  },\n  check: async () => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (token) {\n      return {\n        authenticated: true,\n      };\n    }\n\n    return {\n      authenticated: false,\n      redirectTo: "/login",\n    };\n  },\n  getPermissions: async () => null,\n  getIdentity: async () => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    if (token) {\n      return {\n        id: 1,\n        name: "John Doe",\n        avatar: "https://i.pravatar.cc/300",\n      };\n    }\n    return null;\n  },\n  onError: async (error) => {\n    console.error(error);\n    return { error };\n  },\n  forgotPassword: async (params) => {\n    return {\n      success: true,\n      redirectTo: "/update-password",\n      successNotification: {\n        message: "Email has been sent.",\n      },\n    };\n  },\n  updatePassword: async (params) => {\n    return {\n      success: true,\n      redirectTo: "/login",\n      successNotification: {\n        message: "Successfully updated password.",\n      },\n    };\n  },\n};\n',u='\nimport i18n from "i18next";\nimport detector from "i18next-browser-languagedetector";\nimport Backend from "i18next-xhr-backend";\nimport { initReactI18next } from "react-i18next";\n\ni18n\n  .use(Backend)\n  .use(detector)\n  .use(initReactI18next)\n  .init({\n    supportedLngs: ["en", "de"],\n    backend: {\n      loadPath: "/locales/{{lng}}/{{ns}}.json",\n    },\n    ns: ["common"],\n    defaultNS: "common",\n    fallbackLng: ["en", "de"],\n  });\n\nexport default i18n;\n',m='\nimport { ThemeProvider } from "@mui/material/styles";\nimport { RefineThemes } from "@refinedev/mui";\nimport type React from "react";\nimport {\n  type PropsWithChildren,\n  createContext,\n  useEffect,\n  useState,\n} from "react";\n\ntype ColorModeContextType = {\n  mode: string;\n  setMode: () => void;\n};\n\nexport const ColorModeContext = createContext<ColorModeContextType>(\n  {} as ColorModeContextType,\n);\n\nexport const ColorModeContextProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const colorModeFromLocalStorage = localStorage.getItem("colorMode");\n  const isSystemPreferenceDark = window?.matchMedia(\n    "(prefers-color-scheme: dark)",\n  ).matches;\n\n  const systemPreference = isSystemPreferenceDark ? "dark" : "light";\n  const [mode, setMode] = useState(\n    colorModeFromLocalStorage || systemPreference,\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem("colorMode", mode);\n  }, [mode]);\n\n  const setColorMode = () => {\n    if (mode === "light") {\n      setMode("dark");\n    } else {\n      setMode("light");\n    }\n  };\n\n  return (\n    <ColorModeContext.Provider\n      value={{\n        setMode: setColorMode,\n        mode,\n      }}\n    >\n      <ThemeProvider\n        // you can change the theme colors here. example: mode === "light" ? RefineThemes.Magenta : RefineThemes.MagentaDark\n        theme={mode === "light" ? RefineThemes.Blue : RefineThemes.BlueDark}\n      >\n        {children}\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n};\n'.trim(),p='\nimport DarkModeOutlined from "@mui/icons-material/DarkModeOutlined";\nimport LightModeOutlined from "@mui/icons-material/LightModeOutlined";\nimport { FormControl, MenuItem, Select } from "@mui/material";\nimport AppBar from "@mui/material/AppBar";\nimport Avatar from "@mui/material/Avatar";\nimport IconButton from "@mui/material/IconButton";\nimport Stack from "@mui/material/Stack";\nimport Toolbar from "@mui/material/Toolbar";\nimport Typography from "@mui/material/Typography";\nimport { useGetIdentity, useGetLocale, useSetLocale } from "@refinedev/core";\nimport {\n  HamburgerMenu,\n  type RefineThemedLayoutV2HeaderProps,\n} from "@refinedev/mui";\nimport i18n from "i18next";\nimport type React from "react";\nimport { useContext } from "react";\nimport { ColorModeContext } from "../../contexts/color-mode";\n\ntype IUser = {\n  id: number;\n  name: string;\n  avatar: string;\n};\n\nexport const Header: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n  sticky = true,\n}) => {\n  const { mode, setMode } = useContext(ColorModeContext);\n\n  const { data: user } = useGetIdentity<IUser>();\n\n  const changeLanguage = useSetLocale();\n  const locale = useGetLocale();\n  const currentLocale = locale();\n\n  return (\n    <AppBar position={sticky ? "sticky" : "relative"}>\n      <Toolbar>\n        <Stack\n          direction="row"\n          width="100%"\n          justifyContent="flex-end"\n          alignItems="center"\n        >\n          <HamburgerMenu />\n          <Stack\n            direction="row"\n            width="100%"\n            justifyContent="flex-end"\n            alignItems="center"\n          >\n            <FormControl sx={{ minWidth: 64 }}>\n              <Select\n                disableUnderline\n                defaultValue={currentLocale}\n                slotProps={{\n                  input: {\n                    "aria-label": "Without label",\n                  },\n                }}\n                variant="standard"\n                sx={{\n                  color: "inherit",\n                  "& .MuiSvgIcon-root": {\n                    color: "inherit",\n                  },\n                  "& .MuiStack-root > .MuiTypography-root": {\n                    display: {\n                      xs: "none",\n                      sm: "block",\n                    },\n                  },\n                }}\n              >\n                {[...(i18n.languages ?? [])].sort().map((lang: string) => (\n                  <MenuItem\n                    selected={currentLocale === lang}\n                    key={lang}\n                    defaultValue={lang}\n                    onClick={() => {\n                      changeLanguage(lang);\n                    }}\n                    value={lang}\n                  >\n                    <Stack\n                      direction="row"\n                      alignItems="center"\n                      justifyContent="center"\n                    >\n                      <Avatar\n                        sx={{\n                          width: "24px",\n                          height: "24px",\n                          marginRight: "5px",\n                        }}\n                        src={`/images/flags/${lang}.svg`}\n                      />\n                    </Stack>\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <IconButton\n              color="inherit"\n              onClick={() => {\n                setMode();\n              }}\n            >\n              {mode === "dark" ? <LightModeOutlined /> : <DarkModeOutlined />}\n            </IconButton>\n\n            {(user?.avatar || user?.name) && (\n              <Stack\n                direction="row"\n                gap="16px"\n                alignItems="center"\n                justifyContent="center"\n              >\n                {user?.name && (\n                  <Typography\n                    sx={{\n                      display: {\n                        xs: "none",\n                        sm: "inline-block",\n                      },\n                    }}\n                    variant="subtitle2"\n                  >\n                    {user?.name}\n                  </Typography>\n                )}\n                <Avatar src={user?.avatar} alt={user?.name} />\n              </Stack>\n            )}\n          </Stack>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  );\n};\n',g='\nimport { type HttpError, useTranslate } from "@refinedev/core";\nimport { useForm } from "@refinedev/react-hook-form";\nimport { Controller } from "react-hook-form";\n\nimport { Autocomplete, Box, TextField } from "@mui/material";\nimport { Create, useAutocomplete } from "@refinedev/mui";\nimport type { Product } from "./types";\n\nexport const ProductCreate: React.FC = () => {\n  const translate = useTranslate();\n  const {\n    saveButtonProps,\n    refineCore: { formLoading },\n    register,\n    control,\n    formState: { errors },\n  } = useForm<Product, HttpError, Product>();\n\n  const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n    resource: "categories",\n  });\n\n  return (\n    <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("name", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.name}\n          helperText={<>{errors?.name?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="text"\n          label={translate("products.fields.name")}\n          name="name"\n        />\n        <TextField\n          {...register("description", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.description}\n          helperText={<>{errors?.description?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          multiline\n          label={translate("products.fields.description")}\n          name="description"\n        />\n        <TextField\n          {...register("price", {\n            required: translate("form.required"),\n            min: 0.1,\n            valueAsNumber: true,\n          })}\n          error={!!errors?.price}\n          helperText={<>{errors?.price?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="number"\n          label={translate("products.fields.price")}\n          name="price"\n        />\n        <TextField\n          {...register("material", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.material}\n          helperText={<>{errors?.material?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="text"\n          label={translate("products.fields.material")}\n          name="material"\n        />\n        <Controller\n          control={control}\n          name="category"\n          rules={{ required: translate("form.required") }}\n          render={({ field }) => (\n            <Autocomplete\n              {...categoryAutocompleteProps}\n              {...field}\n              onChange={(_, value) => {\n                field.onChange(value);\n              }}\n              getOptionLabel={(item) => {\n                return (\n                  categoryAutocompleteProps?.options?.find(\n                    (p) => p?.id?.toString() === item?.id?.toString(),\n                  )?.title ?? ""\n                );\n              }}\n              isOptionEqualToValue={(option, value) => option?.id === value?.id}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={translate("products.fields.category")}\n                  margin="normal"\n                  variant="outlined"\n                  error={!!errors?.category}\n                  helperText={<>{errors?.category?.message}</>}\n                  required\n                />\n              )}\n            />\n          )}\n        />\n      </Box>\n    </Create>\n  );\n};\n',h='\nimport {\n  type HttpError,\n  useTranslate,\n} from "@refinedev/core";\nimport { useForm } from "@refinedev/react-hook-form";\nimport { Controller } from "react-hook-form";\n\nimport { Autocomplete, Box, TextField } from "@mui/material";\nimport { Edit, useAutocomplete } from "@refinedev/mui";\nimport type { Product } from "./types";\n\nexport const ProductEdit = () => {\n  const translate = useTranslate();\n  const {\n    saveButtonProps,\n    refineCore: { query, formLoading },\n    register,\n    control,\n    formState: { errors },\n  } = useForm<Product, HttpError, Product>();\n\n  const productsData = query?.data?.data;\n\n  const { autocompleteProps: categoryAutocompleteProps } = useAutocomplete({\n    resource: "categories",\n    defaultValue: productsData?.category?.id,\n  });\n\n  return (\n    <Edit isLoading={formLoading} saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("id", { valueAsNumber: true })}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="number"\n          label={translate("products.fields.id")}\n          name="id"\n          disabled\n        />\n        <TextField\n          {...register("name", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.name}\n          helperText={<>{errors?.name?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="text"\n          label={translate("products.fields.name")}\n          name="name"\n        />\n        <TextField\n          {...register("description", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.description}\n          helperText={<>{errors?.description?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          multiline\n          label={translate("products.fields.description")}\n          name="description"\n        />\n        <TextField\n          {...register("price", {\n            required: translate("form.required"),\n            valueAsNumber: true,\n          })}\n          error={!!errors?.price}\n          helperText={<>{errors?.price?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="number"\n          label={translate("products.fields.price")}\n          name="price"\n        />\n        <TextField\n          {...register("material", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.material}\n          helperText={<>{errors?.material?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="text"\n          label={translate("products.fields.material")}\n          name="material"\n        />\n        <Controller\n          control={control}\n          name="category"\n          rules={{ required: translate("form.required") }}\n          defaultValue={productsData?.category ?? null}\n          render={({ field }) => (\n            <Autocomplete\n              {...categoryAutocompleteProps}\n              {...field}\n              onChange={(_, value) => {\n                field.onChange(value);\n              }}\n              getOptionLabel={(item) => {\n                return (\n                  categoryAutocompleteProps?.options?.find(\n                    (p) => p?.id?.toString() === item?.id?.toString(),\n                  )?.title ?? ""\n                );\n              }}\n              isOptionEqualToValue={(option, value) => option?.id === value?.id}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label={translate("products.fields.category")}\n                  margin="normal"\n                  variant="outlined"\n                  error={!!errors?.category?.id}\n                  helperText={errors?.category?.id?.message}\n                  required\n                />\n              )}\n            />\n          )}\n        />\n      </Box>\n    </Edit>\n  );\n};\n',f='\nimport { useMemo } from "react";\n\nimport {\n  useGetLocale,\n  useList,\n  useTranslate,\n} from "@refinedev/core";\n\nimport { DataGrid, type GridColDef } from "@mui/x-data-grid";\nimport {\n  DeleteButton,\n  EditButton,\n  List,\n  NumberField,\n  ShowButton,\n  useDataGrid,\n} from "@refinedev/mui";\n\nexport const ProductList = () => {\n  const { dataGridProps } = useDataGrid();\n\n  const locale = useGetLocale()();\n\n  const translate = useTranslate();\n\n  const { data: categoryData, isLoading: categoryLoading } = useList({\n    resource: "categories",\n    pagination: {\n      mode: "off",\n    },\n  });\n\n  const columns = useMemo<GridColDef[]>(\n    () => [\n      {\n        field: "name",\n        flex: 1,\n        headerName: translate("products.fields.name"),\n        minWidth: 300,\n      },\n      {\n        field: "category",\n        flex: 1,\n        headerName: translate("products.fields.category"),\n        minWidth: 200,\n        valueGetter: ({ row }) => {\n          const value = row?.category;\n          return value;\n        },\n        display: "flex",\n        renderCell: function render({ value }) {\n          return categoryLoading ? (\n            <>{translate("loading")}</>\n          ) : (\n            categoryData?.data?.find((item) => item.id === value?.id)?.title ??\n              null\n          );\n        },\n      },\n      {\n        field: "price",\n        flex: 1,\n        headerName: translate("products.fields.price"),\n        minWidth: 100,\n        maxWidth: 150,\n        display: "flex",\n        renderCell: ({ value }) => {\n          return (\n            <NumberField\n              value={value}\n              locale={locale}\n              options={{ style: "currency", currency: "USD" }}\n            />\n          );\n        },\n      },\n      {\n        field: "actions",\n        headerName: translate("table.actions"),\n        sortable: false,\n        display: "flex",\n        renderCell: function render({ row }) {\n          return (\n            <>\n              <ShowButton hideText recordItemId={row.id} />\n              <EditButton hideText recordItemId={row.id} />\n              <DeleteButton hideText recordItemId={row.id} />\n            </>\n          );\n        },\n        align: "center",\n        headerAlign: "center",\n        minWidth: 80,\n      },\n    ],\n    [categoryLoading, categoryData, locale, translate],\n  );\n\n  return (\n    <List>\n      <DataGrid {...dataGridProps} columns={columns} />\n    </List>\n  );\n};\n',y='\nimport { useOne, useShow, useTranslate } from "@refinedev/core";\n\nimport Skeleton from "@mui/material/Skeleton";\nimport Stack from "@mui/material/Stack";\nimport Typography from "@mui/material/Typography";\n\nimport {\n  NumberField,\n  Show,\n  TextFieldComponent as TextField,\n} from "@refinedev/mui";\nimport type { Product } from "./types";\n\nexport const ProductShow: React.FC = () => {\n  const translate = useTranslate();\n  const {\n    query: { data: productResult, isLoading },\n  } = useShow<Product>();\n\n  const product = productResult?.data;\n\n  const {\n    data: categoryData,\n    isLoading: categoryLoading,\n    isError: categoryError,\n  } = useOne({\n    resource: "categories",\n    id: product?.category?.id,\n    queryOptions: {\n      enabled: !!product?.category?.id,\n    },\n  });\n\n  return (\n    <Show isLoading={isLoading}>\n      <Stack gap={1}>\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.id")}\n        </Typography>\n        {product ? (\n          <NumberField value={product.id} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.name")}\n        </Typography>\n        {product ? (\n          <TextField value={product.name} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.description")}\n        </Typography>\n        {product ? (\n          <TextField value={product.description} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.price")}\n        </Typography>\n        {product ? (\n          <NumberField value={product.price} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.material")}\n        </Typography>\n        {product ? (\n          <TextField value={product.material} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("products.fields.category")}\n        </Typography>\n        {categoryError ? null : categoryLoading ? (\n          <Skeleton height="20px" width="200px" />\n        ) : (\n          <TextField value={categoryData?.data?.title} />\n        )}\n      </Stack>\n    </Show>\n  );\n};\n',b="\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  material: string;\n  category?: {\n    id: string;\n  } | null;\n}\n",A='\nimport { type HttpError, useTranslate } from "@refinedev/core";\nimport { useForm } from "@refinedev/react-hook-form";\n\nimport { Box, TextField } from "@mui/material";\nimport { Create } from "@refinedev/mui";\n\nimport type { Category } from "./types";\n\nexport const CategoryCreate: React.FC = () => {\n  const translate = useTranslate();\n  const {\n    saveButtonProps,\n    refineCore: { formLoading },\n    register,\n    formState: { errors },\n  } = useForm<Category, HttpError, Category>();\n\n  return (\n    <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("title", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.title}\n          helperText={<>{errors?.title?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="text"\n          label={translate("categories.fields.title")}\n          name="title"\n        />\n      </Box>\n    </Create>\n  );\n};\n',x='\nimport { type HttpError, useTranslate } from "@refinedev/core";\nimport { useForm } from "@refinedev/react-hook-form";\n\nimport { Box, TextField } from "@mui/material";\nimport { Edit } from "@refinedev/mui";\n\nimport type { Category } from "./types";\n\nexport const CategoryEdit: React.FC = () => {\n  const translate = useTranslate();\n\n  const {\n    saveButtonProps,\n    register,\n    formState: { errors },\n  } = useForm<Category, HttpError, Category>();\n\n  return (\n    <Edit saveButtonProps={saveButtonProps}>\n      <Box\n        component="form"\n        sx={{ display: "flex", flexDirection: "column" }}\n        autoComplete="off"\n      >\n        <TextField\n          {...register("id", { valueAsNumber: true })}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="number"\n          label={translate("categories.fields.id")}\n          name="id"\n          disabled\n        />\n        <TextField\n          {...register("title", {\n            required: translate("form.required"),\n          })}\n          error={!!errors?.title}\n          helperText={<>{errors?.title?.message}</>}\n          margin="normal"\n          fullWidth\n          slotProps={{\n            inputLabel: {\n              shrink: true,\n            },\n          }}\n          type="text"\n          label={translate("categories.fields.title")}\n          name="title"\n        />\n      </Box>\n    </Edit>\n  );\n};\n',v='\nimport { useMemo } from "react";\n\nimport { useTranslate } from "@refinedev/core";\n\nimport { DataGrid, type GridColDef } from "@mui/x-data-grid";\nimport {\n  DeleteButton,\n  EditButton,\n  List,\n  ShowButton,\n  useDataGrid,\n} from "@refinedev/mui";\n\nexport const CategoryList: React.FC = () => {\n  const translate = useTranslate();\n  const { dataGridProps } = useDataGrid();\n\n  const columns = useMemo<GridColDef[]>(\n    () => [\n      {\n        field: "title",\n        flex: 1,\n        headerName: translate("categories.fields.title"),\n        minWidth: 200,\n      },\n      {\n        field: "actions",\n        headerName: translate("table.actions"),\n        sortable: false,\n        display: "flex",\n        renderCell: function render({ row }) {\n          return (\n            <>\n              <ShowButton hideText recordItemId={row.id} />\n              <EditButton hideText recordItemId={row.id} />\n              <DeleteButton hideText recordItemId={row.id} />\n            </>\n          );\n        },\n        align: "center",\n        headerAlign: "center",\n        minWidth: 80,\n      },\n    ],\n    [translate],\n  );\n\n  return (\n    <List>\n      <DataGrid {...dataGridProps} columns={columns} />\n    </List>\n  );\n};\n',w='\nimport {\n  useShow,\n  useTranslate,\n} from "@refinedev/core";\n\nimport Skeleton from "@mui/material/Skeleton";\nimport Stack from "@mui/material/Stack";\nimport Typography from "@mui/material/Typography";\n\nimport {\n  NumberField,\n  Show,\n  TextFieldComponent as TextField,\n} from "@refinedev/mui";\nimport type { Category } from "./types";\n\nexport const CategoryShow = () => {\n  const translate = useTranslate();\n  const {\n    query: { data: categoryResult, isLoading },\n  } = useShow<Category>();\n\n  const category = categoryResult?.data;\n\n  return (\n    <Show isLoading={isLoading}>\n      <Stack gap={1}>\n        <Typography variant="body1" fontWeight="bold">\n          {translate("categories.fields.id")}\n        </Typography>\n        {category ? (\n          <NumberField value={category?.id ?? ""} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n        <Typography variant="body1" fontWeight="bold">\n          {translate("categories.fields.title")}\n        </Typography>\n        {category ? (\n          <TextField value={category?.title} />\n        ) : (\n          <Skeleton height="20px" width="200px" />\n        )}\n      </Stack>\n    </Show>\n  );\n};\n',E="\nexport interface Category {\n  id: string;\n  title: string;\n}\n";function k(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function T(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function B(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const N={title:"Overview",slug:"/",displayed_sidebar:"mainSidebar"},C=void 0,R={unversionedId:"getting-started/overview",id:"version-4.xx.xx/getting-started/overview",title:"Overview",description:"What is Refine?",source:"@site/versioned_docs/version-4.xx.xx/getting-started/overview.md",sourceDirName:"getting-started",slug:"/",permalink:"/docs/4.xx.xx/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-4.xx.xx/getting-started/overview.md",tags:[],version:"4.xx.xx",lastUpdatedBy:"Alican Erdurmaz",lastUpdatedAt:1755000415,formattedLastUpdatedAt:"Aug 12, 2025",frontMatter:{title:"Overview",slug:"/",displayed_sidebar:"mainSidebar"},sidebar:"mainSidebar",next:{title:"Quick Start Guide",permalink:"/docs/4.xx.xx/getting-started/quickstart"}},O={},S=[{value:"What is Refine?",id:"what-is-refine",level:2},{value:"Why Refine?",id:"why-refine",level:2},{value:"Overview of the Refine structure",id:"overview-of-the-refine-structure",level:2},{value:"Use cases",id:"use-cases",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Community",id:"community",level:2},{value:"Next Steps",id:"next-steps",level:2}],D=(P="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+P+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",e)});var P;const L={toc:S},G="wrapper";function I(e){var{components:n}=e,t=B(e,["components"]);return(0,o.yg)(G,T(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){k(e,n,t[n])}))}return e}({},L,t),{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"what-is-refine"},"What is Refine?"),(0,o.yg)(D,{id:"what-is-refine",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Refine")," is a React meta-framework for CRUD-heavy web applications. It addresses a wide range of enterprise use cases including internal tools, admin panels, dashboards and B2B apps."),(0,o.yg)("p",null,"Refine's core hooks and components streamline the development process by offering industry-standard solutions for crucial aspects of a project, including ",(0,o.yg)("strong",{parentName:"p"},"authentication"),", ",(0,o.yg)("strong",{parentName:"p"},"access control"),", ",(0,o.yg)("strong",{parentName:"p"},"routing"),", ",(0,o.yg)("strong",{parentName:"p"},"networking"),", ",(0,o.yg)("strong",{parentName:"p"},"state management"),", and ",(0,o.yg)("strong",{parentName:"p"},"i18n"),"."),(0,o.yg)("p",null,"Refine's headless architecture enables the building of highly customizable applications by decoupling business logic from UI and routing. This allows integration with:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"Any custom designs or UI frameworks like ",(0,o.yg)("a",{parentName:"p",href:"https://tailwindcss.com/"},"TailwindCSS"),", along with built-in support for ",(0,o.yg)("a",{parentName:"p",href:"https://ant.design/"},"Ant Design"),", ",(0,o.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/getting-started/overview/"},"Material UI"),", ",(0,o.yg)("a",{parentName:"p",href:"https://mantine.dev/"},"Mantine"),", and ",(0,o.yg)("a",{parentName:"p",href:"https://chakra-ui.com/"},"Chakra UI"),".")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"Various platforms, including Next.js, Remix, React Native, Electron, etc., by a simple routing interface without the need for additional setup steps.")))),(0,o.yg)("h2",{id:"why-refine"},"Why Refine?"),(0,o.yg)(D,{id:"why-refine",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"Within the broad spectrum of development approaches, Refine occupies a unique sweet spot between \u201cstarting from scratch\u201d with traditional development method and low-code/no-code solutions. With their respective initial pros at the beginning of development, both of the two extreme approaches may present long-term risks:"),(0,o.yg)("p",null,"Despite offering the ultimate level flexibility, \u201cStarting from scratch\u201d method is likely to cause"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Project delays"),(0,o.yg)("li",{parentName:"ul"},"Technical debt"),(0,o.yg)("li",{parentName:"ul"},"Maintenance problems"),(0,o.yg)("li",{parentName:"ul"},"Lack of development and security best practices"),(0,o.yg)("li",{parentName:"ul"},"A polluted codebase"),(0,o.yg)("li",{parentName:"ul"},"And lack of standardization across teams")),(0,o.yg)("p",null,"Low/no-code solutions address this shortcoming but create a new set of challenges such as"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Vendor lock-in"),(0,o.yg)("li",{parentName:"ul"},"Lack of customization & styling options"),(0,o.yg)("li",{parentName:"ul"},"Poor developer experience"),(0,o.yg)("li",{parentName:"ul"},"And limited support for complex use-cases")),(0,o.yg)("p",null,"Offering the best from both worlds, Refine mitigates all risks of \u201cfrom scratch\u201d development without compromising from flexibility, agility and open technologies.")),(0,o.yg)("h2",{id:"overview-of-the-refine-structure"},"Overview of the Refine structure"),(0,o.yg)(D,{id:"overview-of-the-refine-structure",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)(i,{mdxType:"MUIExample"}),(0,o.yg)("br",null),(0,o.yg)(l,{mdxType:"MUISandpack"})),(0,o.yg)("h2",{id:"use-cases"},"Use cases"),(0,o.yg)(D,{id:"use-cases",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Refine")," shines when it comes to ",(0,o.yg)("em",{parentName:"p"},"data-intensive")," applications like ",(0,o.yg)("em",{parentName:"p"},"admin panels"),", ",(0,o.yg)("em",{parentName:"p"},"dashboards")," and ",(0,o.yg)("em",{parentName:"p"},"internal tools"),"."),(0,o.yg)("a",{href:"https://refine.dev/templates/"},(0,o.yg)("img",{src:"https://refine.ams3.cdn.digitaloceanspaces.com/website/static/img/diagram-3.png",alt:"Refine diagram"}))),(0,o.yg)("h2",{id:"key-features"},"Key Features"),(0,o.yg)(D,{id:"key-features",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Refine Devtools - dive deeper into your app and provide useful insights"),(0,o.yg)("li",{parentName:"ul"},"Connectors for ",(0,o.yg)("strong",{parentName:"li"},"15+ backend services")," including ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/simple-rest"},"REST API"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/graphql"},"GraphQL"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/nestjsx-crud"},"NestJs CRUD"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/airtable"},"Airtable"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/strapi"},"Strapi"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/strapi-v4"},"Strapi v4"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/supabase"},"Supabase"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/hasura"},"Hasura"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/appwrite"},"Appwrite"),", ",(0,o.yg)("a",{parentName:"li",href:"https://firebase.google.com/"},"Firebase"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/tree/main/packages/nestjs-query"},"Nestjs-Query")," and ",(0,o.yg)("a",{parentName:"li",href:"https://directus.io/"},"Directus"),"."),(0,o.yg)("li",{parentName:"ul"},"SSR support with Next.js & Remix and Advanced routing with any router library of your choice"),(0,o.yg)("li",{parentName:"ul"},"Auto-generation of CRUD UIs based on your API data structure"),(0,o.yg)("li",{parentName:"ul"},"Perfect state management & mutations with React Query"),(0,o.yg)("li",{parentName:"ul"},"Providers for seamless authentication and access control flows"),(0,o.yg)("li",{parentName:"ul"},"Out-of-the-box support for live / real-time applications"),(0,o.yg)("li",{parentName:"ul"},"Easy audit logs & document versioning"))),(0,o.yg)("h2",{id:"community"},"Community"),(0,o.yg)(D,{id:"community",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Refine")," has a very friendly community and we are always happy to help you get started:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://s.refine.dev/enterprise"},"\ud83c\udf1f Apply for the Priority support program!")," You can apply to priority support program and receive assistance from the Refine ",(0,o.yg)("strong",{parentName:"li"},"core")," team in your ",(0,o.yg)("strong",{parentName:"li"},"private")," channel."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://discord.gg/refine"},"Join the Discord community!")," It is the easiest way to get help and ask questions to the community."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/refinedev/refine/discussions"},"Join the GitHub Discussions")," to ask anything about the Refine project or give feedback; we would love to hear your thoughts!"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/docs/guides-concepts/contributing/"},"Learn how to contribute to the Refine!")))),(0,o.yg)("h2",{id:"next-steps"},"Next Steps"),(0,o.yg)(D,{id:"next-steps",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,o.yg)("p",null,"\ud83d\udc49 Continue with the ",(0,o.yg)("a",{parentName:"p",href:"/docs/getting-started/quickstart/"},"Quickstart guide")," to setup and run your first ",(0,o.yg)("strong",{parentName:"p"},"Refine")," project."),(0,o.yg)("p",null,"\ud83d\udc49 Jump directly to the ",(0,o.yg)("a",{parentName:"p",href:"/tutorial"},"Tutorial")," to learn Refine by building a full-blown CRUD application.")))}I.isMDXComponent=!0}}]);