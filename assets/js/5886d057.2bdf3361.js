"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[70910],{58860:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>f});var r=t(37953);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=l(t),d=o,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},79332:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>g,frontMatter:()=>c,metadata:()=>l,toc:()=>u});t(37953);var r=t(58860);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const c={id:"mui-custom-layout",title:"Layout",swizzle:!0},p=void 0,l={unversionedId:"api-reference/mui/customization/mui-custom-layout",id:"version-3.xx.xx/api-reference/mui/customization/mui-custom-layout",title:"Layout",description:"You can create custom layouts using ` and ` components.",source:"@site/versioned_docs/version-3.xx.xx/api-reference/mui/customization/layout.md",sourceDirName:"api-reference/mui/customization",slug:"/api-reference/mui/customization/mui-custom-layout",permalink:"/docs/3.xx.xx/api-reference/mui/customization/mui-custom-layout",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-3.xx.xx/api-reference/mui/customization/layout.md",tags:[],version:"3.xx.xx",lastUpdatedBy:"Refine Community Bot",lastUpdatedAt:1709799171,formattedLastUpdatedAt:"Mar 7, 2024",frontMatter:{id:"mui-custom-layout",title:"Layout",swizzle:!0},sidebar:"someSidebar",previous:{title:"Theme",permalink:"/docs/3.xx.xx/api-reference/mui/customization/mui-custom-theme"},next:{title:"Sider",permalink:"/docs/3.xx.xx/api-reference/mui/customization/mui-custom-sider"}},s={},u=[{value:"Creating a Custom Layout",id:"creating-a-custom-layout",level:2}],m=(d="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.yg)("div",e)});var d;const f={toc:u},y="wrapper";function g(e){var{components:n}=e,t=i(e,["components"]);return(0,r.yg)(y,a(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){o(e,n,t[n])}))}return e}({},f,t),{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"You can create custom layouts using ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/components/refine-config"},(0,r.yg)("inlineCode",{parentName:"a"},"<Refine>"))," and ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/components/layout-wrapper"},(0,r.yg)("inlineCode",{parentName:"a"},"<LayoutWrapper>"))," components."),(0,r.yg)("p",null,"Both of these components can accept the listed props for customization. ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/components/refine-config"},(0,r.yg)("inlineCode",{parentName:"a"},"<Refine>"))," being for global customization and the ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/components/layout-wrapper"},(0,r.yg)("inlineCode",{parentName:"a"},"<LayoutWrapper>"))," being for local."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/core/components/refine-config#layout"},(0,r.yg)("inlineCode",{parentName:"a"},"Layout"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/core/components/refine-config#sider"},(0,r.yg)("inlineCode",{parentName:"a"},"Sider"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/core/components/refine-config#footer"},(0,r.yg)("inlineCode",{parentName:"a"},"Footer"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/core/components/refine-config#header"},(0,r.yg)("inlineCode",{parentName:"a"},"Header"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/core/components/refine-config#offlayoutarea"},(0,r.yg)("inlineCode",{parentName:"a"},"OffLayoutArea"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/docs/3.xx.xx/api-reference/core/components/refine-config#title"},(0,r.yg)("inlineCode",{parentName:"a"},"Title")))),(0,r.yg)("admonition",{title:"Swizzle",type:"info-tip"},(0,r.yg)("p",{parentName:"admonition"},"You can swizzle this component to customize it with the ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/packages/documentation/cli"},(0,r.yg)("strong",{parentName:"a"},"refine CLI")))),(0,r.yg)("h2",{id:"creating-a-custom-layout"},"Creating a Custom Layout"),(0,r.yg)(m,{id:"creating-a-custom-layout",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,r.yg)("p",null,"Let's start with creating a ",(0,r.yg)("inlineCode",{parentName:"p"},"<CustomLayout/>")," component using ",(0,r.yg)("inlineCode",{parentName:"p"},"LayoutProps")," from ",(0,r.yg)("inlineCode",{parentName:"p"},"@pankod/refine-core")," with the following code:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/components/layout.tsx"',title:'"src/components/layout.tsx"'},'import React from "react";\nimport { LayoutProps } from "@pankod/refine-core";\n// highlight-next-line\nimport {\n  Sider as DefaultSider,\n  Header as DefaultHeader,\n  Box,\n} from "@pankod/refine-mui";\n\nexport const CustomLayout: React.FC<LayoutProps> = ({\n  Sider,\n  Header,\n  Footer,\n  OffLayoutArea,\n  children,\n}) => {\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n\n  return (\n    <Box display="flex" flexDirection="row">\n      <SiderToRender />\n      <Box\n        sx={{\n          display: "flex",\n          flexDirection: "column",\n          flex: 1,\n          minHeight: "100vh",\n        }}\n      >\n        <HeaderToRender />\n        <Box\n          component="main"\n          sx={{\n            p: { xs: 1, md: 2, lg: 3 },\n            flexGrow: 1,\n            bgcolor: "background.default",\n          }}\n        >\n          {children}\n        </Box>\n        {Footer && <Footer />}\n      </Box>\n      {OffLayoutArea && <OffLayoutArea />}\n    </Box>\n  );\n};\n')),(0,r.yg)("p",null,"We can now pass ",(0,r.yg)("inlineCode",{parentName:"p"},"CustomLayout")," as ",(0,r.yg)("inlineCode",{parentName:"p"},"Layout")," prop to ",(0,r.yg)("inlineCode",{parentName:"p"},"<Refine/>"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},'import { Refine } from "@pankod/refine-core";\nimport { ReadyPage } from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport { PostList } from "pages/posts";\n// highlight-next-line\nimport { CustomLayout } from "components";\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      dataProvider={dataProvider(API_URL)}\n      // highlight-start\n      Layout={CustomLayout}\n      // highlight-end\n      ReadyPage={ReadyPage}\n      // ...\n    />\n  );\n};\n\nexport default App;\n')),(0,r.yg)("p",null,"After this, ",(0,r.yg)("inlineCode",{parentName:"p"},"<Refine/>")," will use the ",(0,r.yg)("inlineCode",{parentName:"p"},"CustomLayout")," instead of it's default ",(0,r.yg)("inlineCode",{parentName:"p"},"Layout")," component."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live previewOnly disableScroll",live:!0,previewOnly:!0,disableScroll:!0},'import React from "react";\nimport { Refine, LayoutProps } from "@pankod/refine-core";\nimport {\n  ReadyPage,\n  Sider as DefaultSider,\n  Header as DefaultHeader,\n  Box,\n} from "@pankod/refine-mui";\nimport routerProvider from "@pankod/refine-react-router-v6";\nimport dataProvider from "@pankod/refine-simple-rest";\n\nimport {\n  useDataGrid,\n  DataGrid,\n  GridColumns,\n  List,\n  TextField,\n} from "@pankod/refine-mui";\n\nconst columns: GridColumns = [\n  { field: "id", headerName: "ID", type: "number" },\n  {\n    field: "title",\n    headerName: "Title",\n    minWidth: 100,\n    flex: 1,\n  },\n  {\n    field: "slug",\n    headerName: "Slug",\n    minWidth: 100,\n    flex: 1,\n  },\n];\n\nconst PostsList: React.FC = () => {\n  const { dataGridProps } = useDataGrid<IPost>();\n\n  return (\n    <List>\n      <DataGrid {...dataGridProps} columns={columns} autoHeight />\n    </List>\n  );\n};\n\ninterface IPost {\n  id: number;\n  title: string;\n}\n\nconst Wrapper = ({ children }) => {\n  return (\n    <RefineMui.ThemeProvider theme={RefineMui.LightTheme}>\n      <RefineMui.CssBaseline />\n      <RefineMui.GlobalStyles\n        styles={{ html: { WebkitFontSmoothing: "auto" } }}\n      />\n      {children}\n    </RefineMui.ThemeProvider>\n  );\n};\n\nconst CustomLayout: React.FC<LayoutProps> = ({\n  Sider,\n  Header,\n  Footer,\n  OffLayoutArea,\n  children,\n}) => {\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n\n  return (\n    <Box display="flex" flexDirection="row">\n      <SiderToRender />\n      <Box\n        sx={{\n          display: "flex",\n          flexDirection: "column",\n          flex: 1,\n          minHeight: "100vh",\n        }}\n      >\n        <HeaderToRender />\n        <Box\n          component="main"\n          sx={{\n            p: { xs: 1, md: 2, lg: 3 },\n            flexGrow: 1,\n            bgcolor: "background.default",\n          }}\n        >\n          {children}\n        </Box>\n        {Footer && <Footer />}\n      </Box>\n      {OffLayoutArea && <OffLayoutArea />}\n    </Box>\n  );\n};\n\nconst API_URL = "https://api.fake-rest.refine.dev";\n\nconst App: React.FC = () => {\n  return (\n    <Refine\n      routerProvider={routerProvider}\n      dataProvider={dataProvider(API_URL)}\n      Layout={CustomLayout}\n      ReadyPage={ReadyPage}\n      resources={[\n        {\n          name: "posts",\n          list: PostsList,\n        },\n      ]}\n    />\n  );\n};\n\nrender(\n  <Wrapper>\n    <App />\n  </Wrapper>,\n);\n')),(0,r.yg)("admonition",{type:"info"},(0,r.yg)("p",{parentName:"admonition"},"This example demonstrated how to configure a global layout. To learn how to use global layout in custom pages and make local modifications per page, ",(0,r.yg)("a",{parentName:"p",href:"/docs/3.xx.xx/api-reference/core/components/layout-wrapper"},"refer to the ",(0,r.yg)("inlineCode",{parentName:"a"},"<LayoutWrapper>")," docs. ","\u2192")))))}g.isMDXComponent=!0}}]);