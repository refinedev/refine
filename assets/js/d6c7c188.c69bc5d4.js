"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8799],{58860:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>b});var n=r(37953);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),d=o,b=l["".concat(c,".").concat(d)]||l[d]||m[d]||a;return r?n.createElement(b,i(i({ref:t},u),{},{components:r})):n.createElement(b,i({ref:t},u))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},57549:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>l});r(37953);var n=r(58860);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const s={title:"Breadcrumb",swizzle:!0},c=void 0,p={unversionedId:"ui-integrations/material-ui/components/breadcrumb/index",id:"version-4.xx.xx/ui-integrations/material-ui/components/breadcrumb/index",title:"Breadcrumb",description:"A breadcrumb displays the current location within a hierarchy. It allows going back to states higher up in the hierarchy. ` component built with Material UI Breadcrumb components using the useBreadcrumb` hook.",source:"@site/versioned_docs/version-4.xx.xx/ui-integrations/material-ui/components/breadcrumb/index.md",sourceDirName:"ui-integrations/material-ui/components/breadcrumb",slug:"/ui-integrations/material-ui/components/breadcrumb/",permalink:"/docs/4.xx.xx/ui-integrations/material-ui/components/breadcrumb/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/versioned_docs/version-4.xx.xx/ui-integrations/material-ui/components/breadcrumb/index.md",tags:[],version:"4.xx.xx",lastUpdatedBy:"Alican Erdurmaz",lastUpdatedAt:1755000415,formattedLastUpdatedAt:"Aug 12, 2025",frontMatter:{title:"Breadcrumb",swizzle:!0},sidebar:"mainSidebar",previous:{title:"<AuthPage />",permalink:"/docs/4.xx.xx/ui-integrations/material-ui/components/auth-page/"},next:{title:"<AutoSaveIndicator />",permalink:"/docs/4.xx.xx/ui-integrations/material-ui/components/auto-save-indicator/"}},u={},l=[{value:"Properties",id:"properties",level:2},{value:"breadcrumbProps",id:"breadcrumbprops",level:3},{value:"showHome",id:"showhome",level:3},{value:"meta",id:"meta",level:3},{value:"hideIcons",id:"hideicons",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Properties",id:"properties-1",level:3}],m=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.yg)("div",t)},d=m("DocThumbsUpDownFeedbackWidget"),b=m("PropsTable"),h={toc:l},g="wrapper";function y(e){var{components:t}=e,r=i(e,["components"]);return(0,n.yg)(g,a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},h,r),{components:t,mdxType:"MDXLayout"}),(0,n.yg)("p",null,"A breadcrumb displays the current location within a hierarchy. It allows going back to states higher up in the hierarchy. ",(0,n.yg)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component built with Material UI ",(0,n.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/react-breadcrumbs/#main-content"},"Breadcrumb")," components using the ",(0,n.yg)("a",{parentName:"p",href:"/docs/core/hooks/utilities/use-breadcrumb"},(0,n.yg)("inlineCode",{parentName:"a"},"useBreadcrumb"))," hook."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-tsx",metastring:"live disableScroll previewHeight=280px url=http://localhost:3000/posts/show/123",live:!0,disableScroll:!0,previewHeight:"280px",url:"http://localhost:3000/posts/show/123"},'setInitialRoutes(["/posts/show/123"]);\n\n// visible-block-start\nimport { Show, Breadcrumb } from "@refinedev/mui";\n\nconst PostShow: React.FC = () => {\n  return (\n    <Show\n      // highlight-next-line\n      breadcrumb={<Breadcrumb showHome={false} />}\n    >\n      <p>Content of your show page...</p>\n    </Show>\n  );\n};\n// visible-block-end\n\nconst PostList = () => {\n  return (\n    <RefineMui.List>\n      <p>Content of your list page...</p>\n    </RefineMui.List>\n  );\n};\n\nrender(\n  <ReactRouter.BrowserRouter>\n    <RefineMuiDemo\n      resources={[\n        {\n          name: "posts",\n          list: "/posts",\n          show: "/posts/show/:id",\n        },\n      ]}\n    >\n      <ReactRouter.Routes>\n        <ReactRouter.Route\n          path="/posts"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route index element={<PostList />} />\n        </ReactRouter.Route>\n        <ReactRouter.Route\n          path="/posts/show/:id"\n          element={\n            <div style={{ padding: 16 }}>\n              <ReactRouter.Outlet />\n            </div>\n          }\n        >\n          <ReactRouter.Route index element={<PostShow />} />\n        </ReactRouter.Route>\n      </ReactRouter.Routes>\n    </RefineMuiDemo>\n  </ReactRouter.BrowserRouter>,\n);\n')),(0,n.yg)("admonition",{title:"Good to know",type:"simple"},(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"You can swizzle this component with the ",(0,n.yg)("a",{parentName:"p",href:"/docs/packages/list-of-packages"},(0,n.yg)("strong",{parentName:"a"},"Refine CLI"))," to customize it.")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"In earlier versions of Refine, ",(0,n.yg)("inlineCode",{parentName:"p"},"<Refine>")," component had accepted ",(0,n.yg)("inlineCode",{parentName:"p"},"DashboardPage")," which could be used to add an index page to your app. With the changes in ",(0,n.yg)("inlineCode",{parentName:"p"},"routerProvider")," API of Refine, ",(0,n.yg)("inlineCode",{parentName:"p"},"DashboardPage")," is deprecated. You can now define an index route yourself manually by your router package.")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"In earlier versions, the home icon in the ",(0,n.yg)("inlineCode",{parentName:"p"},"Breadcrumb")," was created by the ",(0,n.yg)("inlineCode",{parentName:"p"},"DashboardPage"),", now it is rendered if you define a an action route as ",(0,n.yg)("inlineCode",{parentName:"p"},"/")," in any one of your resources. It will be rendered with the home icon regardless of the current route. You can also hide the home icon by setting ",(0,n.yg)("inlineCode",{parentName:"p"},"showHome")," to ",(0,n.yg)("inlineCode",{parentName:"p"},"false"),".")))),(0,n.yg)("h2",{id:"properties"},"Properties"),(0,n.yg)("h3",{id:"breadcrumbprops"},"breadcrumbProps"),(0,n.yg)(d,{id:"breadcrumbprops",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component uses the Material UI's ",(0,n.yg)("a",{parentName:"p",href:"https://mui.com/material-ui/react-breadcrumbs/#main-content"},"Breadcrumb")," component so it can be configured with the ",(0,n.yg)("inlineCode",{parentName:"p"},"breadcrumbProps")," property."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/mui";\n\nexport const PostList: React.FC = () => {\n  return (\n    <List breadcrumb={<Breadcrumb breadcrumbProps={{ separator: "-" }} />}>\n      ...\n    </List>\n  );\n};\n'))),(0,n.yg)("h3",{id:"showhome"},"showHome"),(0,n.yg)(d,{id:"showhome",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,n.yg)("p",null,"If you have a page with route ",(0,n.yg)("inlineCode",{parentName:"p"},"/"),", it will be used as the root of the hierarchy and shown in the ",(0,n.yg)("inlineCode",{parentName:"p"},"Breadcrumb")," with a home icon. To hide the root item, set ",(0,n.yg)("inlineCode",{parentName:"p"},"showHome")," to ",(0,n.yg)("inlineCode",{parentName:"p"},"false.")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/antd";\n\nexport const PostList: React.FC = () => {\n  return (\n    <List\n      // highlight-next-line\n      breadcrumb={<Breadcrumb showHome={true} />}\n    >\n      ...\n    </List>\n  );\n};\n'))),(0,n.yg)("h3",{id:"meta"},"meta"),(0,n.yg)(d,{id:"meta",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,n.yg)("p",null,"If your routes has additional parameters in their paths, you can pass the ",(0,n.yg)("inlineCode",{parentName:"p"},"meta")," property to the ",(0,n.yg)("inlineCode",{parentName:"p"},"<Breadcrumb>")," component to use them while creating the paths and filling the parameters in the paths. By default, existing URL parameters are used. You can use ",(0,n.yg)("inlineCode",{parentName:"p"},"meta")," to override them or add new ones."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/mui";\n\nexport const PostList: React.FC = () => {\n  return (\n    <List\n      // highlight-next-line\n      breadcrumb={<Breadcrumb meta={{ authorId: "123" }} />}\n    >\n      ...\n    </List>\n  );\n};\n'))),(0,n.yg)("h3",{id:"hideicons"},"hideIcons"),(0,n.yg)(d,{id:"hideicons",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,n.yg)("p",null,"If you don't want to show the resource icons on the breadcrumb, you can set ",(0,n.yg)("inlineCode",{parentName:"p"},"hideIcons")," to ",(0,n.yg)("inlineCode",{parentName:"p"},"true"),"."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-tsx"},'import { List, Breadcrumb } from "@refinedev/mui";\n\nexport const PostList: React.FC = () => {\n    return (\n        <List breadcrumb={<Breadcrumb hideIcons />}>...</List>;\n    );\n};\n'))),(0,n.yg)("h2",{id:"api-reference"},"API Reference"),(0,n.yg)("h3",{id:"properties-1"},"Properties"),(0,n.yg)(d,{id:"properties-1",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,n.yg)(b,{module:"@refinedev/mui/Breadcrumb","breadcrumbProps-type":"[BreadcrumbProps](https://mui.com/material-ui/react-breadcrumbs/#main-content)","breadcrumbProps-description":"Passes properties for [`<Breadcrumb>`](https://mui.com/material-ui/react-breadcrumbs/#api)",mdxType:"PropsTable"})))}y.isMDXComponent=!0}}]);