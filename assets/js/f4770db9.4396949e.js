"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[57584],{58860:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(37953);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(t),u=r,m=c["".concat(d,".").concat(u)]||c[u]||g[u]||i;return t?a.createElement(m,o(o({ref:n},p),{},{components:t})):a.createElement(m,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},83338:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});t(37953);var a=t(58860);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const l={title:"Show",source:"https://github.com/refinedev/refine/tree/main/packages/refine-ui/registry/new-york/refine-ui/views/show-view.tsx"},d=void 0,s={unversionedId:"ui-integrations/shadcn/components/basic-views/show/index",id:"ui-integrations/shadcn/components/basic-views/show/index",title:"Show",description:"`` provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.",source:"@site/docs/ui-integrations/shadcn/components/basic-views/show/index.md",sourceDirName:"ui-integrations/shadcn/components/basic-views/show",slug:"/ui-integrations/shadcn/components/basic-views/show/",permalink:"/docs/ui-integrations/shadcn/components/basic-views/show/",draft:!1,editUrl:"https://github.com/refinedev/refine/tree/main/documentation/docs/ui-integrations/shadcn/components/basic-views/show/index.md",tags:[],version:"current",lastUpdatedBy:"\xd6zg\xfcr Ak\xe7a",lastUpdatedAt:1758111044,formattedLastUpdatedAt:"Sep 17, 2025",frontMatter:{title:"Show",source:"https://github.com/refinedev/refine/tree/main/packages/refine-ui/registry/new-york/refine-ui/views/show-view.tsx"},sidebar:"mainSidebar",previous:{title:"List",permalink:"/docs/ui-integrations/shadcn/components/basic-views/list/"},next:{title:"<SignInForm />",permalink:"/docs/ui-integrations/shadcn/components/sign-in-form/"}},p={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"ShowView Properties",id:"showview-properties",level:3},{value:"ShowViewHeader Properties",id:"showviewheader-properties",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Custom Title",id:"custom-title",level:3},{value:"Hide Breadcrumb",id:"hide-breadcrumb",level:3},{value:"Custom CSS Classes",id:"custom-css-classes",level:3},{value:"With Data Loading",id:"with-data-loading",level:3},{value:"Display Field Components",id:"display-field-components",level:3}],g=(u="DocThumbsUpDownFeedbackWidget",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.yg)("div",e)});var u;const m={toc:c},y="wrapper";function h(e){var{components:n}=e,t=o(e,["components"]);return(0,a.yg)(y,i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){r(e,n,t[n])}))}return e}({},m,t),{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"<ShowView />")," provides us a layout to display the page. It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page."),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"ShowView")," component is designed for displaying detailed information about a single record with automatic navigation, resource integration, breadcrumb navigation, and action buttons."),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)(g,{id:"installation",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npx shadcn@latest add https://ui.refine.dev/r/views.json\n")),(0,a.yg)("p",null,"This will install all view components including ",(0,a.yg)("inlineCode",{parentName:"p"},"ShowView"),".")),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)(g,{id:"usage",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import {\n  ShowView,\n  ShowViewHeader,\n} from "@/components/refine-ui/views/show-view";\nimport { LoadingOverlay } from "@/components/refine-ui/layout/loading-overlay";\n\nexport default function PostShowPage() {\n  const isLoading = false; // or true, based on your data fetching state\n  const error = null; // or object, based on your data fetching state\n\n  if (error) {\n    return (\n      <ShowView>\n        <ShowViewHeader />\n        {/* Error content */}\n      </ShowView>\n    );\n  }\n\n  return (\n    <ShowView>\n      <ShowViewHeader />\n      <LoadingOverlay loading={isLoading}>\n        {/* Record content (e.g., Record details) */}\n      </LoadingOverlay>\n    </ShowView>\n  );\n}\n'))),(0,a.yg)("h2",{id:"features"},"Features"),(0,a.yg)(g,{id:"features",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Automatic Navigation"),": Back button and List button functionality"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Resource Integration"),": Automatic resource detection and title generation"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Breadcrumb Navigation"),": Built-in breadcrumb component"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Action Buttons"),": Includes ",(0,a.yg)("inlineCode",{parentName:"li"},"RefreshButton")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"EditButton")," (if applicable)"))),(0,a.yg)("h2",{id:"api-reference"},"API Reference"),(0,a.yg)("h3",{id:"showview-properties"},"ShowView Properties"),(0,a.yg)(g,{id:"showview-properties",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Prop"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Default"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"children")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"ReactNode")),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"Content to render inside the view")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"className")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"Additional CSS classes for the container"))))),(0,a.yg)("h3",{id:"showviewheader-properties"},"ShowViewHeader Properties"),(0,a.yg)(g,{id:"showviewheader-properties",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("p",null,"Includes ",(0,a.yg)("inlineCode",{parentName:"p"},"EditButton")," (if resource has an edit page), ",(0,a.yg)("inlineCode",{parentName:"p"},"ListButton"),", and ",(0,a.yg)("inlineCode",{parentName:"p"},"RefreshButton")," by default."),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Prop"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Default"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"resource")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"Current resource"),(0,a.yg)("td",{parentName:"tr",align:null},"Override the resource name for title and actions")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"title")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"Auto-generated"),(0,a.yg)("td",{parentName:"tr",align:null},"Custom title for the header")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"hideBreadcrumb")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"boolean")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"false")),(0,a.yg)("td",{parentName:"tr",align:null},"Set to ",(0,a.yg)("inlineCode",{parentName:"td"},"true")," to hide the breadcrumb")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"wrapperClassName")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"CSS classes for the header's main wrapper div")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"headerClassName")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("inlineCode",{parentName:"td"},"string")),(0,a.yg)("td",{parentName:"tr",align:null},"-"),(0,a.yg)("td",{parentName:"tr",align:null},"CSS classes for the div containing title and actions"))))),(0,a.yg)("h2",{id:"advanced-usage"},"Advanced Usage"),(0,a.yg)("h3",{id:"custom-title"},"Custom Title"),(0,a.yg)(g,{id:"custom-title",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import {\n  ShowView,\n  ShowViewHeader,\n} from "@/components/refine-ui/views/show-view";\n\nexport default function PostShowPage() {\n  return (\n    <ShowView>\n      <ShowViewHeader title="Post Details" />\n      {/* Your record details */}\n    </ShowView>\n  );\n}\n'))),(0,a.yg)("h3",{id:"hide-breadcrumb"},"Hide Breadcrumb"),(0,a.yg)(g,{id:"hide-breadcrumb",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"<ShowViewHeader hideBreadcrumb={true} />\n"))),(0,a.yg)("h3",{id:"custom-css-classes"},"Custom CSS Classes"),(0,a.yg)(g,{id:"custom-css-classes",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'<ShowView className="my-custom-show">\n  <ShowViewHeader\n    wrapperClassName="custom-header-wrapper"\n    headerClassName="custom-header-content"\n  />\n</ShowView>\n'))),(0,a.yg)("h3",{id:"with-data-loading"},"With Data Loading"),(0,a.yg)(g,{id:"with-data-loading",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import { useShow } from "@refinedev/core";\n\nexport default function PostShowPage() {\n  const { queryResult } = useShow();\n  const { data, isLoading, error } = queryResult;\n\n  if (error) {\n    return (\n      <ShowView>\n        <ShowViewHeader />\n        <div>Error loading record</div>\n      </ShowView>\n    );\n  }\n\n  return (\n    <ShowView>\n      <ShowViewHeader />\n      <LoadingOverlay loading={isLoading}>\n        {/* Display your record details */}\n        <div>\n          <h3>{data?.data.title}</h3>\n          <p>{data?.data.content}</p>\n        </div>\n      </LoadingOverlay>\n    </ShowView>\n  );\n}\n'))),(0,a.yg)("h3",{id:"display-field-components"},"Display Field Components"),(0,a.yg)(g,{id:"display-field-components",mdxType:"DocThumbsUpDownFeedbackWidget"},(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'import {\n  ShowView,\n  ShowViewHeader,\n} from "@/components/refine-ui/views/show-view";\nimport { TextField } from "@/components/refine-ui/fields/text-field";\nimport { DateField } from "@/components/refine-ui/fields/date-field";\n\nexport default function PostShowPage() {\n  const { queryResult } = useShow();\n  const { data, isLoading } = queryResult;\n  const record = data?.data;\n\n  return (\n    <ShowView>\n      <ShowViewHeader />\n      <LoadingOverlay loading={isLoading}>\n        <div className="space-y-4">\n          <div>\n            <label className="font-semibold">Title:</label>\n            <TextField value={record?.title} />\n          </div>\n          <div>\n            <label className="font-semibold">Created At:</label>\n            <DateField value={record?.createdAt} />\n          </div>\n          <div>\n            <label className="font-semibold">Content:</label>\n            <TextField value={record?.content} />\n          </div>\n        </div>\n      </LoadingOverlay>\n    </ShowView>\n  );\n}\n'))))}h.isMDXComponent=!0}}]);